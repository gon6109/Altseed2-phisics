<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Altseed2</name>
    </assembly>
    <members>
        <member name="T:Altseed2.AltseedContext">
            <summary>
            Altseed2における<see cref="T:System.Threading.SynchronizationContext"/>
            </summary>
        </member>
        <member name="P:Altseed2.AltseedContext.Count">
            <summary>
            溜められた処理の個数を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AltseedContext.IsUpdated">
            <summary>
            更新されるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.AltseedContext.Update">
            <summary>
            溜められた処理の実行を行います。
            </summary>
        </member>
        <member name="T:Altseed2.GraphicsDevice">
            <summary>
            描画方法を表します。
            </summary>
        </member>
        <member name="F:Altseed2.GraphicsDevice.Default">
            <summary>
            実行環境をもとに自動選択
            </summary>
        </member>
        <member name="F:Altseed2.GraphicsDevice.DirectX">
            <summary>
            DirectX
            </summary>
        </member>
        <member name="F:Altseed2.GraphicsDevice.Metal">
            <summary>
            Metal
            </summary>
        </member>
        <member name="F:Altseed2.GraphicsDevice.Vulkan">
            <summary>
            Vulkan
            </summary>
        </member>
        <member name="T:Altseed2.FramerateMode">
            <summary>
            フレームレートモード
            </summary>
        </member>
        <member name="F:Altseed2.FramerateMode.Variable">
            <summary>
            可変フレームレート
            </summary>
        </member>
        <member name="F:Altseed2.FramerateMode.Constant">
            <summary>
            固定フレームレート
            </summary>
        </member>
        <member name="T:Altseed2.ResourceType">
            <summary>
            リソースの種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.ResourceType.StaticFile">
            <summary>
            <see cref="T:Altseed2.StaticFile"/>を表す
            </summary>
        </member>
        <member name="F:Altseed2.ResourceType.StreamFile">
            <summary>
            <see cref="T:Altseed2.StreamFile"/>を表す
            </summary>
        </member>
        <member name="F:Altseed2.ResourceType.Texture2D">
            <summary>
            <see cref="T:Altseed2.Texture2D"/>を表す
            </summary>
        </member>
        <member name="F:Altseed2.ResourceType.Font">
            <summary>
            <see cref="T:Altseed2.Font"/>を表す
            </summary>
        </member>
        <member name="F:Altseed2.ResourceType.Sound">
            <summary>
            <see cref="T:Altseed2.Sound"/>を表す
            </summary>
        </member>
        <member name="T:Altseed2.Key">
            <summary>
            キーボードのキーの種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.Key.Unknown">
            <summary>
            未知のキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num0">
            <summary>
            テンキーの0
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num1">
            <summary>
            テンキーの1
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num2">
            <summary>
            テンキーの2
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num3">
            <summary>
            テンキーの3
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num4">
            <summary>
            テンキーの4
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num5">
            <summary>
            テンキーの5
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num6">
            <summary>
            テンキーの6
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num7">
            <summary>
            テンキーの7
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num8">
            <summary>
            テンキーの8
            </summary>
        </member>
        <member name="F:Altseed2.Key.Num9">
            <summary>
            テンキーの9
            </summary>
        </member>
        <member name="F:Altseed2.Key.Right">
            <summary>
            矢印キー右
            </summary>
        </member>
        <member name="F:Altseed2.Key.Left">
            <summary>
            矢印キー左
            </summary>
        </member>
        <member name="F:Altseed2.Key.Down">
            <summary>
            矢印キー下
            </summary>
        </member>
        <member name="F:Altseed2.Key.Up">
            <summary>
            矢印キー上
            </summary>
        </member>
        <member name="F:Altseed2.Key.LeftShift">
            <summary>
            左側のShiftキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.LeftControl">
            <summary>
            左側のCtrlキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.LeftAlt">
            <summary>
            左側のAltキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.LeftWin">
            <summary>
            左側のWinキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.RightShift">
            <summary>
            右側のShiftキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.RightControl">
            <summary>
            右側のCtrlキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.RightAlt">
            <summary>
            右側のAltキー
            </summary>
        </member>
        <member name="F:Altseed2.Key.RightWin">
            <summary>
            右側のWinキー
            </summary>
        </member>
        <member name="T:Altseed2.ButtonState">
            <summary>
            ボタンの押下状態を表します。
            </summary>
        </member>
        <member name="F:Altseed2.ButtonState.Free">
            <summary>
            ボタンが押されていない状態
            </summary>
        </member>
        <member name="F:Altseed2.ButtonState.Push">
            <summary>
            ボタンが押された瞬間の状態
            </summary>
        </member>
        <member name="F:Altseed2.ButtonState.Hold">
            <summary>
            ボタンが押されている状態
            </summary>
        </member>
        <member name="F:Altseed2.ButtonState.Release">
            <summary>
            ボタンが話された瞬間の状態
            </summary>
        </member>
        <member name="T:Altseed2.MouseButton">
            <summary>
            マウスのボタンの種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.ButtonLeft">
            <summary>
            左ボタン
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.ButtonRight">
            <summary>
            中央ボタン
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.ButtonMiddle">
            <summary>
            右ボタン
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.SubButton1">
            <summary>
            サブボタン1
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.SubButton2">
            <summary>
            サブボタン2
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.SubButton3">
            <summary>
            サブボタン3
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.SubButton4">
            <summary>
            サブボタン4
            </summary>
        </member>
        <member name="F:Altseed2.MouseButton.SubButton5">
            <summary>
            サブボタン5
            </summary>
        </member>
        <member name="T:Altseed2.CursorMode">
            <summary>
            カーソルの状態を表します。
            </summary>
        </member>
        <member name="F:Altseed2.CursorMode.Normal">
            <summary>
            通常の状態
            </summary>
        </member>
        <member name="F:Altseed2.CursorMode.Hidden">
            <summary>
            隠れている状態
            </summary>
        </member>
        <member name="F:Altseed2.CursorMode.Disable">
            <summary>
            使用できない状態
            </summary>
        </member>
        <member name="T:Altseed2.JoystickType">
            <summary>
            ジョイスティックの種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.Other">
            <summary>
            未知の種類のジョイスティック
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.DualShock3">
            <summary>
            PlayStation DualShock3
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.DualShock4">
            <summary>
            PlayStation DualShock4
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.DualShock4Slim">
            <summary>
            PlayStation DualShock4Slim
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.XBOX360">
            <summary>
            XBOX360のジョイスティック
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.JoyconL">
            <summary>
            NintendoSwitch 左のJon-Con
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.JoyconR">
            <summary>
            NintendoSwitch 右のJon-Con
            </summary>
        </member>
        <member name="F:Altseed2.JoystickType.ProController">
            <summary>
            NintendoSwitch ProController
            </summary>
        </member>
        <member name="T:Altseed2.JoystickButton">
            <summary>
            ジョイスティックのボタンの種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightDown">
            <summary>
            右側下ボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightRight">
            <summary>
            右側右ボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightLeft">
            <summary>
            右側左ボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightUp">
            <summary>
            右側上ボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.LeftBumper">
            <summary>
            Lボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightBumper">
            <summary>
            Rボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.Back">
            <summary>
            戻るボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.Start">
            <summary>
            スタートボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.Guide">
            <summary>
            ガイドボタン
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.LeftThumb">
            <summary>
            左スティック押し込み
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.RightThumb">
            <summary>
            右スティック押し込み
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.DPadUp">
            <summary>
            十字キー上
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.DPadRight">
            <summary>
            十字キー右
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.DPadDown">
            <summary>
            十字キー下
            </summary>
        </member>
        <member name="F:Altseed2.JoystickButton.DPadLeft">
            <summary>
            十字キー左
            </summary>
        </member>
        <member name="T:Altseed2.JoystickAxis">
            <summary>
            ジョイスティックの軸の種類を表します。
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.LeftX">
            <summary>
            左スティック横
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.LeftY">
            <summary>
            左スティック縦
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.RightX">
            <summary>
            右スティック横
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.RightY">
            <summary>
            右スティック縦
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.LeftTrigger">
            <summary>
            左トリガー
            </summary>
        </member>
        <member name="F:Altseed2.JoystickAxis.RightTrigger">
            <summary>
            右トリガー
            </summary>
        </member>
        <member name="T:Altseed2.BuiltinShaderType">
            <summary>
            ビルド済みシェーダの種類を表します
            </summary>
        </member>
        <member name="T:Altseed2.WritingDirection">
            <summary>
            テキストの描画方向
            </summary>
        </member>
        <member name="F:Altseed2.WritingDirection.Vertical">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="F:Altseed2.WritingDirection.Horizontal">
            <summary>
            横書き
            </summary>
        </member>
        <member name="T:Altseed2.TextureFilter">
            <summary>
            テクスチャをフィルタリングする方法を表します。
            </summary>
        </member>
        <member name="T:Altseed2.TextureWrapMode">
            <summary>
            テクスチャをサンプリングする方法を表します。
            </summary>
        </member>
        <member name="T:Altseed2.ToolUsage">
            <summary>
            ツール機能の使用方法(描画位置)
            </summary>
        </member>
        <member name="F:Altseed2.ToolUsage.Overwrapped">
            <summary>
            画面の上に表示
            </summary>
        </member>
        <member name="F:Altseed2.ToolUsage.Main">
            <summary>
            画面を表示せずにツールのみ表示
            </summary>
        </member>
        <member name="T:Altseed2.ToolDir">
            <summary>
            ツール機能で使用する方向
            </summary>
        </member>
        <member name="F:Altseed2.ToolDir.Left">
            <summary>
            左方向
            </summary>
        </member>
        <member name="F:Altseed2.ToolDir.Right">
            <summary>
            右方向
            </summary>
        </member>
        <member name="F:Altseed2.ToolDir.Up">
            <summary>
            上方向
            </summary>
        </member>
        <member name="F:Altseed2.ToolDir.Down">
            <summary>
            下方向
            </summary>
        </member>
        <member name="T:Altseed2.ToolCond">
            <summary>
            バイナリ演算子を使用して複数の値を結合しないでください
            </summary>
        </member>
        <member name="F:Altseed2.ToolCond.Always">
            <summary>
            常に変数を設定します
            </summary>
        </member>
        <member name="F:Altseed2.ToolCond.Once">
            <summary>
            ランタイムセッションごとに変数を1回設定します（成功した最初の呼び出しのみ）
            </summary>
        </member>
        <member name="F:Altseed2.ToolCond.FirstUseEver">
            <summary>
            オブジェクト/ウィンドウに永続的に保存されたデータがない場合（.iniファイルにエントリがない場合）、変数を設定します
            </summary>
        </member>
        <member name="F:Altseed2.ToolCond.Appearing">
            <summary>
            オブジェクト/ウィンドウが非表示/非アクティブになった後（または初めて）表示される場合は、変数を設定します
            </summary>
        </member>
        <member name="T:Altseed2.ToolTreeNodeFlags">
            <summary>
            ツール機能のTreeNodeに適用する設定を表します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.Selected">
            <summary>
            Draw as selected
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.Framed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.AllowItemOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.NoTreePushOnOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.NoAutoOpenOnLog">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.DefaultOpen">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.OpenOnDoubleClick">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.OpenOnArrow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.Leaf">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.Bullet">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.FramePadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.SpanAvailWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.SpanFullWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolTreeNodeFlags.NavLeftJumpsBackHere">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.ToolInputTextFlags">
            <summary>
            ツール機能においてインプットされるテキストの設定を表します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CharsDecimal">
            <summary>
            0123456789.+-*/ を許可します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CharsHexadecimal">
            <summary>
            0123456789ABCDEFabcdef を許可します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CharsUppercase">
            <summary>
            a..z を A..Z に変換します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CharsNoBlank">
            <summary>
            スペースとタブを除外します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.AutoSelectAll">
            <summary>
            最初にマウスフォーカスしたときにテキスト全体を選択します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.EnterReturnsTrue">
            <summary>
            （値が変更されるたびにではなく）Enterが押されたときに 'true' を返します。 'IsItemDeactivatedAfterEdit()' 関数を調べることを検討してください。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CallbackCompletion">
            <summary>
            Tabキーを押したときのコールバック（完了処理のため）
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CallbackHistory">
            <summary>
            上下矢印を押すとコールバック（履歴処理用）
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CallbackAlways">
            <summary>
            各反復でのコールバック。 ユーザーコードは、カーソル位置を照会し、テキストバッファーを変更できます。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CallbackCharFilter">
            <summary>
            置換または破棄する文字入力のコールバック。 'EventChar'を変更して置換または破棄するか、コールバックで1を返して破棄します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.AllowTabInput">
            <summary>
            Tabキーを押すと、テキストフィールドに'\t'という文字が入力されます。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CtrlEnterForNewLine">
            <summary>
            複数行モードでは、Enterでフォーカスを外し、Ctrl + Enterで新しい行を追加します（デフォルトは反対です：Ctrl + Enterでフォーカスを外し、Enterで行を追加します）。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.NoHorizontalScroll">
            <summary>
            カーソルの水平方向のフォローを無効にする
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.AlwaysInsertMode">
            <summary>
            インサートモード
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.ReadOnly">
            <summary>
            読み取り専用モード
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.Password">
            <summary>
            パスワードモード。すべての文字を'*'として表示します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.NoUndoRedo">
            <summary>
            元に戻す/やり直しを無効にします。 アクティブな間は入力テキストがテキストデータを所有していることに注意してください。独自の元に戻す/やり直しスタックを提供する場合は、たとえば ClearActiveID（）を呼び出します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CharsScientific">
            <summary>
            0123456789.+-*/eE (科学表記法の入力) を許可します
            </summary>
        </member>
        <member name="F:Altseed2.ToolInputTextFlags.CallbackResize">
            <summary>
            バッファ容量のコールバックはリクエストを変更し（'buf_size 'パラメータ値を超えて）、文字列が大きくなります。 文字列のサイズを変更する必要がある場合に通知します（サイズのキャッシュを保持する文字列タイプの場合）。 コールバックで新しいBufSizeが提供され、それを尊重する必要があります。
            </summary>
        </member>
        <member name="T:Altseed2.ToolColorEditFlags">
            <summary>
            ツール機能における色の設定を表します
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoAlpha">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': Alphaコンポーネントを無視します（入力ポインターから3つのコンポーネントのみを読み取ります）。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoPicker">
            <summary>
            'ColorEdit': 色付きの正方形をクリックしたときにピッカーを無効にします。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoOptions">
            <summary>
            'ColorEdit': 入力/小さなプレビューを右クリックしたときのオプションメニューの切り替えを無効にします。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoSmallPreview">
            <summary>
            'ColorEdit, ColorPicker': 入力の横にある色付きの正方形プレビューを無効にします。 （例：入力のみを表示する）
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoInputs">
            <summary>
            'ColorEdit, ColorPicker: 入力スライダー/テキストウィジェットを無効にします（たとえば、小さなプレビューの色付きの四角形のみを表示します）。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoTooltip">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': プレビューをホバーするときにツールチップを無効にします。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoLabel">
            <summary>
            'ColorEdit, ColorPicker': インラインテキストラベルの表示を無効にします（ラベルは引き続きツールチップとピッカーに転送されます）。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoSidePreview">
            <summary>
            'ColorPicker': ピッカーの右側の大きなカラープレビューを無効にし、代わりに小さな色付きの正方形プレビューを使用します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.NoDragDrop">
            <summary>
            'ColorEdit': ドラッグアンドドロップターゲットを無効にします。 'ColorButton': ドラッグアンドドロップソースを無効にします。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.AlphaBar">
            <summary>
            'ColorEdit, ColorPicker': ピッカーに垂直アルファバー/グラデーションを表示します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.AlphaPreview">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': プレビューを不透明ではなく、チェッカーボード上の透明色として表示します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.AlphaPreviewHalf">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': 不透明ではなく、半不透明/半市松模様を表示します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.HDR">
            <summary>
            '(WIP) ColorEdit': 現在、RGBAエディションで0.0f..1.0fの制限のみを無効にします（注：おそらくFloatフラグも使用したいでしょう）。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.DisplayRGB">
            <summary>
            'ColorEdit': RGB/HSV/Hexの_display_タイプをオーバーライドします。 'ColorPicker': 1つ以上のRGB/HSV/Hexを使用して任意の組み合わせを選択します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.DisplayHSV">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.DisplayHex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.Uint8">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': 0..255としてフォーマットされた_display_値。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.Float">
            <summary>
            'ColorEdit, ColorPicker, ColorButton': _display_値は、0..255整数ではなく0.0f..1.0f浮動小数点としてフォーマットされます。 整数による値の往復はありません。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.PickerHueBar">
            <summary>
            'ColorPicker': Hueのバー、Sat/Valueの長方形。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.PickerHueWheel">
            <summary>
            'ColorPicker': Hueのホイール、Sat/Valueの三角形。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.InputRGB">
            <summary>
            'ColorEdit, ColorPicker': RGB形式の入出力データ
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.InputHSV">
            <summary>
            'ColorEdit, ColorPicker': HSV形式の入力および出力データ。
            </summary>
        </member>
        <member name="F:Altseed2.ToolColorEditFlags.OptionsDefault">
            <summary>
            デフォルトオプション。 'SetColorEditOptions()' を使用して、アプリケーションのデフォルトを設定できます。 意図はおそらくあなたの呼び出しのほとんどでそれらをオーバーライドしたくないことです。 ユーザーがオプションメニューから選択できるようにするか、起動時に'SetColorEditOptions()'を1回呼び出します。
            </summary>
        </member>
        <member name="T:Altseed2.ToolSelectableFlags">
            <summary>
            ツール機能のSelectableに適用する設定を表します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.DontClosePopups">
            <summary>
            このボタンをクリックしても、親ポップアップウィンドウは閉じません
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.SpanAllColumns">
            <summary>
            選択可能なフレームはすべての列にまたがることができます（テキストは現在の列に収まります）
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.AllowDoubleClick">
            <summary>
            ダブルクリックした場合もプレスイベントを生成
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.Disabled">
            <summary>
            選択できません、グレー表示されたテキストを表示します
            </summary>
        </member>
        <member name="F:Altseed2.ToolSelectableFlags.AllowItemOverlap">
            <summary>
            (WIP) ヒットテストにより、後続のウィジェットがこのウィジェットとオーバーラップできるようにします
            </summary>
        </member>
        <member name="T:Altseed2.ToolWindowFlags">
            <summary>
            ツール機能のウィンドウにおける設定を表します
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoTitleBar">
            <summary>
            タイトルバーを無効にする
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoResize">
            <summary>
            右下のグリップを使ったユーザーのサイズ変更を無効にします
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoMove">
            <summary>
            ユーザーがウィンドウを移動できないようにする
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoScrollbar">
            <summary>
            スクロールバーを無効にします（ウィンドウはマウスまたはプログラムでスクロールできます）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoScrollWithMouse">
            <summary>
            ユーザーがマウスホイールで垂直にスクロールできないようにします。 子ウィンドウでは、NoScrollbarも設定されていない限り、マウスホイールは親に転送されます。
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoCollapse">
            <summary>
            ユーザー折りたたみウィンドウをダブルクリックして無効にします
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.AlwaysAutoResize">
            <summary>
            フレームごとにコンテンツごとにウィンドウのサイズを変更します
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoBackground">
            <summary>
            描画背景色('WindowBg'など)および外枠を無効にします。 'SetNextWindowBgAlpha(0.0f)'を使用する場合と同様です。
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoSavedSettings">
            <summary>
            .iniファイルの設定をロード/保存しない
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoMouseInputs">
            <summary>
            パススルーでテストをホバリング、キャッチマウスを無効にします。
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.MenuBar">
            <summary>
            メニューバーがあります
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.HorizontalScrollbar">
            <summary>
            水平スクロールバーの表示を許可します（デフォルトではオフ）。 'Begin()'を呼び出す前に、'SetNextWindowContentSize(Vector2F(width, 0.0f));'を使用して幅を指定できます。
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoFocusOnAppearing">
            <summary>
            非表示から表示状態に移行するときにフォーカスを取得できないようにします
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoBringToFrontOnFocus">
            <summary>
            フォーカスを取得するときにウィンドウを前面に移動することを無効にします（たとえば、クリックするか、プログラムでフォーカスを与える）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.AlwaysVerticalScrollbar">
            <summary>
            常に垂直スクロールバーを表示します（'ContentSize.Y &lt; Size.Y'の場合でも）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.AlwaysHorizontalScrollbar">
            <summary>
            常に水平スクロールバーを表示します（'ContentSize.x &lt; Size.x'であっても）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.AlwaysUseWindowPadding">
            <summary>
            境界線のない子ウィンドウが'style.WindowPadding'を使用するようにします（境界線のない子ウィンドウではデフォルトで無視されるため、より便利です）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoNavInputs">
            <summary>
            ウィンドウ内にゲームパッド/キーボードナビゲーションはありません
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.NoNavFocus">
            <summary>
            ゲームパッド/キーボードナビゲーションでこのウィンドウにフォーカスしない（たとえば、CTRL + TABでスキップ）
            </summary>
        </member>
        <member name="F:Altseed2.ToolWindowFlags.UnsavedDocument">
            <summary>
            ###演算子の使用を避けるために、IDに影響を与えずにタイトルに'*'を追加します。 タブ/ドッキングコンテキストで使用する場合、クロージャーでタブが選択され、クロージャーは1フレーム延期され、コードがちらつきなしに（確認ポップアップなどを使用して）クロージャーをキャンセルできるようにします。
            </summary>
        </member>
        <member name="T:Altseed2.ToolTabBarFlags">
            <summary>
            ツール機能のタブバーにおける設定を表します
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.Reorderable">
            <summary>
            タブを手動でドラッグして並べ替えることができます+リストの最後に新しいタブが追加されます
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.AutoSelectNewTabs">
            <summary>
            新しいタブが表示されたら自動的に選択する
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.TabListPopupButton">
            <summary>
            ボタンを無効にしてタブリストポップアップを開きます
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.NoCloseWithMiddleMouseButton">
            <summary>
            マウスの中ボタンでタブを閉じる（p_open！= NULLで送信される）動作を無効にします。 'if（IsItemHovered（）&amp;&amp; IsMouseClicked（2））* p_open = false'を使用すると、ユーザー側でこの動作を再現できます。
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.NoTabListScrollingButtons">
            <summary>
            スクロールボタンを無効にする（フィッティングポリシーが'FittingPolicyScroll'の場合に適用）
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.NoTooltip">
            <summary>
            タブをホバーするときにツールチップを無効にする
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.FittingPolicyResizeDown">
            <summary>
            収まらないタブのサイズを変更する
            </summary>
        </member>
        <member name="F:Altseed2.ToolTabBarFlags.FittingPolicyScroll">
            <summary>
            タブが収まらない場合にスクロールボタンを追加する
            </summary>
        </member>
        <member name="T:Altseed2.ToolGlyphRange">
            <summary>
            ツール機能を使ってフォントを読み込む際の範囲を指定します。ビット演算は行わないでください。
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.Cyrillic">
            <summary>
            キリル文字
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.Japanese">
            <summary>
            日本語
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.ChineseFull">
            <summary>
            繁体字中国語
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.ChineseSimplifiedCommon">
            <summary>
            簡体字中国語
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.Korean">
            <summary>
            韓国語
            </summary>
        </member>
        <member name="F:Altseed2.ToolGlyphRange.Thai">
            <summary>
            タイ語
            </summary>
        </member>
        <member name="T:Altseed2.ToolFocused">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolFocused.ChildWindows">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolFocused.RootWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolFocused.AnyWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolFocused.RootAndChildWindows">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.ToolColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TextDisabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.WindowBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ChildBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.PopupBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Border">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.BorderShadow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.FrameBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.FrameBgHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.FrameBgActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TitleBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TitleBgActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TitleBgCollapsed">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.MenuBarBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ScrollbarBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ScrollbarGrab">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ScrollbarGrabHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ScrollbarGrabActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.CheckMark">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.SliderGrab">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.SliderGrabActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Button">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ButtonHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ButtonActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Header">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.HeaderHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.HeaderActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Separator">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.SeparatorHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.SeparatorActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ResizeGrip">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ResizeGripHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ResizeGripActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.Tab">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TabHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TabActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TabUnfocused">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TabUnfocusedActive">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.PlotLines">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.PlotLinesHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.PlotHistogram">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.PlotHistogramHovered">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.TextSelectedBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.DragDropTarget">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.NavHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.NavWindowingHighlight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.NavWindowingDimBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.ModalWindowDimBg">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolColor.COUNT">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.ToolStyleVar">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.Alpha">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.WindowPadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.WindowRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.WindowBorderSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.WindowMinSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.WindowTitleAlign">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ChildRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ChildBorderSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.PopupRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.PopupBorderSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.FramePadding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.FrameRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.FrameBorderSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ItemSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ItemInnerSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.IndentSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ScrollbarSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ScrollbarRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.GrabMinSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.GrabRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.TabRounding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.ButtonTextAlign">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.SelectableTextAlign">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolStyleVar.COUNT">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.ToolComboFlags">
            <summary>
            ツール機能のBeginComboに適用する設定を表します。
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.PopupAlignLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.HeightSmall">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.HeightRegular">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.HeightLarge">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.HeightLargest">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.NoArrowButton">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.NoPreview">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolComboFlags.HeightMask_">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.ToolHoveredFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.ChildWindows">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.RootWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.AnyWindow">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.AllowWhenBlockedByPopup">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.AllowWhenBlockedByActiveItem">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.AllowWhenOverlapped">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.AllowWhenDisabled">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.RectOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:Altseed2.ToolHoveredFlags.RootAndChildWindows">
            <summary>
            
            </summary>
        </member>
        <member name="T:Altseed2.FFTWindow">
            <summary>
            音のスペクトル解析に使用する窓関数
            </summary>
        </member>
        <member name="T:Altseed2.LogLevel">
            <summary>
            ログレベルを表します。
            </summary>
        </member>
        <member name="T:Altseed2.LogCategory">
            <summary>
            ログの範囲を表します。
            </summary>
        </member>
        <member name="T:Altseed2.Configuration">
            <summary>
            Altseed2 の設定を表すクラス
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.IsFullscreen">
            <summary>
            全画面モードかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.IsResizable">
            <summary>
            画面サイズ可変かどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.DeviceType">
            <summary>
            描画方法を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.WaitVSync">
            <summary>
            垂直同期信号を待つかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.EnabledCoreModules">
            <summary>
            初期化するモジュールを指定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.ConsoleLoggingEnabled">
            <summary>
            ログをコンソールに出力するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.FileLoggingEnabled">
            <summary>
            ログをファイルに出力するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.LogFileName">
            <summary>
            ログファイル名を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Configuration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Configuration"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Configuration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Configuration.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Configuration.Finalize">
            <summary>
            <see cref="T:Altseed2.Configuration"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Configuration.VisibleTransformInfo">
            <summary>
            変形に関する情報の表示を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Configuration.#ctor">
            <summary>
            <see cref="T:Altseed2.Configuration"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.Core">
            <summary>
            C++のCoreとの仲介を担うクラス
            </summary>
        </member>
        <member name="P:Altseed2.Core.DeltaSecond">
            <summary>
            前のフレームからの経過時間(秒)を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Core.CurrentFPS">
            <summary>
            現在のFPSを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Core.TargetFPS">
            <summary>
            目標のFPSを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Core.FramerateMode">
            <summary>
            フレームレートモードを取得または設定します。デフォルトでは可変フレームレートです。
            </summary>
        </member>
        <member name="M:Altseed2.Core.GetBaseObjectCount">
            <summary>
            内部オブジェクトの数を取得します。
            </summary>
            <returns>数</returns>
        </member>
        <member name="M:Altseed2.Core.PrintAllBaseObjectName">
            <summary>
            全ての内部オブジェクトの名前を出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Core.Initialize(System.String,System.Int32,System.Int32,Altseed2.Configuration)">
            <summary>
            初期化処理を行います。
            </summary>
            <param name="title">ウィンドウの左上に表示されるウィンドウん名</param>
            <param name="width">ウィンドウの横幅</param>
            <param name="height">ウィンドウの縦幅</param>
            <param name="config">初期化時の設定</param>
            <returns>初期化処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Core.DoEvent">
            <summary>
            イベントを実行します。
            </summary>
            <returns>イベントが進行出来たらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Core.Terminate">
            <summary>
            終了処理を行います。
            </summary>
        </member>
        <member name="M:Altseed2.Core.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Core.Finalize">
            <summary>
            <see cref="T:Altseed2.Core"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Int8Array">
            <summary>
            8ビット整数の配列のクラスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.Int8Array.Count">
            <summary>
            格納されている要素の数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Int8Array.Clear">
            <summary>
            データをクリアします。
            </summary>
        </member>
        <member name="M:Altseed2.Int8Array.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Int8Array.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインタにコピーします。
            </summary>
            <param name="ptr">ポインタ</param>
        </member>
        <member name="M:Altseed2.Int8Array.GetAt(System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Altseed2.Int8Array.SetAt(System.Int32,System.Byte)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
            <param name="value">値</param>
        </member>
        <member name="M:Altseed2.Int8Array.Create(System.Int32)">
            <summary>
            インスタンスを作成します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Int8Array.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Int8Array"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Int8Array.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Int8Array.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Int8Array.Int8Array_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@)">
            <summary>
            <see cref="M:Altseed2.Int8Array.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Count"><see cref="P:Altseed2.Int8Array.Count"/></param>
        </member>
        <member name="M:Altseed2.Int8Array.Finalize">
            <summary>
            <see cref="T:Altseed2.Int8Array"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Int8Array.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.Int8Array.GetEnumerator">
            <summary>
            列挙子を返します。
            </summary>
            <returns>このインスタンスの列挙子</returns>
        </member>
        <member name="T:Altseed2.Int32Array">
            <summary>
            32ビット整数の配列のクラスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.Int32Array.Count">
            <summary>
            格納されている要素の数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Int32Array.Clear">
            <summary>
            データをクリアします。
            </summary>
        </member>
        <member name="M:Altseed2.Int32Array.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Int32Array.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインタにコピーします。
            </summary>
            <param name="ptr">ポインタ</param>
        </member>
        <member name="M:Altseed2.Int32Array.GetAt(System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Altseed2.Int32Array.SetAt(System.Int32,System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
            <param name="value">値</param>
        </member>
        <member name="M:Altseed2.Int32Array.Create(System.Int32)">
            <summary>
            インスタンスを作成します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Int32Array.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Int32Array"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Int32Array.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Int32Array.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Int32Array.Int32Array_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@)">
            <summary>
            <see cref="M:Altseed2.Int32Array.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Count"><see cref="P:Altseed2.Int32Array.Count"/></param>
        </member>
        <member name="M:Altseed2.Int32Array.Finalize">
            <summary>
            <see cref="T:Altseed2.Int32Array"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Int32Array.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.Int32Array.GetEnumerator">
            <summary>
            列挙子を返します。
            </summary>
            <returns>このインスタンスの列挙子</returns>
        </member>
        <member name="T:Altseed2.VertexArray">
            <summary>
            頂点データの配列のクラスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.VertexArray.Count">
            <summary>
            格納されている要素の数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.VertexArray.Clear">
            <summary>
            データをクリアします。
            </summary>
        </member>
        <member name="M:Altseed2.VertexArray.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.VertexArray.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインタにコピーします。
            </summary>
            <param name="ptr">ポインタ</param>
        </member>
        <member name="M:Altseed2.VertexArray.GetAt(System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Altseed2.VertexArray.SetAt(System.Int32,Altseed2.Vertex)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
            <param name="value">値</param>
        </member>
        <member name="M:Altseed2.VertexArray.Create(System.Int32)">
            <summary>
            インスタンスを作成します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.VertexArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.VertexArray"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.VertexArray.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.VertexArray.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.VertexArray.VertexArray_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@)">
            <summary>
            <see cref="M:Altseed2.VertexArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Count"><see cref="P:Altseed2.VertexArray.Count"/></param>
        </member>
        <member name="M:Altseed2.VertexArray.Finalize">
            <summary>
            <see cref="T:Altseed2.VertexArray"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.VertexArray.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.VertexArray.GetEnumerator">
            <summary>
            列挙子を返します。
            </summary>
            <returns>このインスタンスの列挙子</returns>
        </member>
        <member name="T:Altseed2.FloatArray">
            <summary>
            浮動小数点数の配列のクラスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.FloatArray.Count">
            <summary>
            格納されている要素の数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.FloatArray.Clear">
            <summary>
            データをクリアします。
            </summary>
        </member>
        <member name="M:Altseed2.FloatArray.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.FloatArray.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインタにコピーします。
            </summary>
            <param name="ptr">ポインタ</param>
        </member>
        <member name="M:Altseed2.FloatArray.GetAt(System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Altseed2.FloatArray.SetAt(System.Int32,System.Single)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
            <param name="value">値</param>
        </member>
        <member name="M:Altseed2.FloatArray.Create(System.Int32)">
            <summary>
            インスタンスを作成します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.FloatArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.FloatArray"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.FloatArray.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.FloatArray.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.FloatArray.FloatArray_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@)">
            <summary>
            <see cref="M:Altseed2.FloatArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Count"><see cref="P:Altseed2.FloatArray.Count"/></param>
        </member>
        <member name="M:Altseed2.FloatArray.Finalize">
            <summary>
            <see cref="T:Altseed2.FloatArray"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.FloatArray.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.FloatArray.GetEnumerator">
            <summary>
            列挙子を返します。
            </summary>
            <returns>このインスタンスの列挙子</returns>
        </member>
        <member name="T:Altseed2.Vector2FArray">
            <summary>
            2次元ベクトルの配列のクラスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2FArray.Count">
            <summary>
            格納されている要素の数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector2FArray.Clear">
            <summary>
            データをクリアします。
            </summary>
        </member>
        <member name="M:Altseed2.Vector2FArray.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインタにコピーします。
            </summary>
            <param name="ptr">ポインタ</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.GetAt(System.Int32)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.SetAt(System.Int32,Altseed2.Vector2F)">
            <summary>
            インデックスアクセス
            </summary>
            <param name="index">インデックス</param>
            <param name="value">値</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.Create(System.Int32)">
            <summary>
            インスタンスを作成します。
            </summary>
            <param name="size">要素数</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Vector2FArray"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Vector2FArray.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Vector2FArray.Vector2FArray_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@)">
            <summary>
            <see cref="M:Altseed2.Vector2FArray.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Count"><see cref="P:Altseed2.Vector2FArray.Count"/></param>
        </member>
        <member name="M:Altseed2.Vector2FArray.Finalize">
            <summary>
            <see cref="T:Altseed2.Vector2FArray"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2FArray.Item(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.Vector2FArray.GetEnumerator">
            <summary>
            列挙子を返します。
            </summary>
            <returns>このインスタンスの列挙子</returns>
        </member>
        <member name="T:Altseed2.Resources">
            <summary>
            リソースのクラスを表します。
            </summary>
        </member>
        <member name="M:Altseed2.Resources.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Resources.GetResourcesCount(Altseed2.ResourceType)">
            <summary>
            指定した種類のリソースの個数を返します。
            </summary>
            <param name="type">個数を検索するリソースの種類</param>
            <returns>指定した種類のリソースの個数</returns>
        </member>
        <member name="M:Altseed2.Resources.Clear">
            <summary>
            登録されたリソースをすべて削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Resources.Reload">
            <summary>
            リソースの再読み込みを行います。
            </summary>
        </member>
        <member name="M:Altseed2.Resources.Finalize">
            <summary>
            <see cref="T:Altseed2.Resources"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Cursor">
            <summary>
            カーソルを表します。
            </summary>
        </member>
        <member name="M:Altseed2.Cursor.Create(System.String,Altseed2.Vector2I)">
            <summary>
            指定したpng画像を読み込んだ<see cref="T:Altseed2.Cursor"/>のインスタンスを生成します。
            </summary>
            <param name="path">読み込むpng画像のパス</param>
            <param name="hot">カーソルのクリック判定座標を指定します。カーソル画像はここが中心となります。</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>指定したpng画像を読み込んだ<see cref="T:Altseed2.Cursor"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.Cursor.Finalize">
            <summary>
            <see cref="T:Altseed2.Cursor"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Keyboard">
            <summary>
            キーボードを表します。
            </summary>
        </member>
        <member name="M:Altseed2.Keyboard.GetKeyState(Altseed2.Key)">
            <summary>
            キーの状態を取得します。
            </summary>
            <param name="key">キー</param>
            <returns>ボタンの押下状態</returns>
        </member>
        <member name="M:Altseed2.Keyboard.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Keyboard.Finalize">
            <summary>
            <see cref="T:Altseed2.Keyboard"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Mouse">
            <summary>
            マウスを表します。
            </summary>
        </member>
        <member name="P:Altseed2.Mouse.Position">
            <summary>
            マウスカーソルの座標を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Mouse.CursorMode">
            <summary>
            カーソルのモードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Mouse.Wheel">
            <summary>
            マウスホイールの回転量を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Mouse.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Mouse.GetMouseButtonState(Altseed2.MouseButton)">
            <summary>
            マウスボタンの状態を取得します。
            </summary>
            <param name="button">状態を取得するマウスのボタン</param>
            <returns>マウスボタンの状態</returns>
        </member>
        <member name="M:Altseed2.Mouse.SetCursorImage(Altseed2.Cursor)">
            <summary>
            カーソル画像をセットします。
            </summary>
            <param name="cursor">状態を取得するマウスのボタン</param>
        </member>
        <member name="M:Altseed2.Mouse.Finalize">
            <summary>
            <see cref="T:Altseed2.Mouse"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.JoystickInfo">
            <summary>
            ジョイスティックコントローラを表します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.Name">
            <summary>
            ジョイスティックの名前を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.IsGamepad">
            <summary>
            ジョイスティックがGamepadとして使えるかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.GamepadName">
            <summary>
            ジョイスティックがGamepadとして使える時、その名前を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.Vendor">
            <summary>
            製造者IDを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.Product">
            <summary>
            製品IDを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.JoystickInfo.Version">
            <summary>
            ジョイスティックのバージョンを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.JoystickInfo.IsJoystickType(Altseed2.JoystickType)">
            <summary>
            指定したジョイスティックの種類に合致するかどうかを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.JoystickInfo.Finalize">
            <summary>
            <see cref="T:Altseed2.JoystickInfo"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Joystick">
            <summary>
            ジョイスティックを表すクラス
            </summary>
        </member>
        <member name="P:Altseed2.Joystick.ConnectedJoystickCount">
            <summary>
            接続されているジョイスティックの数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Joystick.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Joystick.IsPresent(System.Int32)">
            <summary>
            指定したジョイスティックが存在しているかどうかを取得します。
            </summary>
            <param name="joystickIndex">ジョイスティックのインデックス</param>
            <returns>指定したジョイスティックが存在したらtrue，存在していなかったらfalse</returns>
        </member>
        <member name="M:Altseed2.Joystick.GetJoystickInfo(System.Int32)">
            <summary>
            指定したジョイスティックの情報を取得します。
            </summary>
            <param name="joystickIndex">ジョイスティックのインデックス</param>
        </member>
        <member name="M:Altseed2.Joystick.Finalize">
            <summary>
            <see cref="T:Altseed2.Joystick"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Joystick.MaxCount">
            <summary>
            ジョイスティックの最大同時接続数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Joystick.GetButtonState(System.Int32,System.Int32)">
            <summary>
            ボタンの状態をインデックスで取得します。
            </summary>
            <param name="joystickIndex">検索するジョイスティックのインデックス</param>
            <param name="buttonIndex">状態を検索するボタンのインデックス</param>
            <returns>指定インデックスのボタンの状態</returns>
        </member>
        <member name="M:Altseed2.Joystick.GetButtonState(System.Int32,Altseed2.JoystickButton)">
            <summary>
            ボタンの状態を種類から取得します。
            </summary>
            <param name="joystickIndex">検索するジョイスティックのインデックス</param>
            <param name="type">状態を検索するボタンの種類</param>
            <returns>指定種類のボタンの状態</returns>
        </member>
        <member name="M:Altseed2.Joystick.GetAxisState(System.Int32,System.Int32)">
            <summary>
            軸の状態をインデックスで取得します。
            </summary>
            <param name="joystickIndex">検索するジョイスティックのインデックス</param>
            <param name="axisIndex">状態を検索する軸のインデックス</param>
            <returns>指定インデックスの軸の状態</returns>
        </member>
        <member name="M:Altseed2.Joystick.GetAxisState(System.Int32,Altseed2.JoystickAxis)">
            <summary>
            軸の状態を軸の種類で取得します。
            </summary>
            <param name="joystickIndex">検索するジョイスティックのインデックス</param>
            <param name="type">状態を検索する軸の種類</param>
            <returns>指定種類の軸の状態</returns>
        </member>
        <member name="T:Altseed2.Graphics">
            <summary>
            グラフィックの制御を行うクラス
            </summary>
        </member>
        <member name="P:Altseed2.Graphics.CommandList">
            <summary>
            コマンドリストを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Graphics.BuiltinShader">
            <summary>
            組み込みのシェーダを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Graphics.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Graphics.BeginFrame(Altseed2.RenderPassParameter)">
            <summary>
            描画を開始します。
            </summary>
            <returns>正常に開始した場合は　true 。それ以外の場合は false。</returns>
        </member>
        <member name="M:Altseed2.Graphics.EndFrame">
            <summary>
            描画を終了します。
            </summary>
            <returns>正常に終了した場合は　true 。それ以外の場合は false。</returns>
        </member>
        <member name="M:Altseed2.Graphics.DoEvents">
            <summary>
            イベントを処理します。
            </summary>
            <returns>正常に処理した場合は　true 。それ以外の場合は false。</returns>
        </member>
        <member name="M:Altseed2.Graphics.SaveScreenshot(System.String)">
            <summary>
            スクリーンショットを保存します。
            </summary>
            <param name="path">出力先のパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Graphics.Finalize">
            <summary>
            <see cref="T:Altseed2.Graphics"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.TextureBase">
            <summary>
            テクスチャのベースクラス
            </summary>
        </member>
        <member name="P:Altseed2.TextureBase.Size">
            <summary>
            テクスチャの大きさ(ピクセル)を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TextureBase.WrapMode">
            <summary>
            テクスチャをサンプリングする方法を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextureBase.FilterType">
            <summary>
            テクスチャをフィルタリングする方法を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextureBase.Format">
            <summary>
            テクスチャのフォーマットを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.TextureBase.Save(System.String)">
            <summary>
            png画像として保存します。
            </summary>
            <param name="path">保存先</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>処理に成功したらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.TextureBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.TextureBase"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.TextureBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.TextureBase.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.TextureBase.TextureBase_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,Altseed2.Vector2I@,Altseed2.TextureFormat@)">
            <summary>
            <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Size"><see cref="P:Altseed2.TextureBase.Size"/></param>
            <param name="Format"><see cref="P:Altseed2.TextureBase.Format"/></param>
        </member>
        <member name="M:Altseed2.TextureBase.OnDeserialization(System.Object)">
            <summary>
            デシリアライズ時に実行
            </summary>
            <param name="sender">現在はサポートされていない 常にnullを返します。</param>
        </member>
        <member name="M:Altseed2.TextureBase.Finalize">
            <summary>
            <see cref="T:Altseed2.TextureBase"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Texture2D">
            <summary>
            テクスチャのクラス
            </summary>
        </member>
        <member name="P:Altseed2.Texture2D.Path">
            <summary>
            読み込んだファイルのパスを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Texture2D.Load(System.String)">
            <summary>
            指定したファイルからテクスチャを読み込みます。
            </summary>
            <param name="path">読み込むファイルのパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:Altseed2.Texture2D.Reload">
            <summary>
            再読み込みを行います。
            </summary>
            <returns>再読み込みに成功したら true。それ以外の場合は false</returns>
        </member>
        <member name="M:Altseed2.Texture2D.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Texture2D"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Texture2D.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Texture2D.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Texture2D.Texture2D_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.String@)">
            <summary>
            <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Path"><see cref="P:Altseed2.Texture2D.Path"/></param>
        </member>
        <member name="M:Altseed2.Texture2D.OnDeserialization(System.Object)">
            <summary>
            デシリアライズ時に実行
            </summary>
            <param name="sender">現在はサポートされていない 常にnullを返します。</param>
        </member>
        <member name="M:Altseed2.Texture2D.Finalize">
            <summary>
            <see cref="T:Altseed2.Texture2D"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Texture2D.LoadStrict(System.String)">
            <summary>
            指定パスからテクスチャを読み込みます。
            </summary>
            <param name="path">読み込むテクスチャのパス</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる、または使用出来ない文字を含んでいる</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定されたテクスチャが見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が指定するパスが見つからない</exception>
            <exception cref="T:System.SystemException">テクスチャが破損または読み込みに失敗</exception>
            <returns><paramref name="path"/>をパスに持つテクスチャのデータを格納した<see cref="T:Altseed2.Texture2D"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Texture2D.LoadAsync(System.String)">
            <summary>
            非同期読み込みを行います。
            </summary>
            <param name="path">読み込むパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns><paramref name="path"/>のファイルから読み込まれたテクスチャ</returns>
        </member>
        <member name="T:Altseed2.RenderTexture">
            <summary>
            ポストエフェクトやカメラにおける描画先のクラス
            </summary>
        </member>
        <member name="M:Altseed2.RenderTexture.Create(Altseed2.Vector2I,Altseed2.TextureFormat)">
            <summary>
            指定したサイズとフォーマットを持つRenderTextureの新しいインスタンスを生成します。
            </summary>
            <param name="size">サイズ</param>
            <param name="format">テクスチャのフォーマット</param>
            <returns>sizeとformatを持つRenderTextureの新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.RenderTexture.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RenderTexture"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RenderTexture.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RenderTexture.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RenderTexture.OnDeserialization(System.Object)">
            <summary>
            デシリアライズ時に実行
            </summary>
            <param name="sender">現在はサポートされていない 常にnullを返します。</param>
        </member>
        <member name="M:Altseed2.RenderTexture.Finalize">
            <summary>
            <see cref="T:Altseed2.RenderTexture"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Material">
            <summary>
            マテリアル
            </summary>
        </member>
        <member name="P:Altseed2.Material.AlphaBlend">
            <summary>
            描画時のアルファブレンドを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Material.Create">
            <summary>
            マテリアルを生成する
            </summary>
        </member>
        <member name="M:Altseed2.Material.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Material"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Material.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Material.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Material.Finalize">
            <summary>
            <see cref="T:Altseed2.Material"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Material.GetMatrix44F(System.String)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.Matrix44F"/>のインスタンスを取得します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.Matrix44F"/>のインスタンスの名前</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
            <returns><paramref name="key"/>を名前として持つ<see cref="T:Altseed2.Matrix44F"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.Material.GetShader(Altseed2.ShaderStage)">
            <summary>
            指定した種類のシェーダを取得します。
            </summary>
            <param name="shaderStage">検索するシェーダのタイプ</param>
            <returns><paramref name="shaderStage"/>に一致するタイプのシェーダ</returns>
        </member>
        <member name="M:Altseed2.Material.GetTexture(System.String)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.TextureBase"/>のインスタンスを取得します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.TextureBase"/>のインスタンスの名前</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
            <returns><paramref name="key"/>を名前として持つ<see cref="T:Altseed2.TextureBase"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.Material.GetVector4F(System.String)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.Vector4F"/>のインスタンスを取得します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.Vector4F"/>のインスタンスの名前</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
            <returns><paramref name="key"/>を名前として持つ<see cref="T:Altseed2.Vector4F"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.Material.SetMatrix44F(System.String,Altseed2.Matrix44F)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.Matrix44F"/>の値を設定します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.Matrix44F"/>のインスタンスの名前</param>
            <param name="value">設定する<see cref="T:Altseed2.Matrix44F"/>のインスタンスの値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Material.SetShader(Altseed2.Shader)">
            <summary>
            シェーダを設定します。
            </summary>
            <param name="shader">設定するシェーダ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="shader"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Material.SetTexture(System.String,Altseed2.TextureBase)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.TextureBase"/>の値を設定します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.TextureBase"/>のインスタンスの名前</param>
            <param name="value">設定する<see cref="T:Altseed2.TextureBase"/>のインスタンスの値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Material.SetVector4F(System.String,Altseed2.Vector4F)">
            <summary>
            指定した名前を持つ<see cref="T:Altseed2.Vector4F"/>の値を設定します。
            </summary>
            <param name="key">検索する<see cref="T:Altseed2.Vector4F"/>のインスタンスの名前</param>
            <param name="value">設定する<see cref="T:Altseed2.Vector4F"/>のインスタンスの値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="key"/>がnull</exception>
        </member>
        <member name="T:Altseed2.Renderer">
            <summary>
            レンダラのクラス
            </summary>
        </member>
        <member name="M:Altseed2.Renderer.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Renderer.DrawSprite(Altseed2.RenderedSprite)">
            <summary>
            スプライトを描画します。
            </summary>
            <param name="sprite">描画する<see cref="T:Altseed2.RenderedSprite"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Renderer.DrawText(Altseed2.RenderedText)">
            <summary>
            テキストを描画します。
            </summary>
            <param name="text">描画する<see cref="T:Altseed2.RenderedText"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Renderer.DrawPolygon(Altseed2.RenderedPolygon)">
            <summary>
            ポリゴンを描画します。
            </summary>
            <param name="polygon">描画する<see cref="T:Altseed2.RenderedPolygon"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Renderer.Render">
            <summary>
            コマンドリストを描画します。
            </summary>
        </member>
        <member name="M:Altseed2.Renderer.SetCamera(Altseed2.RenderedCamera)">
            <summary>
            使用するカメラを設定します。
            </summary>
            <param name="camera">描画するカメラ</param>
        </member>
        <member name="M:Altseed2.Renderer.ResetCamera">
            <summary>
            使用するカメラの設定をリセットします。
            </summary>
        </member>
        <member name="M:Altseed2.Renderer.Finalize">
            <summary>
            <see cref="T:Altseed2.Renderer"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.CommandList">
            <summary>
            コマンドリストのクラス
            </summary>
        </member>
        <member name="P:Altseed2.CommandList.ScreenTextureFormat">
            <summary>
            GetScreenTextureで取得するテクスチャのフォーマットを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.CommandList.GetScreenTexture">
            <summary>
            スクリーンに表示されている内容をテクスチャとして取得します。
            </summary>
            <returns>スクリーンに表示されている内容を反映したテクスチャ</returns>
        </member>
        <member name="M:Altseed2.CommandList.SetRenderTarget(Altseed2.RenderTexture,Altseed2.RenderPassParameter)">
            <summary>
            描画する対象のテクスチャを設定します。
            </summary>
            <param name="target">描画先のテクスチャ</param>
            <param name="renderPassParameter">描画に使用する設定</param>
        </member>
        <member name="M:Altseed2.CommandList.RenderToRenderTexture(Altseed2.Material,Altseed2.RenderTexture,Altseed2.RenderPassParameter)">
            <summary>
            指定したテクスチャに描画を行います。
            </summary>
            <param name="material">描画に使用するマテリアル</param>
            <param name="target">描画先のテクスチャ</param>
            <param name="renderPassparameter">描画に使用する設定</param>
        </member>
        <member name="M:Altseed2.CommandList.RenderToRenderTarget(Altseed2.Material)">
            <summary>
            設定されたターゲットに描画を行います。
            </summary>
            <param name="material">描画に使用するマテリアル</param>
        </member>
        <member name="M:Altseed2.CommandList.CopyTexture(Altseed2.RenderTexture,Altseed2.RenderTexture)">
            <summary>
            テクスチャの内容をコピーします。
            </summary>
            <param name="src">コピーするテクスチャ</param>
            <param name="dst">コピー先のテクスチャ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="src"/>, <paramref name="dst"/>のいずれかがnull</exception>
        </member>
        <member name="M:Altseed2.CommandList.Finalize">
            <summary>
            <see cref="T:Altseed2.CommandList"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Rendered">
            <summary>
            描画されるオブジェクトの基本クラスを表します
            </summary>
        </member>
        <member name="P:Altseed2.Rendered.Transform">
            <summary>
            変換行列を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Rendered.Id">
            <summary>
            BaseObjectのIdを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Rendered.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Rendered"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Rendered.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Rendered.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Rendered.Finalize">
            <summary>
            <see cref="T:Altseed2.Rendered"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.RenderedSprite">
            <summary>
            スプライトのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RenderedSprite.Texture">
            <summary>
            テクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedSprite.Src">
            <summary>
            描画範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedSprite.Material">
            <summary>
            マテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedSprite.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedSprite.AlphaBlend">
            <summary>
            描画時のアルファブレンドを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedSprite.Create">
            <summary>
            スプライトを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedSprite.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RenderedSprite"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RenderedSprite.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RenderedSprite.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RenderedSprite.Finalize">
            <summary>
            <see cref="T:Altseed2.RenderedSprite"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.RenderedText">
            <summary>
            テキストのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.MaterialGlyph">
            <summary>
            文字の描画に使用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.MaterialImage">
            <summary>
            テクスチャ文字の描画に使用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.Text">
            <summary>
            テキストを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.Font">
            <summary>
            フォントを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.Weight">
            <summary>
            文字の太さを取得または設定します。(0 ~ 255)
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.IsEnableKerning">
            <summary>
            カーニングの有無を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.WritingDirection">
            <summary>
            行の方向を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.CharacterSpace">
            <summary>
            字間をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.LineGap">
            <summary>
            行間をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.TextureSize">
            <summary>
            テキストを描画したときのサイズを取得します
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedText.AlphaBlend">
            <summary>
            描画時のアルファブレンドを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedText.Create">
            <summary>
            テキストを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedText.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RenderedText"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RenderedText.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RenderedText.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RenderedText.Finalize">
            <summary>
            <see cref="T:Altseed2.RenderedText"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.RenderedPolygon">
            <summary>
            ポリゴンのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.Vertexes">
            <summary>
            頂点情報を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.Texture">
            <summary>
            テクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.Src">
            <summary>
            描画範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.Material">
            <summary>
            マテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.AlphaBlend">
            <summary>
            描画時のアルファブレンドを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedPolygon.Create">
            <summary>
            ポリゴンを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedPolygon.CreateVertexesByVector2F(Altseed2.Vector2FArray)">
            <summary>
            頂点情報
            </summary>
        </member>
        <member name="M:Altseed2.RenderedPolygon.OverwriteVertexesColor(Altseed2.Color)">
            <summary>
            頂点情報
            </summary>
        </member>
        <member name="M:Altseed2.RenderedPolygon.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RenderedPolygon"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RenderedPolygon.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RenderedPolygon.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RenderedPolygon.Finalize">
            <summary>
            <see cref="T:Altseed2.RenderedPolygon"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedPolygon.Buffers">
            <summary>
            インデックスバッファーを取得または設定します。
            </summary>
            <exception cref="T:System.ArgumentNullException">設定しようとした値がnull</exception>
        </member>
        <member name="M:Altseed2.RenderedPolygon.SetDefaultIndexBuffer">
            <summary>
            インデックスバッファーを既定のもの設定します。
            </summary>
        </member>
        <member name="T:Altseed2.RenderedCamera">
            <summary>
            カメラのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RenderedCamera.ViewMatrix">
            <summary>
            RenderPassParameterを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedCamera.TargetTexture">
            <summary>
            TargetTextureを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RenderedCamera.RenderPassParameter">
            <summary>
            RenderPassParameterを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedCamera.Create">
            <summary>
            RenderedCameraを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderedCamera.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RenderedCamera"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RenderedCamera.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RenderedCamera.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RenderedCamera.Finalize">
            <summary>
            <see cref="T:Altseed2.RenderedCamera"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.BuiltinShader">
            <summary>
            組み込みシェーダの取得を行うクラス
            </summary>
        </member>
        <member name="M:Altseed2.BuiltinShader.Create(Altseed2.BuiltinShaderType)">
            <summary>
            シェーダを取得します。
            </summary>
            <param name="type">シェーダの種類</param>
            <returns><paramref name="type"/>に対応した種類の組み込みの<see cref="T:Altseed2.Shader"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.BuiltinShader.Finalize">
            <summary>
            <see cref="T:Altseed2.BuiltinShader"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.ShaderCompileResult">
            <summary>
            シェーダのコンパイル結果を表すクラス
            </summary>
        </member>
        <member name="P:Altseed2.ShaderCompileResult.Value">
            <summary>
            コンパイルに失敗した場合はnull
            </summary>
        </member>
        <member name="P:Altseed2.ShaderCompileResult.Message">
            <summary>
            コンパイル結果のメッセージ
            </summary>
        </member>
        <member name="M:Altseed2.ShaderCompileResult.Finalize">
            <summary>
            <see cref="T:Altseed2.ShaderCompileResult"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.ShaderCompileResult.GetValuePtr">
            <summary>
            <see cref="M:Altseed2.Shader.cbg_Shader_Release(System.IntPtr)"/>を行わず<see cref="P:Altseed2.ShaderCompileResult.Value"/>を取得する
            </summary>
            <returns><see cref="P:Altseed2.ShaderCompileResult.Value"/></returns>
            <remarks><see cref="T:Altseed2.Shader"/>デシリアライズ時に仕様</remarks>
        </member>
        <member name="T:Altseed2.Shader">
            <summary>
            シェーダ
            </summary>
        </member>
        <member name="P:Altseed2.Shader.StageType">
            <summary>
            シェーダの種類を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Shader.Code">
            <summary>
            インスタンス生成に使用したコードを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Shader.Name">
            <summary>
            名前を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Shader.Compile(System.String,System.String,Altseed2.ShaderStage)">
            <summary>
            コードをコンパイルしてシェーダを生成します。
            </summary>
            <param name="name">シェーダの名前</param>
            <param name="code">コンパイルするコード</param>
            <param name="shaderStage"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="code"/>のいずれかがnull</exception>
            <returns>コンパイルの結果生成されたシェーダ</returns>
        </member>
        <member name="M:Altseed2.Shader.CompileFromFile(System.String,System.String,Altseed2.ShaderStage)">
            <summary>
            ファイルからコードをコンパイルしてシェーダを生成します。
            </summary>
            <param name="name">シェーダの名前</param>
            <param name="path">コンパイルするコードのパス</param>
            <param name="shaderStage"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>, <paramref name="path"/>のいずれかがnull</exception>
            <returns>コンパイルの結果生成されたシェーダ</returns>
        </member>
        <member name="M:Altseed2.Shader.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Shader"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Shader.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Shader.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Shader.Shader_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,Altseed2.ShaderStage@,System.String@,System.String@)">
            <summary>
            <see cref="M:Altseed2.Shader.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="StageType"><see cref="P:Altseed2.Shader.StageType"/></param>
            <param name="Code"><see cref="P:Altseed2.Shader.Code"/></param>
            <param name="Name"><see cref="P:Altseed2.Shader.Name"/></param>
        </member>
        <member name="M:Altseed2.Shader.Finalize">
            <summary>
            <see cref="T:Altseed2.Shader"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Shader.Create(System.String,System.String,Altseed2.ShaderStage)">
            <summary>
            コードをコンパイルして<see cref="T:Altseed2.Shader"/>の新しいインスタンスを生成します。
            </summary>
            <param name="name">シェーダにつける名前</param>
            <param name="code">シェーダのコード</param>
            <param name="shaderStage">シェーダの種類</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>または<paramref name="code"/>がnull</exception>
            <returns><paramref name="code"/>をコンパイルしてできる<see cref="T:Altseed2.Shader"/>の新しいインスタンス コンパイルに失敗した場合はnull</returns>
        </member>
        <member name="M:Altseed2.Shader.CreateFromFile(System.String,System.String,Altseed2.ShaderStage)">
            <summary>
            ファイルに書かれたコードをコンパイルして<see cref="T:Altseed2.Shader"/>の新しいインスタンスを生成します。
            </summary>
            <param name="name">シェーダにつける名前</param>
            <param name="path">シェーダのコードが書かれたファイルのパス</param>
            <param name="shaderStage">シェーダの種類</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>または<paramref name="path"/>がnull</exception>
            <returns><paramref name="path"/>に書かれたコードをコンパイルしてできる<see cref="T:Altseed2.Shader"/>の新しいインスタンス コンパイルに失敗した場合はnull</returns>
        </member>
        <member name="M:Altseed2.Shader.TryCreate(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)">
            <summary>
            コードをコンパイルして<see cref="T:Altseed2.Shader"/>の新しいインスタンスを生成します。
            </summary>
            <param name="name">シェーダにつける名前</param>
            <param name="code">シェーダのコード</param>
            <param name="shaderStage">シェーダの種類</param>
            <param name="shader"><paramref name="code"/>をコンパイルしてできる<see cref="T:Altseed2.Shader"/>の新しいインスタンス コンパイルに失敗した場合はnull</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="name"/>または<paramref name="code"/>がnull</exception>
            <returns><paramref name="code"/>をコンパイルした際のメッセージ</returns>
        </member>
        <member name="M:Altseed2.Shader.TryCreateFromFile(System.String,System.String,Altseed2.ShaderStage,Altseed2.Shader@)">
            <summary>
            ファイルに書かれたコードをコンパイルして<see cref="T:Altseed2.Shader"/>の新しいインスタンスを生成します。
            </summary>
            <param name="name">シェーダにつける名前</param>
            <param name="path">シェーダのコードが書かれたファイルのパス</param>
            <param name="shaderStage">シェーダの種類</param>
            <param name="shader"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>に書かれたコードをコンパイルしてできる<see cref="T:Altseed2.Shader"/>の新しいインスタンス コンパイルに失敗した場合はnull<paramref name="name"/>または<paramref name="path"/>がnull</exception>
            <returns><paramref name="path"/>に書かれたコードをコンパイルした際のメッセージ</returns>
        </member>
        <member name="T:Altseed2.Glyph">
            <summary>
            文字情報
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.TextureSize">
            <summary>
            文字テクスチャのサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.TextureIndex">
            <summary>
            文字テクスチャのインデックスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.Position">
            <summary>
            文字の座標を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.Size">
            <summary>
            文字のサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.Offset">
            <summary>
            文字のオフセットを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Glyph.GlyphWidth">
            <summary>
            文字の幅を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Glyph.Finalize">
            <summary>
            <see cref="T:Altseed2.Glyph"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Font">
            <summary>
            フォント
            </summary>
        </member>
        <member name="P:Altseed2.Font.Size">
            <summary>
            フォントのサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Font.Ascent">
            <summary>
            フォントのベースラインからトップラインまでの距離を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Font.Descent">
            <summary>
            フォントのベースラインからボトムラインまでの距離を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Font.LineGap">
            <summary>
            フォントの行間の距離を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Font.IsStaticFont">
            <summary>
            StaticFontかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Font.Path">
            <summary>
            読み込んだファイルのパスを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Font.LoadDynamicFont(System.String,System.Int32)">
            <summary>
            フォントファイルを読み込んでFontの新しいインスタンスを生成します。
            </summary>
            <param name="path">読み込むフォントのパス</param>
            <param name="size">フォントのサイズ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns><paramref name="path"/>の指定するファイルから生成されたフォント</returns>
        </member>
        <member name="M:Altseed2.Font.LoadStaticFont(System.String)">
            <summary>
            FontGeneratorで生成したフォントを読み込んでFontの新しいインスタンスを生成します。
            </summary>
            <param name="path">読み込むフォントのパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns><paramref name="path"/>の指定するファイルから生成されたフォント</returns>
        </member>
        <member name="M:Altseed2.Font.GenerateFontFile(System.String,System.String,System.Int32,System.String)">
            <summary>
            a2fフォントを生成します。
            </summary>
            <param name="dynamicFontPath">読み込むtruetypeフォントのパス</param>
            <param name="staticFontPath">生成するa2fフォントのパス</param>
            <param name="size">フォントのサイズ</param>
            <param name="characters">フォント化させる文字列</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="dynamicFontPath"/>, <paramref name="staticFontPath"/>のいずれかがnull</exception>
            <returns>生成できたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Font.GetGlyph(System.Int32)">
            <summary>
            文字情報を取得します。
            </summary>
            <param name="character">文字</param>
            <returns>文字</returns>
        </member>
        <member name="M:Altseed2.Font.GetFontTexture(System.Int32)">
            <summary>
            指定した文字のテクスチャを取得します。
            </summary>
            <param name="index">インデックス</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:Altseed2.Font.GetKerning(System.Int32,System.Int32)">
            <summary>
            カーニングを取得します。
            </summary>
            <param name="c1">文字1</param>
            <param name="c2">文字2</param>
            <returns>カーニング</returns>
        </member>
        <member name="M:Altseed2.Font.CreateImageFont(Altseed2.Font)">
            <summary>
            テクスチャ追加対応フォントを生成します。
            </summary>
            <param name="baseFont">ベースとなるフォント</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="baseFont"/>がnull</exception>
            <returns>テクスチャ追加対応フォント</returns>
        </member>
        <member name="M:Altseed2.Font.AddImageGlyph(System.Int32,Altseed2.Texture2D)">
            <summary>
            テクスチャ文字を追加します。
            </summary>
            <param name="character">文字</param>
            <param name="texture">テクスチャ</param>
        </member>
        <member name="M:Altseed2.Font.GetImageGlyph(System.Int32)">
            <summary>
            テクスチャ文字を取得します。
            </summary>
            <param name="character">文字</param>
            <returns>テクスチャ文字</returns>
        </member>
        <member name="M:Altseed2.Font.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Font"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Font.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Font.Font_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@,System.Boolean@,System.String@)">
            <summary>
            <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Size"><see cref="P:Altseed2.Font.Size"/></param>
            <param name="IsStaticFont"><see cref="P:Altseed2.Font.IsStaticFont"/></param>
            <param name="Path"><see cref="P:Altseed2.Font.Path"/></param>
        </member>
        <member name="M:Altseed2.Font.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            デシリアライズ時に実行
            </summary>
            <param name="sender">現在はサポートされていない 常にnullを返します。</param>
        </member>
        <member name="M:Altseed2.Font.Finalize">
            <summary>
            <see cref="T:Altseed2.Font"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Font.LoadDynamicFontStrict(System.String,System.Int32)">
            <summary>
            フォントファイルを読み込んで<see cref="T:Altseed2.Font"/>の新しいインスタンスを生成します。
            </summary>
            <param name="path">フォントファイルのパス</param>
            <param name="size">フォントサイズ</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる又は使用できない文字を含む</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="size"/>が0以下</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定したファイルが見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が長すぎる</exception>
            <exception cref="T:System.SystemException">ファイルが破損していたまたは読み込みに失敗した</exception>
            <returns><paramref name="path"/>の指定するファイルから生成されたフォント</returns>
        </member>
        <member name="M:Altseed2.Font.LoadStaticFontStrict(System.String)">
            <summary>
            FontGeneratorで生成したフォントを読み込んでFontの新しいインスタンスを生成します。
            </summary>
            <param name="path">フォントファイルのパス</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる又は使用できない文字を含む</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定したファイルが見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が長すぎる</exception>
            <exception cref="T:System.SystemException">ファイルが破損していたまたは読み込みに失敗した</exception>
            <returns><paramref name="path"/>の指定するファイルから生成されたフォント</returns>
        </member>
        <member name="M:Altseed2.Font.AddImageGlyph(System.Char,Altseed2.Texture2D)">
            <summary>
            テクスチャ文字を追加します。
            </summary>
            <param name="character">文字</param>
            <param name="texture">テクスチャ</param>
        </member>
        <member name="T:Altseed2.CullingSystem">
            <summary>
            カリングのクラス
            </summary>
        </member>
        <member name="P:Altseed2.CullingSystem.DrawingRenderedCount">
            <summary>
            描画されているRenderedの個数を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.CullingSystem.DrawingRenderedIds">
            <summary>
            描画されているRenderedのIdの配列を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.CullingSystem.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.CullingSystem.Register(Altseed2.Rendered)">
            <summary>
            Renderedをカリングシステムに登録します。
            </summary>
            <param name="rendered">登録するRendered</param>
        </member>
        <member name="M:Altseed2.CullingSystem.Unregister(Altseed2.Rendered)">
            <summary>
            Renderedをカリングシステムから登録解除します。
            </summary>
            <param name="rendered">登録解除するRendered</param>
        </member>
        <member name="M:Altseed2.CullingSystem.UpdateAABB">
            <summary>
            RenderedのAABBを更新します。
            </summary>
        </member>
        <member name="M:Altseed2.CullingSystem.Finalize">
            <summary>
            <see cref="T:Altseed2.CullingSystem"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Tool">
            <summary>
            imguiのツール処理を行うクラス
            </summary>
        </member>
        <member name="P:Altseed2.Tool.ToolUsage">
            <summary>
            ツールの使用方法を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.AddFontFromFileTTF(System.String,System.Single,Altseed2.ToolGlyphRange)">
            <summary>
            パスからフォントを読み込みます。パックされたファイルは非対応です。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Begin(System.String,Altseed2.ToolWindowFlags)">
            <summary>
            'End()' を呼び出してください。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.End">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.NewFrame">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Render">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Dummy(Altseed2.Vector2F)">
            <summary>
            空白を生成します。
            </summary>
            <param name="size">空白のサイズ</param>
        </member>
        <member name="M:Altseed2.Tool.Text(System.String)">
            <summary>
            テキストを生成します。
            </summary>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.TextUnformatted(System.String)">
            <summary>
            
            </summary>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.TextWrapped(System.String)">
            <summary>
            
            </summary>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.TextColored(Altseed2.Color,System.String)">
            <summary>
            色付きテキストを生成します。
            </summary>
            <param name="color">テキストの色</param>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.TextDisabled(System.String)">
            <summary>
            灰字のテキストを生成します。
            </summary>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.BulletText(System.String)">
            <summary>
            箇条書きテキストを生成します。
            </summary>
            <param name="text">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.LabelText(System.String,System.String)">
            <summary>
            横にラベルの付いたテキストを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="text">横に表示するラベルのテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>, <paramref name="text"/>のいずれかがnull</exception>
        </member>
        <member name="M:Altseed2.Tool.CollapsingHeader(System.String,Altseed2.ToolTreeNodeFlags)">
            <summary>
            折り畳み式のヘッダを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.TreeNode(System.String)">
            <summary>
            ツリーのノードを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.TreeNodeEx(System.String,Altseed2.ToolTreeNodeFlags)">
            <summary>
            ツリーのノードを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.TreePop">
            <summary>
            TreeNodeのツリーを開きます。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextItemOpen(System.Boolean,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Button(System.String,Altseed2.Vector2F)">
            <summary>
            ボタンを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="size">サイズ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.CheckBox(System.String,System.Boolean@)">
            <summary>
            チェックボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="isChecked">チェックされているかどうか</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.RadioButton(System.String,System.Boolean)">
            <summary>
            ラジオボタンを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="active">チェックが入っているかどうか</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ArrowButton(System.String,Altseed2.ToolDir)">
            <summary>
            矢印ボタンを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="dir">矢印の向き</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InvisibleButton(System.String,Altseed2.Vector2F)">
            <summary>
            見えないボタンを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="size">サイズ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ListBox(System.String,System.Int32@,System.String,System.Int32)">
            <summary>
            リストボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="current">選択中のアイテムのインデックス -1で選択無し</param>
            <param name="items">タブ文字を用いて分割したアイテム</param>
            <param name="popupMaxHeightInItems">一度に表示されるアイテムの個数</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>アイテムがクリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.Selectable(System.String,System.Boolean@,Altseed2.ToolSelectableFlags)">
            <summary>
            選択式のテキストを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <param name="selected">選択されているかどうか</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputText(System.String,System.String,System.Int32,Altseed2.ToolInputTextFlags)">
            <summary>
            テキストを入力するボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="input">入力するテキスト</param>
            <param name="maxLength">処理するテキストの最大長</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>, <paramref name="input"/>のいずれかがnull</exception>
            <returns>入力されたテキスト</returns>
        </member>
        <member name="M:Altseed2.Tool.InputTextWithHint(System.String,System.String,System.String,System.Int32,Altseed2.ToolInputTextFlags)">
            <summary>
            ヒント付きのテキスト入力ボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="hint">インプットされている文字列長が0の時に表示されるヒント</param>
            <param name="input">入力するテキスト</param>
            <param name="maxLength">処理するテキストの最大長</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>, <paramref name="hint"/>, <paramref name="input"/>のいずれかがnull</exception>
            <returns>入力されたテキスト</returns>
        </member>
        <member name="M:Altseed2.Tool.InputTextMultiline(System.String,System.String,System.Int32,Altseed2.Vector2F,Altseed2.ToolInputTextFlags)">
            <summary>
            複数行のテキストが入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="input">入力するテキスト</param>
            <param name="maxLength">処理するテキストの最大長</param>
            <param name="size">サイズ</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>, <paramref name="input"/>のいずれかがnull</exception>
            <returns>入力されたテキスト</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt(System.String,System.Int32@)">
            <summary>
            1つの整数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt2(System.String,Altseed2.Int32Array)">
            <summary>
            2つの整数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt3(System.String,Altseed2.Int32Array)">
            <summary>
            3つの整数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt4(System.String,Altseed2.Int32Array)">
            <summary>
            4つの整数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputFloat(System.String,System.Single@)">
            <summary>
            1つの小数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputFloat2(System.String,Altseed2.FloatArray)">
            <summary>
            2つの小数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.InputFloat3(System.String,Altseed2.FloatArray)">
            <summary>
            3つの小数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.InputFloat4(System.String,Altseed2.FloatArray)">
            <summary>
            4つの小数が入力可能なボックスを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="array">扱う値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.SliderInt(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            1つのスライドで値が増減するバーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <param name="speed">スライドで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderInt2(System.String,Altseed2.Int32Array,System.Single,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderInt3(System.String,Altseed2.Int32Array,System.Single,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderInt4(System.String,Altseed2.Int32Array,System.Single,System.Int32,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat(System.String,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            1つのスライドで値が増減するバーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <param name="speed">スライドで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat2(System.String,Altseed2.FloatArray,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat3(System.String,Altseed2.FloatArray,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat4(System.String,Altseed2.FloatArray,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SliderAngle(System.String,System.Single@)">
            <summary>
            スライドで値が増減する，角度を扱うバーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="angle">扱う角度の値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.VSliderInt(System.String,Altseed2.Vector2F,System.Int32@,System.Int32,System.Int32)">
            <summary>
            スライドで値が増減する縦バーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="size">サイズ</param>
            <param name="value">扱う値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.VSliderFloat(System.String,Altseed2.Vector2F,System.Single@,System.Single,System.Single)">
            <summary>
            スライドで値が増減する縦バーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="size">サイズ</param>
            <param name="value">扱う値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.DragInt(System.String,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            1つのドラッグで値が増減するバーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <param name="speed">ドラッグで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.DragFloat(System.String,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            1つのドラッグで値が増減するバーを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="value">扱う値</param>
            <param name="speed">ドラッグで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.DragIntRange2(System.String,System.Int32@,System.Int32@,System.Single,System.Int32,System.Int32)">
            <summary>
            2つのドラッグで値が増減するバーを生成します
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="currentMin">扱う値のうち小さい方</param>
            <param name="currentMax">扱う値のうち大きい方</param>
            <param name="speed">ドラッグで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.DragFloatRange2(System.String,System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            2つのドラッグで値が増減するバーを生成します
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="currentMin">扱う値のうち小さい方</param>
            <param name="currentMax">扱う値のうち大きい方</param>
            <param name="speed">ドラッグで増減する値</param>
            <param name="valueMin">最小値</param>
            <param name="valueMax">最大値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ColorEdit3(System.String,Altseed2.Color@,Altseed2.ToolColorEditFlags)">
            <summary>
            色を入力するツールを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="color">扱う色</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ColorEdit4(System.String,Altseed2.Color@,Altseed2.ToolColorEditFlags)">
            <summary>
            色を入力するツールを生成します。
            </summary>
            <param name="label">横に表示するラベルのテキスト</param>
            <param name="color">扱う色</param>
            <param name="flags">適用する設定</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.OpenPopup(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopup(System.String)">
            <summary>
            'EndPopup()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopupModal(System.String)">
            <summary>
            'EndPopup()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndPopup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginChild(System.String,Altseed2.Vector2F,System.Boolean,Altseed2.ToolWindowFlags)">
            <summary>
            'EndChild()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndChild">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginMenuBar">
            <summary>
            'EndMenuBar()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndMenuBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginMenu(System.String,System.Boolean)">
            <summary>
            'EndMenu()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndMenu">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.MenuItem(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginTabBar(System.String,Altseed2.ToolTabBarFlags)">
            <summary>
            'EndTabBar()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndTabBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginTabItem(System.String)">
            <summary>
            'EndTabItem()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndTabItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Indent">
            <summary>
            次の要素を右にずらします。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Unindent">
            <summary>
            右にずらすインデントを1つ分打消します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Separator">
            <summary>
            仕切りを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetTooltip(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginTooltip">
            <summary>
            'EndTooltip()' を呼び出してください
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndTooltip">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.NewLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SameLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushTextWrapPos(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopTextWrapPos">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushItemWidth(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushButtonRepeat(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopButtonRepeat">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Columns(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.NextColumn">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushID(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemActive">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemHovered">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollHere">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetTextLineHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetFontSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetWindowSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowSize(Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsMousePosValid">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsMouseDragging">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsMouseDoubleClicked(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetMouseDragDelta(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.ResetMouseDragDelta(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowContentSize(Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowSize(Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowPos(Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsWindowAppearing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsWindowCollapsed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsWindowFocused(Altseed2.ToolFocused)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsWindowHovered(Altseed2.ToolFocused)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetWindowPos">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowCollapsed(System.Boolean,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowFocus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextWindowBgAlpha(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowPosWithCond(Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowSizeWithCond(Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowCollapsedWithCond(System.Boolean,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowFocus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowFontScale(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowPosByName(System.String,Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowSizeByName(System.String,Altseed2.Vector2F,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowCollapsedByName(System.String,System.Boolean,Altseed2.ToolCond)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetWindowFocusByName(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetContentRegionMax">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetContentRegionAvail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetWindowContentRegionMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetWindowContentRegionMax">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetWindowContentRegionWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetScrollX">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetScrollY">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetScrollMaxX">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetScrollMaxY">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollX(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollY(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollHereX(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollHereY(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollFromPosX(System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetScrollFromPosY(System.Single,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushStyleColor(Altseed2.ToolColor,Altseed2.Color)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopStyleColor(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushStyleVarFloat(Altseed2.ToolStyleVar,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushStyleVarVector2F(Altseed2.ToolStyleVar,Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopStyleVar(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetStyleColor(Altseed2.ToolColor)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetFontTexUvWhitePixel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetNextItemWidth(System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.CalcItemWidth">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushAllowKeyboardFocus(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopAllowKeyboardFocus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Spacing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetCursorPos">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetCursorPos(Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetCursorStartPos">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetCursorScreenPos">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.AlignTextToFramePadding">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetTextLineHeightWithSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetFrameHeight">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetFrameHeightWithSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SmallButton(System.String)">
            <summary>
            小さなボタンを生成します。
            </summary>
            <param name="label">表示するテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.Image(Altseed2.TextureBase,Altseed2.Vector2F,Altseed2.Vector2F,Altseed2.Vector2F,Altseed2.Color,Altseed2.Color)">
            <summary>
            画像表示ボックスを生成します。
            </summary>
            <param name="texture">表示するテクスチャ</param>
            <param name="size">サイズ</param>
            <param name="uv0">テクスチャのUV値(0~1)</param>
            <param name="uv1">テクスチャのUV値(0~1)</param>
            <param name="tintColor">テクスチャの色</param>
            <param name="borderColor">縁の色</param>
        </member>
        <member name="M:Altseed2.Tool.ImageButton(Altseed2.TextureBase,Altseed2.Vector2F,Altseed2.Vector2F,Altseed2.Vector2F,System.Int32,Altseed2.Color,Altseed2.Color)">
            <summary>
            ボタンとして機能する画像表示ボックスを生成します。
            </summary>
            <param name="texture">表示するテクスチャ</param>
            <param name="size">サイズ</param>
            <param name="uv0">テクスチャのUV値(0~1)</param>
            <param name="uv1">テクスチャのUV値(0~1)</param>
            <param name="framePadding">縁の太さ</param>
            <param name="tintColor">テクスチャの色</param>
            <param name="borderColor">縁の色</param>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ProgressBar(System.Single,Altseed2.Vector2F,System.String)">
            <summary>
            プログレスバーを生成します。
            </summary>
            <param name="fraction">進行度(0.0~1.0)</param>
            <param name="sizeArg">サイズ</param>
            <param name="overlay">表示されるテキスト</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="overlay"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.Bullet">
            <summary>
            点を生成します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginCombo(System.String,System.String,Altseed2.ToolComboFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndCombo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.Combo(System.String,System.Int32@,System.String,System.Int32)">
            <summary>
            コンボボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルのテキスト</param>
            <param name="current_item">選択されているアイテムのインデックス -1で選択無し</param>
            <param name="items">タブ文字を用いて分割したアイテム</param>
            <param name="popupMaxHeightInItems">一度に表示する最大アイテム数</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="label"/>がnull</exception>
            <returns>いずれかのアイテムがクリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ColorButton(System.String,Altseed2.Color@,Altseed2.ToolColorEditFlags,Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetColorEditOptions(Altseed2.ToolColorEditFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetTreeNodeToLabelSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.ListBoxHeader(System.String,Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.ListBoxFooter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PlotLines(System.String,Altseed2.FloatArray,System.Int32,System.Int32,System.String,System.Single,System.Single,Altseed2.Vector2F,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PlotHistogram(System.String,Altseed2.FloatArray,System.Int32,System.Int32,System.String,System.Single,System.Single,Altseed2.Vector2F,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.ValueBool(System.String,System.Boolean)">
            <summary>
            boolの値を表示する
            </summary>
            <param name="prefix">表示するテキスト</param>
            <param name="b">表示するboolの値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="prefix"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.ValueInt(System.String,System.Int32)">
            <summary>
            intの値を表示する
            </summary>
            <param name="prefix">表示するテキスト</param>
            <param name="v">表示するintの値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="prefix"/>がnull</exception>
        </member>
        <member name="M:Altseed2.Tool.ValueFloat(System.String,System.Single,System.String)">
            <summary>
            
            </summary>
            <param name="prefix">表示するテキスト</param>
            <param name="v">表示するfloatの値</param>
            <param name="floatFormat">使用するフォーマット</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="prefix"/>, <paramref name="floatFormat"/>のいずれかがnull</exception>
        </member>
        <member name="M:Altseed2.Tool.BeginMainMenuBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.EndMainMenuBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopupContextItem(System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopupContextWindow(System.String,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopupContextVoid(System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginPopupModalEx(System.String,System.Boolean@,Altseed2.ToolWindowFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.OpenPopupOnItemClick(System.String,System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsPopupOpen(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.CloseCurrentPopup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetColumnIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetColumnWidth(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetColumnWidth(System.Int32,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetColumnOffset(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetColumnOffset(System.Int32,System.Single)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetColumnsCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetTabItemClosed(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PushClipRect(Altseed2.Vector2F,Altseed2.Vector2F,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.PopClipRect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetItemDefaultFocus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetKeyboardFocusHere(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemHoveredWithFlags(Altseed2.ToolHoveredFlags)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemFocused">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemClicked(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemEdited">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemActivated">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemDeactivated">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsItemDeactivatedAfterEdit">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsAnyItemHovered">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsAnyItemActive">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsAnyItemFocused">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetItemRectMin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetItemRectMax">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetItemRectSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetItemAllowOverlap">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsRectVisible(Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.IsRectVisibleVector2F2(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetTime">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.GetClipboardText">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SetClipboardText(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.LoadIniSettingsFromDisk(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.SaveIniSettingsToDisk(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Altseed2.Tool.OpenDialog(System.String,System.String)">
            <summary>
            1つの開くファイルを選択するダイアログを開きます。
            </summary>
            <param name="filter">読み込むファイルの拡張子のフィルタ</param>
            <param name="defaultPath">ファイルダイアログの初期位置のパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filter"/>, <paramref name="defaultPath"/>のいずれかがnull</exception>
            <returns>読み込むファイルのパス</returns>
        </member>
        <member name="M:Altseed2.Tool.OpenDialogMultiple(System.String,System.String)">
            <summary>
            複数の開くファイルを選択するダイアログを開きます。
            </summary>
            <param name="filter">読み込むファイルの拡張子のフィルタ</param>
            <param name="defaultPath">ファイルダイアログの初期位置のパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filter"/>, <paramref name="defaultPath"/>のいずれかがnull</exception>
            <returns>読み込むファイルのパス</returns>
        </member>
        <member name="M:Altseed2.Tool.SaveDialog(System.String,System.String)">
            <summary>
            保存するファイルを選択するダイアログを開きます。
            </summary>
            <param name="filter">保存するファイルの拡張子のフィルタ</param>
            <param name="defaultPath">ファイルダイアログの初期位置のパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="filter"/>, <paramref name="defaultPath"/>のいずれかがnull</exception>
            <returns>保存するファイルのパス</returns>
        </member>
        <member name="M:Altseed2.Tool.PickFolder(System.String)">
            <summary>
            フォルダを選択するダイアログを開きます。
            </summary>
            <param name="defaultPath">ファイルダイアログの初期位置のパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="defaultPath"/>がnull</exception>
            <returns>選択するフォルダのパス</returns>
        </member>
        <member name="M:Altseed2.Tool.Finalize">
            <summary>
            <see cref="T:Altseed2.Tool"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Tool.BeginFullScreen(System.Int32)">
            <summary>
            フルスクリーンでツールウィンドウを開始します。
            </summary>
            <param name="offset"></param>
            <returns>処理に成功したらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.Button(System.String)">
            <summary>
            ボタンを生成します。
            </summary>
            <param name="label">ボタンに表示される文字列</param>
            <returns>クリックされた時にtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.ListBox(System.String,System.Int32@,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            リストボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="current">選択されている要素のインデックス -1で何も選択していない事を表す</param>
            <param name="items">表示する要素の文字列</param>
            <param name="popupMaxHeightInItems">表示される要素の数</param>
            <returns>いずれかの要素がクリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.Combo(System.String,System.Int32@,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            コンボボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="current">選択されている要素のインデックス -1で何も選択していない事を表す</param>
            <param name="items">表示する要素の文字列</param>
            <param name="popupMaxHeightInItems">表示される要素の数</param>
            <returns>いずれかの要素がクリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt2(System.String,System.Span{System.Int32})">
            <summary>
            2つの整数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが2未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt3(System.String,System.Span{System.Int32})">
            <summary>
            3つの整数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが3未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputInt4(System.String,System.Span{System.Int32})">
            <summary>
            4つの整数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが4未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputFloat2(System.String,System.Span{System.Single})">
            <summary>
            2つの小数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが2未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputFloat3(System.String,System.Span{System.Single})">
            <summary>
            3つの小数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが3未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.InputFloat4(System.String,System.Span{System.Single})">
            <summary>
            4つの小数を入力するボックスを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">それぞれのボックスの値を格納するSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが4未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderInt2(System.String,System.Span{System.Int32},System.Single,System.Int32,System.Int32)">
            <summary>
            2つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが2未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderInt3(System.String,System.Span{System.Int32},System.Single,System.Int32,System.Int32)">
            <summary>
            3つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが3未満</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderInt4(System.String,System.Span{System.Int32},System.Single,System.Int32,System.Int32)">
            <summary>
            4つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが4未満</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="span"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat2(System.String,System.Span{System.Single},System.Single,System.Single,System.Single)">
            <summary>
            2つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが2未満</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="span"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat3(System.String,System.Span{System.Single},System.Single,System.Single,System.Single)">
            <summary>
            3つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが3未満</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="span"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.SliderFloat4(System.String,System.Span{System.Single},System.Single,System.Single,System.Single)">
            <summary>
            4つのスライドで値を増減するバーを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="span">各バーの値を格納するSpan</param>
            <param name="speed">値の増減する量</param>
            <param name="vMin">最小値</param>
            <param name="vMax">最大値</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の大きさが4未満</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="span"/>がnull</exception>
            <returns>入力が決定されたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Tool.RadioButton(System.String,System.Int32@,System.Int32)">
            <summary>
            ラジオボタンを生成します。
            </summary>
            <param name="label">横に表示されるラベルの文字列</param>
            <param name="v">選択されているボタンのインデックス</param>
            <param name="vButton">ボタンのインデックス</param>
            <returns>クリックされたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.StreamFile">
            <summary>
            段階的にファイルを読み取るクラス
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.Size">
            <summary>
            読み込むファイルのデータサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.CurrentPosition">
            <summary>
            現在読み込んでいるファイル上の位置を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.TempBufferSize">
            <summary>
            現在読み込んでいるファイルのデータサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.IsInPackage">
            <summary>
            読み込むファイルがファイルパッケージ内に格納されているかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.Path">
            <summary>
            読み込んだファイルのパスを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.StreamFile.Create(System.String)">
            <summary>
            指定ファイルを読み込む<see cref="T:Altseed2.StreamFile"/>の新しいインスタンスを生成します。
            </summary>
            <param name="path">読み込むファイルのパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>pathで読み込むファイルを格納する<see cref="T:Altseed2.StreamFile"/>の新しいインスタンスを生成します。</returns>
        </member>
        <member name="M:Altseed2.StreamFile.Read(System.Int32)">
            <summary>
            指定した分ファイルを読み込みます。
            </summary>
            <param name="size">この処理で読み込むデータサイズ</param>
            <returns>読み込まれたデータサイズ</returns>
        </member>
        <member name="M:Altseed2.StreamFile.GetTempBuffer">
            <summary>
            現在読み込んでいるファイルのデータを取得します。
            </summary>
            <returns>現在読み込んでいるファイルのデータ</returns>
        </member>
        <member name="M:Altseed2.StreamFile.Reload">
            <summary>
            再読み込みを行います。
            </summary>
            <returns>再読み込み処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.StreamFile.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.StreamFile"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.StreamFile.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.StreamFile.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.StreamFile.StreamFile_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.Int32@,System.String@)">
            <summary>
            <see cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="CurrentPosition"><see cref="P:Altseed2.StreamFile.CurrentPosition"/></param>
            <param name="Path"><see cref="P:Altseed2.StreamFile.Path"/></param>
        </member>
        <member name="M:Altseed2.StreamFile.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
            <summary>
            デシリアライズ時に実行
            </summary>
            <param name="sender">現在はサポートされていない 常にnullを返します。</param>
        </member>
        <member name="M:Altseed2.StreamFile.Finalize">
            <summary>
            <see cref="T:Altseed2.StreamFile"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.StreamFile.TempBuffer">
            <summary>
            現在読み込まれているデータを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.StreamFile.CreateStrict(System.String)">
            <summary>
            指定パスからファイルを読み込みます。失敗した場合、例外が発生します。
            </summary>
            <param name="path">読み込むファイルのパス</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる、または使用出来ない文字を含んでいる</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定されたファイルが見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が指定するパスが見つからない</exception>
            <exception cref="T:System.SystemException">ファイルが破損または読み込みに失敗</exception>
            <returns><paramref name="path"/>をパスに持つファイルのデータを格納した<see cref="T:Altseed2.StreamFile"/>の新しいインスタンス</returns>
        </member>
        <member name="T:Altseed2.StaticFile">
            <summary>
            一度でファイルを読み取るクラス
            </summary>
        </member>
        <member name="P:Altseed2.StaticFile.Path">
            <summary>
            読み込んだファイルのパスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StaticFile.Size">
            <summary>
            読み込んだファイルのデータサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.StaticFile.IsInPackage">
            <summary>
            読み込んだファイルがファイルパッケージ内に格納されているかどうかを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.StaticFile.Create(System.String)">
            <summary>
            指定ファイルを読み込んだ<see cref="T:Altseed2.StaticFile"/>の新しいインスタンスを生成します。
            </summary>
            <param name="path">読み込むファイルのパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>pathで読み込んだファイルを格納する<see cref="T:Altseed2.StaticFile"/>の新しいインスタンスを生成します。</returns>
        </member>
        <member name="M:Altseed2.StaticFile.GetBuffer">
            <summary>
            読み込んだファイルのデータを取得します。
            </summary>
            <returns>読み込んだファイルのデータ</returns>
        </member>
        <member name="M:Altseed2.StaticFile.Reload">
            <summary>
            再読み込みを行います。
            </summary>
            <returns>再読み込み処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.StaticFile.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.StaticFile"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.StaticFile.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.StaticFile.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.StaticFile.StaticFile_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.String@)">
            <summary>
            <see cref="M:Altseed2.StaticFile.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Path"><see cref="P:Altseed2.StaticFile.Path"/></param>
        </member>
        <member name="M:Altseed2.StaticFile.Finalize">
            <summary>
            <see cref="T:Altseed2.StaticFile"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.StaticFile.Buffer">
            <summary>
            読み込まれたデータを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.StaticFile.CreateStrict(System.String)">
            <summary>
            指定パスからファイルを読み込みます。失敗した場合、例外が発生します。
            </summary>
            <param name="path">読み込むファイルのパス</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる、または使用出来ない文字を含んでいる</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定されたファイルが見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が指定するパスが見つからない</exception>
            <exception cref="T:System.SystemException">ファイルが破損または読み込みに失敗</exception>
            <returns><paramref name="path"/>をパスに持つファイルのデータを格納した<see cref="T:Altseed2.StaticFile"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.StaticFile.CreateAsync(System.String)">
            <summary>
            非同期読み込みを行います。
            </summary>
            <param name="path">読み込むパス</param>
            <returns></returns>
        </member>
        <member name="T:Altseed2.File">
            <summary>
            ファイル制御を行うクラス
            </summary>
        </member>
        <member name="M:Altseed2.File.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.File.AddRootDirectory(System.String)">
            <summary>
            ファイル読み込み時に自動的に保管されるディレクトリを追加します。
            </summary>
            <param name="path">追加するディレクトリ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>追加処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.AddRootPackageWithPassword(System.String,System.String)">
            <summary>
            ファイルパッケージをパスワード有りで読み込みます。
            </summary>
            <param name="path">読み込むファイルパッケージのパス</param>
            <param name="password">読み込むファイルパッケージのパスワード</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>, <paramref name="password"/>のいずれかがnull</exception>
            <returns>読み込み処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.AddRootPackage(System.String)">
            <summary>
            ファイルパッケージをパスワード無しで読み込みます。
            </summary>
            <param name="path">読み込むファイルパッケージのパス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>読み込み処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.ClearRootDirectories">
            <summary>
            追加されたディレクトリやファイルパッケージをすべて削除します。
            </summary>
        </member>
        <member name="M:Altseed2.File.Exists(System.String)">
            <summary>
            指定したファイルが存在するかどうかを検索します。
            </summary>
            <param name="path">存在を確認するファイルのパス</param>
            <returns>pathの示すファイルが存在していたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.Pack(System.String,System.String)">
            <summary>
            指定したディレクトリのファイルをパックします。
            </summary>
            <param name="srcPath">パックするファイルのディレクトリ</param>
            <param name="dstPath">パックされたファイル名</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="srcPath"/>, <paramref name="dstPath"/>のいずれかがnull</exception>
            <returns>パック処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.PackWithPassword(System.String,System.String,System.String)">
            <summary>
            指定したディレクトリのファイルをパスワード付きでパックします。
            </summary>
            <param name="srcPath">パックするファイルのディレクトリ</param>
            <param name="dstPath">パックされたファイル名</param>
            <param name="password">かけるパスワード</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="srcPath"/>, <paramref name="dstPath"/>, <paramref name="password"/>のいずれかがnull</exception>
            <returns>パック処理がうまくいったらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.File.Finalize">
            <summary>
            <see cref="T:Altseed2.File"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Sound">
            <summary>
            音源のクラス
            </summary>
        </member>
        <member name="P:Altseed2.Sound.LoopStartingPoint">
            <summary>
            ループ開始地点(秒)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Sound.LoopEndPoint">
            <summary>
            ループ終了地点(秒)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Sound.IsLoopingMode">
            <summary>
            ループするかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Sound.Length">
            <summary>
            音源の長さ(秒)を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Sound.Path">
            <summary>
            読み込んだファイルのパスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Sound.IsDecompressed">
            <summary>
            音源が解凍されているかどうかを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Sound.Load(System.String,System.Boolean)">
            <summary>
            音声ファイルを読み込みます。
            </summary>
            <param name="path">読み込む音声ファイルのパス</param>
            <param name="isDecompressed">ロード時に全て解凍しておくかどうか</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <returns>読み込んだ音源データ</returns>
        </member>
        <member name="M:Altseed2.Sound.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Sound"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Sound.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Sound.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Sound.Sound_Unsetter_Deserialize(System.Runtime.Serialization.SerializationInfo,System.String@,System.Boolean@)">
            <summary>
            <see cref="M:Altseed2.Sound.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"/>でデシリアライズされなかったオブジェクトを呼び出します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="Path"><see cref="P:Altseed2.Sound.Path"/></param>
            <param name="IsDecompressed"><see cref="P:Altseed2.Sound.IsDecompressed"/></param>
        </member>
        <member name="M:Altseed2.Sound.Finalize">
            <summary>
            <see cref="T:Altseed2.Sound"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.Sound.LoadStrict(System.String,System.Boolean)">
            <summary>
            指定パスから音源を読み込みます。失敗した場合、例外が発生します。
            </summary>
            <param name="path">読み込む音源のパス</param>
            <param name="isDecompressed">音をロード時に全て解凍しておくかどうか</param>
            <exception cref="T:System.ArgumentException"><paramref name="path"/>が空白文字のみからなる、または使用出来ない文字を含んでいる</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="path"/>がnull</exception>
            <exception cref="T:System.IO.FileNotFoundException"><paramref name="path"/>で指定された音源が見つからない</exception>
            <exception cref="T:System.IO.PathTooLongException"><paramref name="path"/>が指定するパスが見つからない</exception>
            <exception cref="T:System.SystemException">音源が破損または読み込みに失敗</exception>
            <returns><paramref name="path"/>をパスに持つ音源のデータを格納した<see cref="T:Altseed2.Sound"/>の新しいインスタンス</returns>
        </member>
        <member name="T:Altseed2.SoundMixer">
            <summary>
            音源を操作するクラス
            </summary>
        </member>
        <member name="M:Altseed2.SoundMixer.Play(Altseed2.Sound)">
            <summary>
            音を再生します。
            </summary>
            <param name="sound">音源データ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="sound"/>がnull</exception>
            <returns>再生中の音のID</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.GetIsPlaying(System.Int32)">
            <summary>
            指定した音が再生中であるかを取得します。
            </summary>
            <param name="id">音のID</param>
            <returns>IDに対応する音が再生中であるかどうか</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.StopAll">
            <summary>
            再生中の音を全て停止します。
            </summary>
        </member>
        <member name="M:Altseed2.SoundMixer.Stop(System.Int32)">
            <summary>
            指定した音の再生を停止します。
            </summary>
            <param name="id">音のID</param>
        </member>
        <member name="M:Altseed2.SoundMixer.Pause(System.Int32)">
            <summary>
            指定した音の再生を一時停止します。
            </summary>
            <param name="id">音のID</param>
        </member>
        <member name="M:Altseed2.SoundMixer.Resume(System.Int32)">
            <summary>
            指定した音の再生を再開します。
            </summary>
            <param name="id">音のID</param>
        </member>
        <member name="M:Altseed2.SoundMixer.SetVolume(System.Int32,System.Single)">
            <summary>
            指定した音の音量を変更します。
            </summary>
            <param name="id">音のID</param>
            <param name="volume">音量(0.0〜1.0)</param>
        </member>
        <member name="M:Altseed2.SoundMixer.FadeIn(System.Int32,System.Single)">
            <summary>
            指定した音をフェードインさせます。
            </summary>
            <param name="id"></param>
            <param name="second">フェードインに使用する時間(秒)</param>
        </member>
        <member name="M:Altseed2.SoundMixer.FadeOut(System.Int32,System.Single)">
            <summary>
            指定した音をフェードアウトさせます。
            </summary>
            <param name="id">音のID</param>
            <param name="second">フェードアウトに使用する時間(秒)</param>
        </member>
        <member name="M:Altseed2.SoundMixer.Fade(System.Int32,System.Single,System.Single)">
            <summary>
            指定した音の音量を一定時間かけて変更します。
            </summary>
            <param name="id">音のID</param>
            <param name="second">フェードに使用する時間(秒)</param>
            <param name="targetedVolume">変更後の音量(0.0〜1.0)</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetIsPlaybackSpeedEnabled(System.Int32)">
            <summary>
            再生速度を変更するかを取得します。
            </summary>
            <param name="id">音のID</param>
            <returns>再生速度を変更するかどうか</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.SetIsPlaybackSpeedEnabled(System.Int32,System.Boolean)">
            <summary>
            再生速度を変更するかを設定します。
            </summary>
            <param name="id">音のID</param>
            <param name="isPlaybackSpeedEnabled">再生速度を変更するかどうか</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetPlaybackSpeed(System.Int32)">
            <summary>
            再生速度を取得します。
            </summary>
            <param name="id">音のID</param>
            <returns>本来の速度の何倍で再生されているかどうか</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.SetPlaybackSpeed(System.Int32,System.Single)">
            <summary>
            再生速度を設定します。
            </summary>
            <param name="id">音のID</param>
            <param name="playbackSpeed">変更後の再生速度</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetPanningPosition(System.Int32)">
            <summary>
            パン位置を取得します。
            </summary>
            <param name="id">音のID</param>
            <returns>パン位置 : 0.0で中央, -1.0で左, 1.0で右</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.SetPanningPosition(System.Int32,System.Single)">
            <summary>
            パン位置を設定します。
            </summary>
            <param name="id">音のID</param>
            <param name="panningPosition">パン位置 : 0.0で中央, -1.0で左, 1.0で右</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetPlaybackPosition(System.Int32)">
            <summary>
            指定した音の再生位置を取得します。
            </summary>
            <param name="id">音のID</param>
            <returns>現在の再生位置</returns>
        </member>
        <member name="M:Altseed2.SoundMixer.SetPlaybackPosition(System.Int32,System.Single)">
            <summary>
            指定した音の再生位置を変更します。
            </summary>
            <param name="id">音のID</param>
            <param name="position">再生位置(秒)</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetSpectrum(System.Int32,Altseed2.FloatArray,Altseed2.FFTWindow)">
            <summary>
            再生中の音のスペクトル情報を取得します。
            </summary>
            <param name="id">音のID</param>
            <param name="spectrums">音のスペクトル情報を格納するための配列</param>
            <param name="window">フーリエ変換に用いる窓関数</param>
        </member>
        <member name="M:Altseed2.SoundMixer.Finalize">
            <summary>
            <see cref="T:Altseed2.SoundMixer"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="M:Altseed2.SoundMixer.GetSpectrum(System.Int32,System.Int32,Altseed2.FFTWindow)">
            <summary>
            再生中の音のスペクトル情報を取得します。
            </summary>
            <param name="id">音のID</param>
            <param name="dataNum">音のスペクトル情報を格納するための配列の容量</param>
            <param name="window">フーリエ変換に用いる窓関数</param>
        </member>
        <member name="M:Altseed2.SoundMixer.GetSpectrum(System.Int32,System.Int32,Altseed2.FFTWindow,System.Span{System.Single})">
            <summary>
            再生中の音のスペクトル情報を取得します。
            </summary>
            <param name="id">音のID</param>
            <param name="dataNum">音のスペクトル情報を格納するための配列の容量</param>
            <param name="window">フーリエ変換に用いる窓関数</param>
            <param name="span">結果を書き込むSpan</param>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の長さが<paramref name="dataNum"/>未満。</exception>
        </member>
        <member name="T:Altseed2.Log">
            <summary>
            ログを出力するクラス
            </summary>
        </member>
        <member name="M:Altseed2.Log.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Write(Altseed2.LogCategory,Altseed2.LogLevel,System.String)">
            <summary>
            ログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Trace(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Trace"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Debug(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Debug"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Info(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Info"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Warn(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Warn"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Error(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Error"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Critical(Altseed2.LogCategory,System.String)">
            <summary>
            <see cref="F:Altseed2.LogLevel.Critical"/>でログを出力します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.SetLevel(Altseed2.LogCategory,Altseed2.LogLevel)">
            <summary>
            ログレベルを設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Log.Finalize">
            <summary>
            <see cref="T:Altseed2.Log"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Window.Title">
            <summary>
            ウィンドウに表示するタイトルを取得または設定します
            </summary>
            <exception cref="T:System.ArgumentNullException">設定しようとした値がnull</exception>
        </member>
        <member name="P:Altseed2.Window.Size">
            <summary>
            ウィンドウサイズを取得します
            </summary>
        </member>
        <member name="M:Altseed2.Window.GetInstance">
            <summary>
            インスタンスを取得します。
            </summary>
            <returns>使用するインスタンス</returns>
        </member>
        <member name="M:Altseed2.Window.Finalize">
            <summary>
            <see cref="T:Altseed2.Window"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.Collider">
            <summary>
            コライダの抽象基本クラスです
            </summary>
        </member>
        <member name="M:Altseed2.Collider.GetIsCollidedWith(Altseed2.Collider)">
            <summary>
            指定したコライダとの衝突判定を行います。
            </summary>
        </member>
        <member name="M:Altseed2.Collider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.Collider"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.Collider.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Collider.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.Collider.Finalize">
            <summary>
            <see cref="T:Altseed2.Collider"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.Collider.Position">
            <summary>
            座標を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Collider.Rotation">
            <summary>
            回転(弧度法)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Collider.Transform">
            <summary>
            変形行列を取得または設定します。
            </summary>
        </member>
        <member name="T:Altseed2.CircleCollider">
            <summary>
            円形コライダのクラス
            </summary>
        </member>
        <member name="P:Altseed2.CircleCollider.Radius">
            <summary>
            円形コライダの半径を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.CircleCollider.Create">
            <summary>
            円形コライダを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.CircleCollider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.CircleCollider"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.CircleCollider.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.CircleCollider.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.CircleCollider.Finalize">
            <summary>
            <see cref="T:Altseed2.CircleCollider"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.RectangleCollider">
            <summary>
            矩形コライダのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RectangleCollider.Size">
            <summary>
            矩形コライダの幅・高さを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RectangleCollider.CenterPosition">
            <summary>
            矩形コライダの中心の位置を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RectangleCollider.Create">
            <summary>
            矩形コライダを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.RectangleCollider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.RectangleCollider"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.RectangleCollider.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.RectangleCollider.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.RectangleCollider.Finalize">
            <summary>
            <see cref="T:Altseed2.RectangleCollider"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="T:Altseed2.PolygonCollider">
            <summary>
            多角形コライダのクラス
            </summary>
        </member>
        <member name="M:Altseed2.PolygonCollider.Create">
            <summary>
            多角形コライダを作成します。
            </summary>
        </member>
        <member name="M:Altseed2.PolygonCollider.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズされたデータをもとに<see cref="T:Altseed2.PolygonCollider"/>のインスタンスを生成します。
            </summary>
            <param name="info">シリアライズされたデータを格納するオブジェクト</param>
            <param name="context">送信元の情報</param>
        </member>
        <member name="M:Altseed2.PolygonCollider.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズするデータを設定します。
            </summary>
            <param name="info">シリアライズされるデータを格納するオブジェクト</param>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.PolygonCollider.Call_GetPtr(System.Runtime.Serialization.SerializationInfo)">
            <summary>
            呼び出し禁止
            </summary>
        </member>
        <member name="M:Altseed2.PolygonCollider.Finalize">
            <summary>
            <see cref="T:Altseed2.PolygonCollider"/>のインスタンスを削除します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonCollider.Vertexes">
            <summary>
            頂点情報のコレクションを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.PolygonCollider.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})">
            <summary>
            指定した座標に頂点を設定します。
            </summary>
            <param name="positions">設定する座標</param>
        </member>
        <member name="M:Altseed2.PolygonCollider.SetVertexes(System.ReadOnlySpan{Altseed2.Vector2F})">
            <summary>
            指定した座標に頂点を設定する
            </summary>
            <param name="positions">設定する座標</param>
        </member>
        <member name="M:Altseed2.ArrayBuffer`1.GetAsArray(System.Int32)">
            <summary>
            長さ<paramref name="length"/>以上の配列を返す。
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Altseed2.ArrayBuffer`1.GetAsSpan(System.Int32)">
            <summary>
            長さ<paramref name="length"/>のSpanを返す。
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:Altseed2.RegisteredStatus">
            <summary>
            登録状況を表します。
            </summary>
        </member>
        <member name="F:Altseed2.RegisteredStatus.Free">
            <summary>
            所属なし
            </summary>
        </member>
        <member name="F:Altseed2.RegisteredStatus.WaitingAdded">
            <summary>
            追加待ち
            </summary>
        </member>
        <member name="F:Altseed2.RegisteredStatus.Registered">
            <summary>
            所属有り
            </summary>
        </member>
        <member name="F:Altseed2.RegisteredStatus.WaitingRemoved">
            <summary>
            削除待ち
            </summary>
        </member>
        <member name="T:Altseed2.Registerable`1">
            <summary>
            <see cref="T:Altseed2.RegisterableCollection`1"/>に登録や削除が可能な要素であることを表します。
            </summary>
        </member>
        <member name="M:Altseed2.Registerable`1.#ctor">
            <summary>
            <see cref="T:Altseed2.Registerable`1"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.Registerable`1.Added(`0)">
            <summary>
            要素が<paramref name="owner"/>に登録されたとき実行します。
            </summary>
            <param name="owner">新たなオーナー</param>
        </member>
        <member name="M:Altseed2.Registerable`1.Removed">
            <summary>
            要素が親要素から削除されたときに実行します。
            </summary>
        </member>
        <member name="P:Altseed2.Registerable`1.Status">
            <summary>
            登録状況を取得します。
            </summary>
        </member>
        <member name="F:Altseed2.Registerable`1._Parent">
            <summary>
            親要素
            </summary>
        </member>
        <member name="T:Altseed2.RegisterableCollection`1">
            <summary>
            追加および削除を予約できるコレクションを表します。
            </summary>
        </member>
        <member name="F:Altseed2.RegisterableCollection`1.Owner">
            <summary>
            このコレクションを持っているオブジェクト
            </summary>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.#ctor(`0)">
            <summary>
            <see cref="T:Altseed2.RegisterableCollection`1"/>の新しいインスタンスを生成します。
            </summary>
            <param name="owner">自身のオーナー</param>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.Add(`0)">
            <summary>
            要素の追加を予約します。
            </summary>
            <param name="obj">追加する要素</param>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.Remove(`0)">
            <summary>
            要素の削除を予約します。
            </summary>
            <param name="obj">削除する要素</param>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.Update">
            <summary>
            コレクションを更新します。
            </summary>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.Clear">
            <summary>
            子要素の登録をすべて削除します。
            </summary>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.AsReadOnly">
            <summary>
            現在の要素の読み取り専用なコレクションを返します。
            </summary>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.AddImmediately(`0)">
            <summary>
            直ちに要素を追加します。
            </summary>
            <param name="obj">追加する要素</param>
            <remarks>列挙中に呼び出さないこと</remarks>
        </member>
        <member name="M:Altseed2.RegisterableCollection`1.AddImmediately(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            直ちに要素を追加します。
            </summary>
            <param name="objs">追加する要素のコレクション</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="objs"/>がnull</exception>
            <remarks>列挙中に呼び出さないこと</remarks>
        </member>
        <member name="T:Altseed2.RenderTextureCache">
            <summary>
            <see cref="T:Altseed2.PostEffectNode"/>に用いる<see cref="T:Altseed2.RenderTexture"/>のキャッシュのクラス
            </summary>
        </member>
        <member name="M:Altseed2.RenderTextureCache.#ctor">
            <summary>
            <see cref="T:Altseed2.RenderTextureCache"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.RenderTextureCache.GetRenderTexture(Altseed2.Vector2I,Altseed2.TextureFormat)">
            <summary>
            指定したサイズとフォーマットの<see cref="T:Altseed2.RenderTexture"/>をキャッシュから検索します。
            </summary>
            <param name="size">検索する<see cref="T:Altseed2.RenderTexture"/>のサイズ</param>
            <param name="format">検索する<see cref="T:Altseed2.RenderTexture"/>のフォーマット</param>
            <returns><paramref name="size"/>と<paramref name="format"/>を持つ<see cref="T:Altseed2.RenderTexture"/>のインスタンス</returns>
        </member>
        <member name="M:Altseed2.RenderTextureCache.Update">
            <summary>
            キャッシュの整理を行います。
            </summary>
        </member>
        <member name="T:Altseed2.IArray`1">
            <summary>
            Coreとの接続に使用する配列のインターフェイス
            </summary>
            <typeparam name="T">配列に格納される要素の型</typeparam>
        </member>
        <member name="P:Altseed2.IArray`1.Count">
            <summary>
            格納されている要素数を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.IArray`1.Item(System.Int32)">
            <summary>
            指定したインデックスの要素を取得または設定します。
            </summary>
            <param name="index">検索する要素のインデックス</param>
            <returns><paramref name="index"/>に該当する要素</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/>の値が0未満または<see cref="P:Altseed2.IArray`1.Count"/>以上</exception>        
        </member>
        <member name="M:Altseed2.IArray`1.Resize(System.Int32)">
            <summary>
            サイズを変更します。
            </summary>
            <param name="size">変更先のサイズ</param>
        </member>
        <member name="M:Altseed2.IArray`1.CopyTo(System.IntPtr)">
            <summary>
            データを指定したポインターにコピーします。
            </summary>
            <param name="ptr">コピー先のポインター</param>
        </member>
        <member name="T:Altseed2.ArrayExtension">
            <summary>
            Coreとの接続に使用する配列の拡張メソッドの定義クラス
            </summary>
        </member>
        <member name="M:Altseed2.ArrayExtension.ToArray``1(Altseed2.IArray{``0})">
            <summary>
            このインスタンスと同じデータを持った<typeparamref name="TElement"/>型の配列の新しいインスタンスを生成します。
            </summary>
            <typeparam name="TElement">配列に格納される要素の型</typeparam>
            <param name="obj">配列のもとになるCore接続用配列クラスのインスタンス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>がnull</exception>
            <returns><paramref name="obj"/>と同じデータを持った配列</returns>
        </member>
        <member name="M:Altseed2.ArrayExtension.CopyTo``1(Altseed2.IArray{``0},System.Span{``0})">
            <summary>
            Core接続配列に指定した配列のデータを設定します。
            </summary>
            <typeparam name="TElement">Spanに格納される要素の型</typeparam>
            <param name="obj">配列のもとになるCore接続用配列クラスのインスタンス</param>
            <param name="span">書き込み先の<see cref="T:System.Span`1"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>がnull</exception>
            <exception cref="T:System.ArgumentException"><paramref name="span"/>の長さが<see cref="P:Altseed2.IArray`1.Count"/>未満。</exception>
        </member>
        <member name="M:Altseed2.ArrayExtension.FromSpan``1(Altseed2.IArray{``0},System.ReadOnlySpan{``0})">
            <summary>
            Core接続配列に指定した配列のデータを設定します。
            </summary>
            <typeparam name="TElement">配列に格納される要素の型</typeparam>
            <param name="obj">データを設定するCore接続配列のインデスタンス</param>
            <param name="span">設定するデータとなる配列</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>または<paramref name="span"/>がnull</exception>
        </member>
        <member name="M:Altseed2.ArrayExtension.FromEnumerable``1(Altseed2.IArray{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Core接続配列に指定した配列のデータを設定する
            </summary>
            <typeparam name="TElement">配列に格納される要素の型</typeparam>
            <param name="obj">データを設定するCore接続配列のインスタンス</param>
            <param name="elements">設定するデータとなる<see cref="T:System.Collections.Generic.IEnumerable`1"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>または<paramref name="elements"/>がnull</exception>
        </member>
        <member name="T:Altseed2.Vertex">
            <summary>
            頂点の情報を格納する構造体
            </summary>
        </member>
        <member name="F:Altseed2.Vertex.Position">
            <summary>
            座標
            </summary>
        </member>
        <member name="F:Altseed2.Vertex.Color">
            <summary>
            色
            </summary>
        </member>
        <member name="F:Altseed2.Vertex.UV1">
            <summary>
            UV値1
            </summary>
        </member>
        <member name="F:Altseed2.Vertex.UV2">
            <summary>
            UV値2
            </summary>
        </member>
        <member name="M:Altseed2.Vertex.#ctor(Altseed2.Vector3F,Altseed2.Color,Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            <see cref="T:Altseed2.Vertex"/>の新しいインスタンスを生成します。
            </summary>
            <param name="position">座標</param>
            <param name="color">色</param>
            <param name="uv1">UV1</param>
            <param name="uv2">UV2</param>
        </member>
        <member name="M:Altseed2.Vertex.Equals(Altseed2.Vertex)">
            <summary>
            もう一つの<see cref="T:Altseed2.Vertex"/>との間の等価性を判定します。
            </summary>
            <param name="other">等価線を判定する<see cref="T:Altseed2.Vertex"/>のインスタンス</param>
            <returns><paramref name="other"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vertex.Equals(System.Object)">
            <summary>
            オブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vertex.GetHashCode">
            <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
            <returns>このインスタンスのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vertex.op_Equality(Altseed2.Vertex,Altseed2.Vertex)">
            <summary>
            二つの<see cref="T:Altseed2.Vertex"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vertex"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vertex"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vertex.op_Inequality(Altseed2.Vertex,Altseed2.Vertex)">
            <summary>
            二つの<see cref="T:Altseed2.Vertex"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vertex"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vertex"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.Color">
            <summary>
            色を表す構造体
            </summary>
        </member>
        <member name="F:Altseed2.Color.R">
            <summary>
            R値
            </summary>
        </member>
        <member name="F:Altseed2.Color.G">
            <summary>
            G値
            </summary>
        </member>
        <member name="F:Altseed2.Color.B">
            <summary>
            B値
            </summary>
        </member>
        <member name="F:Altseed2.Color.A">
            <summary>
            A値
            </summary>
        </member>
        <member name="M:Altseed2.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            <see cref="T:Altseed2.Color"/>の新しいインスタンスを生成します。
            </summary>
            <param name="r">R値</param>
            <param name="g">G値</param>
            <param name="b">B値</param>
            <param name="a">A値</param>
        </member>
        <member name="M:Altseed2.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Altseed2.Color"/>の新しいインスタンスを生成します。
            </summary>
            <param name="r">R値</param>
            <param name="g">G値</param>
            <param name="b">B値</param>
            <param name="a">A値</param>
        </member>
        <member name="M:Altseed2.Color.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            <see cref="T:Altseed2.Color"/>の新しいインスタンスを生成します。
            </summary>
            <param name="r">R値</param>
            <param name="g">G値</param>
            <param name="b">B値</param>
        </member>
        <member name="M:Altseed2.Color.Deconstruct(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="r"><see cref="F:Altseed2.Color.R"/></param>
            <param name="g"><see cref="F:Altseed2.Color.G"/></param>
            <param name="b"><see cref="F:Altseed2.Color.B"/></param>
        </member>
        <member name="M:Altseed2.Color.Deconstruct(System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="r"><see cref="F:Altseed2.Color.R"/></param>
            <param name="g"><see cref="F:Altseed2.Color.G"/></param>
            <param name="b"><see cref="F:Altseed2.Color.B"/></param>
            <param name="a"><see cref="F:Altseed2.Color.A"/></param>
        </member>
        <member name="M:Altseed2.Color.Equals(Altseed2.Color)">
            <summary>
            もう一つの<see cref="T:Altseed2.Color"/>との間の等価性を判定します。
            </summary>
            <param name="other">等価線を判定する<see cref="T:Altseed2.Color"/>のインスタンス</param>
            <returns><paramref name="other"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Color.Equals(System.Object)">
            <summary>
            オブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Color.GetHashCode">
            <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
            <returns>このインスタンスのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Color.ToString">
            <summary>
            このインスタンスを表す文字列を取得する
            </summary>
            <returns>このインスタンスを表す文字列</returns>
        </member>
        <member name="M:Altseed2.Color.op_Equality(Altseed2.Color,Altseed2.Color)">
            <summary>
            二つの<see cref="T:Altseed2.Color"/>の間の等価性を判定します。
            </summary>
            <param name="c1">等価性を判定する<see cref="T:Altseed2.Color"/>のインスタンス</param>
            <param name="c2">等価性を判定する<see cref="T:Altseed2.Color"/>のインスタンス</param>
            <returns><paramref name="c1"/> と <paramref name="c2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Color.op_Inequality(Altseed2.Color,Altseed2.Color)">
            <summary>
            二つの<see cref="T:Altseed2.Color"/>の間の非等価性を判定します。
            </summary>
            <param name="c1">非等価性を判定する<see cref="T:Altseed2.Color"/>のインスタンス</param>
            <param name="c2">非等価性を判定する<see cref="T:Altseed2.Color"/>のインスタンス</param>
            <returns><paramref name="c1"/> と <paramref name="c2"/>の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Color.op_Addition(Altseed2.Color,Altseed2.Color)">
            <summary>
            加算を行います。
            </summary>
            <param name="c1">加算する要素</param>
            <param name="c2">加算される要素</param>
            <remarks>オーバーフロー，アンダーフローは起きず0-255の間に修正される</remarks>
            <returns><paramref name="c1"/>と<paramref name="c2"/>を加算した結果</returns>
        </member>
        <member name="M:Altseed2.Color.op_Subtraction(Altseed2.Color,Altseed2.Color)">
            <summary>
            減算を行います。
            </summary>
            <param name="c1">減算する要素</param>
            <param name="c2">減算される要素</param>
            <remarks>オーバーフロー，アンダーフローは起きず0-255の間に修正される</remarks>
            <returns><paramref name="c1"/>から<paramref name="c2"/>を減算した結果</returns>
        </member>
        <member name="M:Altseed2.Color.op_Multiply(Altseed2.Color,System.Byte)">
            <summary>
            乗算を行います。
            </summary>
            <param name="color">定数倍される色</param>
            <param name="value">乗算する値</param>
            <remarks>オーバーフロー，アンダーフローは起きず0-255の間に修正される</remarks>
            <returns><paramref name="color"/>に<paramref name="value"/>を乗算した結果</returns>
        </member>
        <member name="M:Altseed2.Color.op_Multiply(System.Byte,Altseed2.Color)">
            <summary>
            乗算を行います。
            </summary>
            <param name="value">乗算する値</param>
            <param name="color">定数倍される色</param>
            <remarks>オーバーフロー，アンダーフローは起きず0-255の間に修正される</remarks>
            <returns><paramref name="color"/>に<paramref name="value"/>を乗算した結果</returns>
        </member>
        <member name="M:Altseed2.Color.op_Division(Altseed2.Color,System.Byte)">
            <summary>
            除算を行います。
            </summary>
            <param name="color">定数倍される色</param>
            <param name="value">除算する値</param>
            <remarks>オーバーフロー，アンダーフローは起きず0-255の間に修正される</remarks>
            <returns><paramref name="color"/>を<paramref name="value"/>で除算した結果</returns>
        </member>
        <member name="M:Altseed2.RenderPassParameter.#ctor(Altseed2.Color,System.Boolean,System.Boolean)">
            <summary>
            <see cref="T:Altseed2.RenderPassParameter"/>新しいインスタンスを生成します。
            </summary>
            <param name="clearColor"></param>
            <param name="isColorCleared"></param>
            <param name="isDepthCleared"></param>
        </member>
        <member name="M:Altseed2.RenderPassParameter.Equals(Altseed2.RenderPassParameter)">
            <summary>
            もう一つの<see cref="T:Altseed2.RenderPassParameter"/>との間の等価性を判定します。
            </summary>
            <param name="other">等価線を判定する<see cref="T:Altseed2.RenderPassParameter"/>のインスタンス</param>
            <returns><paramref name="other"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RenderPassParameter.Equals(System.Object)">
            <summary>
            オブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RenderPassParameter.GetHashCode">
            <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
            <returns>このインスタンスのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.RenderPassParameter.op_Equality(Altseed2.RenderPassParameter,Altseed2.RenderPassParameter)">
            <summary>
            二つの<see cref="T:Altseed2.RenderPassParameter"/>の間の等価性を判定します。
            </summary>
            <param name="left">等価性を判定する<see cref="T:Altseed2.RenderPassParameter"/>のインスタンス</param>
            <param name="right">等価性を判定する<see cref="T:Altseed2.RenderPassParameter"/>のインスタンス</param>
            <returns><paramref name="left"/> と <paramref name="right"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RenderPassParameter.op_Inequality(Altseed2.RenderPassParameter,Altseed2.RenderPassParameter)">
            <summary>
            二つの<see cref="T:Altseed2.RenderPassParameter"/>の間の非等価性を判定します。
            </summary>
            <param name="left">非等価性を判定する<see cref="T:Altseed2.RenderPassParameter"/>のインスタンス</param>
            <param name="right">非等価性を判定する<see cref="T:Altseed2.RenderPassParameter"/>のインスタンス</param>
            <returns><paramref name="left"/> と <paramref name="right"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.AlphaBlend">
            <summary>
            アルファブレンドの方法を表す構造体
            </summary>
        </member>
        <member name="M:Altseed2.AlphaBlend.Equals(Altseed2.AlphaBlend)">
            <summary>
            もう一つの<see cref="T:Altseed2.AlphaBlend"/>との間の等価性を判定します。
            </summary>
            <param name="other">等価線を判定する<see cref="T:Altseed2.AlphaBlend"/>のインスタンス</param>
            <returns><paramref name="other"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.AlphaBlend.Equals(System.Object)">
            <summary>
            オブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.AlphaBlend.GetHashCode">
            <summary>
            このインスタンスのハッシュコードを返します。
            </summary>
            <returns>このインスタンスのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.AlphaBlend.op_Equality(Altseed2.AlphaBlend,Altseed2.AlphaBlend)">
            <summary>
            二つの<see cref="T:Altseed2.AlphaBlend"/>の間の等価性を判定します。
            </summary>
            <param name="left">等価性を判定する<see cref="T:Altseed2.AlphaBlend"/>のインスタンス</param>
            <param name="right">等価性を判定する<see cref="T:Altseed2.AlphaBlend"/>のインスタンス</param>
            <returns><paramref name="left"/> と <paramref name="right"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.AlphaBlend.op_Inequality(Altseed2.AlphaBlend,Altseed2.AlphaBlend)">
            <summary>
            二つの<see cref="T:Altseed2.AlphaBlend"/>の間の非等価性を判定します。
            </summary>
            <param name="left">非等価性を判定する<see cref="T:Altseed2.AlphaBlend"/>のインスタンス</param>
            <param name="right">非等価性を判定する<see cref="T:Altseed2.AlphaBlend"/>のインスタンス</param>
            <returns><paramref name="left"/> と <paramref name="right"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="P:Altseed2.AlphaBlend.Normal">
            <summary>
            通常のアルファブレンドを表すインスタンスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AlphaBlend.Add">
            <summary>
            加算のアルファブレンドを表すインスタンスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AlphaBlend.Opacity">
            <summary>
            不透明のアルファブレンドを表すインスタンスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AlphaBlend.Substract">
            <summary>
            減算のアルファブレンドを表すインスタンスを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AlphaBlend.Multiply">
            <summary>
            乗算のアルファブレンドを表すインスタンスを取得します。
            </summary>
        </member>
        <member name="T:Altseed2.Engine">
            <summary>
            Altseed2 のエンジンを表します。
            </summary>
        </member>
        <member name="F:Altseed2.Engine.MaxCameraGroupCount">
            <summary>
            カメラグループの個数の最大値
            </summary>
        </member>
        <member name="F:Altseed2.Engine._RootNode">
            <summary>
            ルートノード
            </summary>
        </member>
        <member name="F:Altseed2.Engine._UpdatedNode">
            <summary>
            実際のUpdate対象のノード
            </summary>
            <remarks>Pause中は一部のノードのみが更新対象になる。</remarks>
        </member>
        <member name="P:Altseed2.Engine.ClearColor">
            <summary>
            スクリーンのクリア色を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Engine.Initialize(System.String,System.Int32,System.Int32,Altseed2.Configuration)">
            <summary>
            エンジンを初期化します。
            </summary>
            <param name="title">ウィンドウタイトル</param>
            <param name="width">ウィンドウの横幅</param>
            <param name="height">ウィンドウの縦幅</param>
            <param name="config">設定</param>
            <returns>初期化に成功したらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Engine.DoEvents">
            <summary>
            システムイベントを処理します。
            </summary>
        </member>
        <member name="M:Altseed2.Engine.Update">
            <summary>
            エンジンを更新します。
            </summary>
        </member>
        <member name="M:Altseed2.Engine.Terminate">
            <summary>
            エンジンを終了します。
            </summary>
        </member>
        <member name="M:Altseed2.Engine.Pause(Altseed2.Node)">
            <summary>
            ノードの更新を一時停止します。
            </summary>
            <param name="keepUpdated">一時停止の対象から除外するノード</param>
        </member>
        <member name="M:Altseed2.Engine.Resume">
            <summary>
            ノードの更新を再開します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.File">
            <summary>
            ファイルを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">File機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Keyboard">
            <summary>
            キーボードを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Keyboard機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Mouse">
            <summary>
            マウスを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Mouse機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Joystick">
            <summary>
            ジョイスティックを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Joystick機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Graphics">
            <summary>
            グラフィックのクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Log">
            <summary>
            ログを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Log機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Renderer">
            <summary>
            レンダラのクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Rendererが初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.CullingSystem">
            <summary>
            カリングのクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">CullingSystemが初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Sound">
            <summary>
            音を管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Sound機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Resources">
            <summary>
            リソースを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">File機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Window">
            <summary>
            ウインドウを表すクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Windowが初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="P:Altseed2.Engine.Tool">
            <summary>
            ツールを管理するクラスを取得します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Tool機能が初期されていなかったり終了していて操作を実行できなかった</exception>
        </member>
        <member name="M:Altseed2.Engine.GetNodes">
            <summary>
            エンジンに登録されているノードの列挙子を返します。
            </summary>
        </member>
        <member name="M:Altseed2.Engine.AddNode(Altseed2.Node)">
            <summary>
            エンジンにノードを追加します。
            </summary>
            <param name="node">追加されるノード</param>
        </member>
        <member name="M:Altseed2.Engine.RemoveNode(Altseed2.Node)">
            <summary>
            エンジンからノードを削除します。
            </summary>
            <param name="node">削除するノード</param>
        </member>
        <member name="M:Altseed2.Engine.FindNodes``1">
            <summary>
            エンジンに登録されている <typeparamref name="T"/> 型のノードを列挙します。
            </summary>
            <typeparam name="T">検索するノードの型</typeparam>
        </member>
        <member name="M:Altseed2.Engine.FindNodes``1(System.Func{``0,System.Boolean})">
            <summary>
            エンジンに登録されている <typeparamref name="T"/> 型のノードのうち <paramref name="condition"/> を満たすものを列挙します。
            </summary>
            <typeparam name="T">検索するノードの型</typeparam>
            <param name="condition">検索するノードの条件</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="condition"/>がnull</exception>
        </member>
        <member name="P:Altseed2.Engine.Context">
            <summary>
            <see cref="T:System.Threading.SynchronizationContext"/>を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.WindowSize">
            <summary>
            ウィンドウのサイズを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.WindowTitle">
            <summary>
            ウインドウのタイトルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.FramerateMode">
            <summary>
            フレームレートの制御方法を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.TargetFPS">
            <summary>
            目標フレームレートを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.CurrentFPS">
            <summary>
            現在のFPSを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Engine.DeltaSecond">
            <summary>
            前のフレームからの経過時間(秒)を取得します。
            </summary>
        </member>
        <member name="T:Altseed2.ICacheKeeper`1">
            <summary>
            キャッシュを使用するクラス
            </summary>
            <typeparam name="TClass">クラスの型</typeparam>
        </member>
        <member name="P:Altseed2.ICacheKeeper`1.CacheRepo">
            <summary>
            キャッシュをためておくディクショナリを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.ICacheKeeper`1.Self">
            <summary>
            自身のポインタを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.ICacheKeeper`1.Release(System.IntPtr)">
            <summary>
            キャッシュを開放します。
            </summary>
            <param name="native">開放するオブジェクトのポインタ</param>
        </member>
        <member name="T:Altseed2.CacheHelper">
            <summary>
            キャッシュの制御を行うクラス
            </summary>
        </member>
        <member name="M:Altseed2.CacheHelper.CacheHandlingOnDeserialization``1(``0,System.IntPtr)">
            <summary>
            キャッシュ制御を行います。
            </summary>
            <typeparam name="TClass">キャッシュ制御を行うクラス</typeparam>
            <param name="obj">キャッシュ制御を行うクラスのインスタンス</param>
            <param name="native"><paramref name="obj"/>に登録するポインタ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>または<paramref name="native"/>がnull</exception>
            <remarks>デシリアライズ時に実行</remarks>
        </member>
        <member name="M:Altseed2.CacheHelper.CacheHandlingOnDeserializationConcurrent``1(``0,System.IntPtr)">
            <summary>
            キャッシュ制御をスレッドセーフに行う
            </summary>
            <typeparam name="TClass">キャッシュ制御を行うクラス</typeparam>
            <param name="obj">キャッシュ制御を行うクラスのインスタンス</param>
            <param name="native"><paramref name="obj"/>に登録するポインタ</param>
            <exception cref="T:System.ArgumentException">スレッドセーフなキャッシュ保存ディクショナリを取得できなかった</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="obj"/>または<paramref name="native"/>がnull</exception>
            <remarks>デシリアライズ時に実行</remarks>
        </member>
        <member name="M:Altseed2.IOHelper.CheckLoadPath(System.String)">
            <summary>
            <see cref="T:System.ArgumentException"/>
            <see cref="T:System.ArgumentNullException"/>
            <see cref="T:System.IO.PathTooLongException"/>
            <see cref="T:System.IO.FileNotFoundException"/>
            </summary>
        </member>
        <member name="M:Altseed2.IOHelper.CheckSavePath(System.String)">
            <summary>
            <see cref="T:System.ArgumentException"/>
            <see cref="T:System.ArgumentNullException"/>
            <see cref="T:System.IO.PathTooLongException"/>
            <see cref="T:System.IO.DirectoryNotFoundException"/>
            </summary>
        </member>
        <member name="M:Altseed2.SerializationHelper.GetValue``1(System.Runtime.Serialization.SerializationInfo,System.String)">
            <summary>
            <see cref="T:System.Runtime.Serialization.SerializationInfo"/>から指定した名前を持つ要素を取得します。
            </summary>
            <typeparam name="T">取得する要素の型</typeparam>
            <param name="info">要素を取り出す<see cref="T:System.Runtime.Serialization.SerializationInfo"/>のインスタンス</param>
            <param name="name">取り出す要素の名前</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="info"/>または<paramref name="name"/>がnull</exception>
            <exception cref="T:System.InvalidCastException">取り出した要素を<typeparamref name="T"/>にキャストできなかった</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException"><paramref name="name"/>を持つ要素が見つからなかった</exception>
            <returns><paramref name="info"/>に格納されている<paramref name="name"/>を持つ要素</returns>
        </member>
        <member name="T:Altseed2.EasingType">
            <summary>
            イージングの種類を表します。
            </summary>
        </member>
        <member name="M:Altseed2.Easing.GetEasing(Altseed2.EasingType,System.Single)">
            <param name="easing">イージングの種類</param>
            <param name="t">イージング過程の変数</param>
            <returns></returns>
        </member>
        <member name="T:Altseed2.MathHelper">
            <summary>
            数学の演算を補助するクラス
            </summary>
        </member>
        <member name="F:Altseed2.MathHelper.MatrixError">
            <summary>
            行列で使用
            誤差
            </summary>
        </member>
        <member name="M:Altseed2.MathHelper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
            指定した値を決められた範囲に丸めます。
            </summary>
            <param name="v">丸める値</param>
            <param name="max">最大値</param>
            <param name="min">最小値</param>
            <returns><paramref name="v"/>が<paramref name="max"/>以上であったり<paramref name="min"/>未満であった場合はその値が，それ以外では<paramref name="v"/>そのまま返される</returns>
        </member>
        <member name="M:Altseed2.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
            指定した値を決められた範囲に丸めます。
            </summary>
            <param name="v">丸める値</param>
            <param name="max">最大値</param>
            <param name="min">最小値</param>
            <returns><paramref name="v"/>が<paramref name="max"/>以上であったり<paramref name="min"/>未満であった場合はその値が，それ以外では<paramref name="v"/>そのまま返される</returns>
        </member>
        <member name="M:Altseed2.MathHelper.Clamp``1(``0,``0,``0)">
            <summary>
            指定した値を決められた範囲に丸めます。
            </summary>
            <param name="v">丸める値</param>
            <param name="max">最大値</param>
            <param name="min">最小値</param>
            <returns><paramref name="v"/>が<paramref name="max"/>以上であったり<paramref name="min"/>未満であった場合はその値が，それ以外では<paramref name="v"/>そのまま返される</returns>
        </member>
        <member name="M:Altseed2.MathHelper.DegreeToRadian(System.Single)">
            <summary>
            度数法の値を弧度法の値に変換します。
            </summary>
            <param name="degree">変換したい度数法の値</param>
            <returns>弧度法としての<paramref name="degree"/>の値</returns>
        </member>
        <member name="M:Altseed2.MathHelper.RadianToDegree(System.Single)">
            <summary>
            弧度法の値を度数法の値に変換します。
            </summary>
            <param name="radian">変換したい弧度法の値</param>
            <returns>度数法としての<paramref name="radian"/>の値</returns>
        </member>
        <member name="M:Altseed2.MathHelper.CalcTransform(Altseed2.Vector2F,System.Single,Altseed2.Vector2F)">
            <summary>
            Transformを計算します。
            </summary>
            <param name="position">座標</param>
            <param name="angle">角度（弧度法）</param>
            <param name="scale">拡大率</param>
            <returns></returns>
        </member>
        <member name="M:Altseed2.MathHelper.GetMinMax(Altseed2.Vector2F@,Altseed2.Vector2F@,Altseed2.VertexArray)">
            <summary>
            指定した頂点を全て含む長方形のうち左上と右下の座標を割り出します。
            </summary>
            <param name="min">左上の座標</param>
            <param name="max">右下の座標</param>
            <param name="positions">計算する座標</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="positions"/>がnull</exception>
        </member>
        <member name="M:Altseed2.MathHelper.GetMinMax(Altseed2.Vector2F@,Altseed2.Vector2F@,Altseed2.Vector2FArray)">
            <summary>
            指定した頂点を全て含む長方形のうち左上と右下の座標を割り出します。
            </summary>
            <param name="min">左上の座標</param>
            <param name="max">右下の座標</param>
            <param name="positions">計算する座標</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="positions"/>がnull</exception>
        </member>
        <member name="M:Altseed2.MathHelper.GetMinMax(Altseed2.Vector2F@,Altseed2.Vector2F@,Altseed2.Vector2F[])">
            <summary>
            指定した頂点を全て含む長方形のうち左上と右下の座標を割り出します。
            </summary>
            <param name="min">左上の座標</param>
            <param name="max">右下の座標</param>
            <param name="positions">計算する座標</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="positions"/>がnull</exception>
        </member>
        <member name="M:Altseed2.MathHelper.CalcFromTransform2D(Altseed2.Matrix44F,Altseed2.Vector2F@,Altseed2.Vector2F@,System.Single@)">
            <summary>
            <see cref="T:Altseed2.Matrix44F"/>から2次元座標，拡大率，角度を算出します。
            </summary>
            <param name="transform">計算元となる4x4行列</param>
            <param name="absolutePosition">出力される座標</param>
            <param name="scale">出力される拡大率</param>
            <param name="angle">出力される角度(度数法)</param>
        </member>
        <member name="M:Altseed2.MathHelper.CalcFromTransform3D(Altseed2.Matrix44F,Altseed2.Vector3F@,Altseed2.Vector3F@,Altseed2.Matrix44F@)">
            <summary>
            <see cref="T:Altseed2.Matrix44F"/>から3次元座標，拡大率，角度を算出します。
            </summary>
            <param name="transform">計算元となる4x4行列</param>
            <param name="absolutePosition">出力される座標</param>
            <param name="scale">出力される拡大率</param>
            <param name="rotation">出力される回転行列</param>
        </member>
        <member name="T:Altseed2.Matrix33F">
            <summary>
            <see cref="T:System.Single"/>型の3x3行列を表す構造体
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33F.Identity">
            <summary>
            単位行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33F.Inversion">
            <summary>
            逆行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33F.TransPosition">
            <summary>
            転置行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33F.Item(System.Int32,System.Int32)">
            <summary>
            指定したX，Y成分の値を取得または設定します。
            </summary>
            <param name="x">取得する値のX成分</param>
            <param name="y">取得する値のY成分</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x"/>または<paramref name="y"/>が0未満または3以上</exception>
            <returns><paramref name="x"/>と<paramref name="y"/>に対応する値</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.GetRotation(System.Single)">
            <summary>
            指定した角度分の回転を表す行列を取得します。
            </summary>
            <param name="radian">回転させる角度(弧度法)</param>
            <returns><paramref name="radian"/>の回転分を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.GetScale(Altseed2.Vector2F)">
            <summary>
            2D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale">設定する拡大率</param>
            <returns><paramref name="scale"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.GetTranslation(Altseed2.Vector2F)">
            <summary>
            2D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position">平行移動する座標</param>
            <returns><paramref name="position"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.Transform2D(Altseed2.Vector2F)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.Transform3D(Altseed2.Vector3F)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Addition(Altseed2.Matrix33F,Altseed2.Matrix33F)">
            <summary>
            加算を行います。
            </summary>
            <param name="left">加算する要素</param>
            <param name="right">加算される要素</param>
            <returns>加算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_UnaryNegation(Altseed2.Matrix33F)">
            <summary>
            符合を逆転します。
            </summary>
            <param name="matrix">符合を逆転する行列</param>
            <returns>符合が逆転された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Subtraction(Altseed2.Matrix33F,Altseed2.Matrix33F)">
            <summary>
            減算を行います。
            </summary>
            <param name="left">減算する要素</param>
            <param name="right">減算される要素</param>
            <returns>減算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Multiply(Altseed2.Matrix33F,System.Single)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="matrix">定数倍される行列</param>
            <param name="scalar">乗算する定数</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Multiply(System.Single,Altseed2.Matrix33F)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="scalar">乗算する定数</param>
            <param name="matrix">定数倍される行列</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Division(Altseed2.Matrix33F,System.Single)">
            <summary>
            行列の各値を定数倍で除算します。
            </summary>
            <param name="matrix">除算される行列</param>
            <param name="scalar">除算する定数</param>
            <returns>各値が定数で除算された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Multiply(Altseed2.Matrix33F,Altseed2.Matrix33F)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Multiply(Altseed2.Matrix33F,Altseed2.Vector3F)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.Equals(Altseed2.Matrix33F)">
            <summary>
            2つの<see cref="T:Altseed2.Matrix33F"/>間の等価性を判定します。
            </summary>
            <param name="other">等価性を判定する<see cref="T:Altseed2.Matrix33F"/>のインスタンス</param>
            <returns><paramref name="other"/>との間に等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間の等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Equality(Altseed2.Matrix33F,Altseed2.Matrix33F)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix33F"/>の間の等価性を判定します。
            </summary>
            <param name="m1">等価性を判定する<see cref="T:Altseed2.Matrix33F"/>のインスタンス</param>
            <param name="m2">等価性を判定する<see cref="T:Altseed2.Matrix33F"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.op_Inequality(Altseed2.Matrix33F,Altseed2.Matrix33F)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix33F"/>の間の非等価性を判定します。
            </summary>
            <param name="m1">非等価性を判定する<see cref="T:Altseed2.Matrix33F"/>のインスタンス</param>
            <param name="m2">非等価性を判定する<see cref="T:Altseed2.Matrix33F"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33F.Clone">
            <summary>
            このインスタンスの複製を作成します。
            </summary>
            <returns>このインスタンスの複製</returns>
        </member>
        <member name="T:Altseed2.Matrix33I">
            <summary>
            <see cref="T:System.Int32"/>型の3x3行列を表す構造体
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33I.Identity">
            <summary>
            単位行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33I.TransPosition">
            <summary>
            転置行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix33I.Item(System.Int32,System.Int32)">
            <summary>
            指定したX，Y成分の値を取得または設定します。
            </summary>
            <param name="x">取得する値のX成分</param>
            <param name="y">取得する値のY成分</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x"/>または<paramref name="y"/>が0未満または3以上</exception>
            <returns><paramref name="x"/>と<paramref name="y"/>に対応する値</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.GetScale(Altseed2.Vector2I)">
            <summary>
            2D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale">設定する拡大率</param>
            <returns><paramref name="scale"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.GetTranslation(Altseed2.Vector2I)">
            <summary>
            2D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position">平行移動する座標</param>
            <returns><paramref name="position"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.Transform2D(Altseed2.Vector2I)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.Transform3D(Altseed2.Vector3I)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Addition(Altseed2.Matrix33I,Altseed2.Matrix33I)">
            <summary>
            加算を行います。
            </summary>
            <param name="left">加算する要素</param>
            <param name="right">加算される要素</param>
            <returns>加算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_UnaryNegation(Altseed2.Matrix33I)">
            <summary>
            符合を逆転します。
            </summary>
            <param name="matrix">符合を逆転する行列</param>
            <returns>符合が逆転された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Subtraction(Altseed2.Matrix33I,Altseed2.Matrix33I)">
            <summary>
            減算を行います。
            </summary>
            <param name="left">減算する要素</param>
            <param name="right">減算される要素</param>
            <returns>減算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Multiply(Altseed2.Matrix33I,System.Int32)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="matrix">定数倍される行列</param>
            <param name="scalar">乗算する定数</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Multiply(System.Int32,Altseed2.Matrix33I)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="scalar">乗算する定数</param>
            <param name="matrix">定数倍される行列</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Division(Altseed2.Matrix33I,System.Int32)">
            <summary>
            行列の各値を定数倍で除算します。
            </summary>
            <param name="matrix">除算される行列</param>
            <param name="scalar">除算する定数</param>
            <returns>各値が定数で除算された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Multiply(Altseed2.Matrix33I,Altseed2.Matrix33I)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Multiply(Altseed2.Matrix33I,Altseed2.Vector3I)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.Equals(Altseed2.Matrix33I)">
            <summary>
            2つの<see cref="T:Altseed2.Matrix33I"/>間の等価性を判定します。
            </summary>
            <param name="other">等価性を判定する<see cref="T:Altseed2.Matrix33I"/>のインスタンス</param>
            <returns><paramref name="other"/>との間に等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間の等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Equality(Altseed2.Matrix33I,Altseed2.Matrix33I)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix33I"/>の間の等価性を判定します。
            </summary>
            <param name="m1">等価性を判定する<see cref="T:Altseed2.Matrix33I"/>のインスタンス</param>
            <param name="m2">等価性を判定する<see cref="T:Altseed2.Matrix33I"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.op_Inequality(Altseed2.Matrix33I,Altseed2.Matrix33I)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix33I"/>の間の非等価性を判定します。
            </summary>
            <param name="m1">非等価性を判定する<see cref="T:Altseed2.Matrix33I"/>のインスタンス</param>
            <param name="m2">非等価性を判定する<see cref="T:Altseed2.Matrix33I"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix33I.Clone">
            <summary>
            このインスタンスの複製を作成します。
            </summary>
            <returns>このインスタンスの複製</returns>
        </member>
        <member name="T:Altseed2.Matrix44F">
            <summary>
            <see cref="T:System.Single"/>型の4x4行列を表す構造体
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44F.Identity">
            <summary>
            単位行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44F.Inverse">
            <summary>
            逆行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44F.Transposed">
            <summary>
            転置行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44F.Item(System.Int32,System.Int32)">
            <summary>
            指定したX，Y成分の値を取得または設定します。
            </summary>
            <param name="x">取得する値のX成分</param>
            <param name="y">取得する値のY成分</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x"/>または<paramref name="y"/>が0未満または4以上</exception>
            <returns><paramref name="x"/>と<paramref name="y"/>に対応する値</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetLookAtRH(Altseed2.Vector3F,Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            カメラ行列(右手系)を取得します。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetLookAtLH(Altseed2.Vector3F,Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            カメラ行列(左手系)を取得します。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetOrthographicLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(左手系)を取得します。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetOrthographicRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(右手系)を取得します。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetPerspectiveFovLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(左手系)を取得します。
            </summary>
            <param name="ovY">Y方向への視野角(度数法)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetPerspectiveFovRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(右手系)を取得します。
            </summary>
            <param name="ovY">Y方向への視野角(弧度法)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetPerspectiveFovRH_OpenGL(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            OpenGL用射影行列(右手系)を取得します。
            </summary>
            <param name="ovY">Y方向への視野角(弧度法)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetQuaternion(Altseed2.Vector4F)">
            <summary>
            クオータニオンを元に回転行列(右手)を取得します。
            </summary>
            <param name="quaternion">使用するクオータニオン</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetRotationAxis(Altseed2.Vector3F,System.Single)">
            <summary>
            任意軸の反時計回転行列(右手)を取得します。
            </summary>
            <param name="axis">軸</param>
            <param name="radian">回転量(弧度法)</param>
        </member>
        <member name="M:Altseed2.Matrix44F.GetRotationX(System.Single)">
            <summary>
            指定した角度分のX軸回転(右手)を表す行列を取得します。
            </summary>
            <param name="radian">X軸回転させる角度(弧度法)</param>
            <returns><paramref name="radian"/>のX軸回転分を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetRotationY(System.Single)">
            <summary>
            指定した角度分のY軸回転(右手)を表す行列を取得します。
            </summary>
            <param name="radian">Y軸回転させる角度(弧度法)</param>
            <returns><paramref name="radian"/>のY軸回転分を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetRotationZ(System.Single)">
            <summary>
            指定した角度分のZ軸回転(右手)を表す行列を取得します。
            </summary>
            <param name="radian">Z軸回転させる角度(弧度法)</param>
            <returns><paramref name="radian"/>のZ軸回転分を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetScale2D(Altseed2.Vector2F)">
            <summary>
            2D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale2D">設定する拡大率</param>
            <returns><paramref name="scale2D"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetScale3D(Altseed2.Vector3F)">
            <summary>
            3D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale3D">設定する拡大率</param>
            <returns><paramref name="scale3D"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetTranslation2D(Altseed2.Vector2F)">
            <summary>
            2D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position2D">平行移動する座標</param>
            <returns><paramref name="position2D"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetTranslation3D(Altseed2.Vector3F)">
            <summary>
            3D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position3D">平行移動する座標</param>
            <returns><paramref name="position3D"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.Transform3D(Altseed2.Vector3F)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="vector">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.Transform4D(Altseed2.Vector4F)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="vector">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Addition(Altseed2.Matrix44F,Altseed2.Matrix44F)">
            <summary>
            加算を行います。
            </summary>
            <param name="left">加算する要素</param>
            <param name="right">加算される要素</param>
            <returns>加算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_UnaryNegation(Altseed2.Matrix44F)">
            <summary>
            符合を逆転します。
            </summary>
            <param name="matrix">符合を逆転する行列</param>
            <returns>符合が逆転された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Subtraction(Altseed2.Matrix44F,Altseed2.Matrix44F)">
            <summary>
            減算を行います。
            </summary>
            <param name="left">減算する要素</param>
            <param name="right">減算される要素</param>
            <returns>減算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Multiply(Altseed2.Matrix44F,System.Single)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="matrix">定数倍される行列</param>
            <param name="scalar">乗算する定数</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Multiply(System.Single,Altseed2.Matrix44F)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="scalar">乗算する定数</param>
            <param name="matrix">定数倍される行列</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Division(Altseed2.Matrix44F,System.Single)">
            <summary>
            行列の各値を定数倍で除算します。
            </summary>
            <param name="matrix">除算される行列</param>
            <param name="scalar">除算する定数</param>
            <returns>各値が定数で除算された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Multiply(Altseed2.Matrix44F,Altseed2.Matrix44F)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Multiply(Altseed2.Matrix44F,Altseed2.Vector3F)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.Equals(Altseed2.Matrix44F)">
            <summary>
            2つの<see cref="T:Altseed2.Matrix44F"/>間の等価性を判定します。
            </summary>
            <param name="other">等価性を判定する<see cref="T:Altseed2.Matrix44F"/>のインスタンス</param>
            <returns><paramref name="other"/>との間に等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間の等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Equality(Altseed2.Matrix44F,Altseed2.Matrix44F)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix44F"/>の間の等価性を判定します。
            </summary>
            <param name="m1">等価性を判定する<see cref="T:Altseed2.Matrix44F"/>のインスタンス</param>
            <param name="m2">等価性を判定する<see cref="T:Altseed2.Matrix44F"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.op_Inequality(Altseed2.Matrix44F,Altseed2.Matrix44F)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix44F"/>の間の非等価性を判定します。
            </summary>
            <param name="m1">非等価性を判定する<see cref="T:Altseed2.Matrix44F"/>のインスタンス</param>
            <param name="m2">非等価性を判定する<see cref="T:Altseed2.Matrix44F"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44F.Clone">
            <summary>
            このインスタンスの複製を作成します。
            </summary>
            <returns>このインスタンスの複製</returns>
        </member>
        <member name="T:Altseed2.Matrix44I">
            <summary>
            <see cref="T:System.Int32"/>型の4x4行列を表す構造体
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44I.Identity">
            <summary>
            単位行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44I.TransPosition">
            <summary>
            転置行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Matrix44I.Item(System.Int32,System.Int32)">
            <summary>
            指定したX，Y成分の値を取得または設定します。
            </summary>
            <param name="x">取得する値のX成分</param>
            <param name="y">取得する値のY成分</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="x"/>または<paramref name="y"/>が0未満または4以上</exception>
            <returns><paramref name="x"/>と<paramref name="y"/>に対応する値</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.GetQuaternion(Altseed2.Vector4I)">
            <summary>
            クオータニオンを元に回転行列(右手)を取得します。
            </summary>
            <param name="quaternion">使用するクオータニオン</param>
        </member>
        <member name="M:Altseed2.Matrix44I.GetScale2D(Altseed2.Vector2I)">
            <summary>
            2D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale2D">設定する拡大率</param>
            <returns><paramref name="scale2D"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.GetScale3D(Altseed2.Vector3I)">
            <summary>
            3D座標の拡大率を表す行列を取得します。
            </summary>
            <param name="scale3D">設定する拡大率</param>
            <returns><paramref name="scale3D"/>分の拡大/縮小を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.GetTranslation2D(Altseed2.Vector2I)">
            <summary>
            2D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position2D">平行移動する座標</param>
            <returns><paramref name="position2D"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.GetTranslation3D(Altseed2.Vector3I)">
            <summary>
            3D座標の平行移動分を表す行列を取得します。
            </summary>
            <param name="position3D">平行移動する座標</param>
            <returns><paramref name="position3D"/>分の平行移動を表す行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.Transform3D(Altseed2.Vector3I)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.Transform4D(Altseed2.Vector4I)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Addition(Altseed2.Matrix44I,Altseed2.Matrix44I)">
            <summary>
            加算を行います。
            </summary>
            <param name="left">加算する要素</param>
            <param name="right">加算される要素</param>
            <returns>加算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_UnaryNegation(Altseed2.Matrix44I)">
            <summary>
            符合を逆転します。
            </summary>
            <param name="matrix">符合を逆転する行列</param>
            <returns>符合が逆転された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Subtraction(Altseed2.Matrix44I,Altseed2.Matrix44I)">
            <summary>
            減算を行います。
            </summary>
            <param name="left">減算する要素</param>
            <param name="right">減算される要素</param>
            <returns>減算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Multiply(Altseed2.Matrix44I,System.Int32)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="matrix">定数倍される行列</param>
            <param name="scalar">乗算する定数</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Multiply(System.Int32,Altseed2.Matrix44I)">
            <summary>
            行列の各値を定数倍にします。
            </summary>
            <param name="scalar">乗算する定数</param>
            <param name="matrix">定数倍される行列</param>
            <returns>各値が定数倍された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Division(Altseed2.Matrix44I,System.Int32)">
            <summary>
            行列の各値を定数倍で除算します。
            </summary>
            <param name="matrix">除算される行列</param>
            <param name="scalar">除算する定数</param>
            <returns>各値が定数で除算された行列</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Multiply(Altseed2.Matrix44I,Altseed2.Matrix44I)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Multiply(Altseed2.Matrix44I,Altseed2.Vector3I)">
            <summary>
            乗算を行います。
            </summary>
            <param name="left">乗算する要素</param>
            <param name="right">乗算される要素</param>
            <returns>乗算の結果</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.Equals(Altseed2.Matrix44I)">
            <summary>
            2つの<see cref="T:Altseed2.Matrix44I"/>間の等価性を判定します。
            </summary>
            <param name="other">等価性を判定する<see cref="T:Altseed2.Matrix44I"/>のインスタンス</param>
            <returns><paramref name="other"/>との間に等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間の等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Equality(Altseed2.Matrix44I,Altseed2.Matrix44I)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix44I"/>の間の等価性を判定します。
            </summary>
            <param name="m1">等価性を判定する<see cref="T:Altseed2.Matrix44I"/>のインスタンス</param>
            <param name="m2">等価性を判定する<see cref="T:Altseed2.Matrix44I"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.op_Inequality(Altseed2.Matrix44I,Altseed2.Matrix44I)">
            <summary>
            二つの<see cref="T:Altseed2.Matrix44I"/>の間の非等価性を判定します。
            </summary>
            <param name="m1">非等価性を判定する<see cref="T:Altseed2.Matrix44I"/>のインスタンス</param>
            <param name="m2">非等価性を判定する<see cref="T:Altseed2.Matrix44I"/>のインスタンス</param>
            <returns><paramref name="m1"/> と <paramref name="m2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Matrix44I.Clone">
            <summary>
            このインスタンスの複製を作成します。
            </summary>
            <returns>このインスタンスの複製</returns>
        </member>
        <member name="T:Altseed2.RectF">
            <summary>
            <see cref="T:System.Single"/>型の矩形を表す構造体
            </summary>
        </member>
        <member name="F:Altseed2.RectF.X">
            <summary>
            X座標
            </summary>
        </member>
        <member name="F:Altseed2.RectF.Y">
            <summary>
            Y座標
            </summary>
        </member>
        <member name="F:Altseed2.RectF.Width">
            <summary>
            幅
            </summary>
        </member>
        <member name="F:Altseed2.RectF.Height">
            <summary>
            高さ
            </summary>
        </member>
        <member name="P:Altseed2.RectF.Position">
            <summary>
            左上の座標を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.RectF.Size">
            <summary>
            サイズを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.RectF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:Altseed2.RectF"/>新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
            <param name="width">幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="M:Altseed2.RectF.#ctor(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            <see cref="T:Altseed2.RectF"/>の新しいインスタンスを生成します。
            </summary>
            <param name="position">左上の座標</param>
            <param name="size">サイズ</param>
        </member>
        <member name="M:Altseed2.RectF.Deconstruct(Altseed2.Vector2F@,Altseed2.Vector2F@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="position"><see cref="P:Altseed2.RectF.Position"/></param>
            <param name="size"><see cref="P:Altseed2.RectF.Size"/></param>
        </member>
        <member name="M:Altseed2.RectF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.RectF.X"/></param>
            <param name="y"><see cref="F:Altseed2.RectF.Y"/></param>
            <param name="width"><see cref="F:Altseed2.RectF.Width"/></param>
            <param name="height"><see cref="F:Altseed2.RectF.Height"/></param>
        </member>
        <member name="M:Altseed2.RectF.Equals(Altseed2.RectF,Altseed2.RectF)">
            <summary>
            2つの<see cref="T:Altseed2.RectF"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する矩形1</param>
            <param name="v2">等価性を判定する矩形2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectF.Equals(Altseed2.RectF)">
            <summary>
            もう1つの<see cref="T:Altseed2.RectF"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectF.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectF.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.RectF.ToI">
            <summary>
            同じ値を持つ<see cref="T:Altseed2.RectI"/>の新しいインスタンスを生成します。
            </summary>
            <returns>同じ値を持つ<see cref="T:Altseed2.RectI"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.RectF.op_Equality(Altseed2.RectF,Altseed2.RectF)">
            <summary>
            二つの<see cref="T:Altseed2.RectF"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectF.op_Inequality(Altseed2.RectF,Altseed2.RectF)">
            <summary>
            二つの<see cref="T:Altseed2.RectF"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectF.op_Implicit(Altseed2.RectI)~Altseed2.RectF">
            <summary>
            <see cref="T:Altseed2.RectI"/>から<see cref="T:Altseed2.RectF"/>に型変換します。
            </summary>
            <param name="rect">変換する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.RectF.op_Explicit(Altseed2.RectF)~Altseed2.RectI">
            <summary>
            <see cref="T:Altseed2.RectF"/>から<see cref="T:Altseed2.RectI"/>に型変換します。
            </summary>
            <param name="rect">変換する<see cref="T:Altseed2.RectF"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.RectI">
            <summary>
            <see cref="T:System.Int32"/>型の矩形を表す構造体
            </summary>
        </member>
        <member name="F:Altseed2.RectI.X">
            <summary>
            X座標
            </summary>
        </member>
        <member name="F:Altseed2.RectI.Y">
            <summary>
            Y座標
            </summary>
        </member>
        <member name="F:Altseed2.RectI.Width">
            <summary>
            幅
            </summary>
        </member>
        <member name="F:Altseed2.RectI.Height">
            <summary>
            高さ
            </summary>
        </member>
        <member name="P:Altseed2.RectI.Position">
            <summary>
            左上の座標を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.RectI.Size">
            <summary>
            サイズを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.RectI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Altseed2.RectI"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
            <param name="width">幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="M:Altseed2.RectI.#ctor(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            <see cref="T:Altseed2.RectI"/>の新しいインスタンスを生成します。
            </summary>
            <param name="position">左上の座標</param>
            <param name="size">サイズ</param>
        </member>
        <member name="M:Altseed2.RectI.Deconstruct(Altseed2.Vector2I@,Altseed2.Vector2I@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="position"><see cref="P:Altseed2.RectI.Position"/></param>
            <param name="size"><see cref="P:Altseed2.RectI.Size"/></param>
        </member>
        <member name="M:Altseed2.RectI.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.RectI.X"/></param>
            <param name="y"><see cref="F:Altseed2.RectI.Y"/></param>
            <param name="width"><see cref="F:Altseed2.RectI.Width"/></param>
            <param name="height"><see cref="F:Altseed2.RectI.Height"/></param>
        </member>
        <member name="M:Altseed2.RectI.Equals(Altseed2.RectI,Altseed2.RectI)">
            <summary>
            2つの<see cref="T:Altseed2.RectI"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する矩形1</param>
            <param name="v2">等価性を判定する矩形2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectI.Equals(Altseed2.RectI)">
            <summary>
            もう1つの<see cref="T:Altseed2.RectI"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectI.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectI.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.RectI.ToF">
            <summary>
            同じ値を持つ<see cref="T:Altseed2.RectF"/>の新しいインスタンスを生成します。
            </summary>
            <returns>同じ値を持つ<see cref="T:Altseed2.RectF"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.RectI.op_Equality(Altseed2.RectI,Altseed2.RectI)">
            <summary>
            二つの<see cref="T:Altseed2.RectI"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.RectI.op_Inequality(Altseed2.RectI,Altseed2.RectI)">
            <summary>
            二つの<see cref="T:Altseed2.RectI"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.RectI"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.Vector2F">
            <summary>
            <see cref="T:System.Single"/>型の二次元ベクトルを表す構造体
            </summary>
        </member>
        <member name="F:Altseed2.Vector2F.X">
            <summary>
            X座標
            </summary>
        </member>
        <member name="F:Altseed2.Vector2F.Y">
            <summary>
            Y座標
            </summary>
        </member>
        <member name="P:Altseed2.Vector2F.Degree">
            <summary>
            ベクトルの度数法の角度を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2F.Normal">
            <summary>
            このベクトルの単位ベクトル取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2F.Length">
            <summary>
            ベクトルの長さを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2F.Radian">
            <summary>
            ベクトルの弧度法の角度を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector2F.SquaredLength">
            <summary>
            ベクトルの長さの2乗取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector2F.#ctor(System.Single,System.Single)">
            <summary>
            <see cref="T:Altseed2.Vector2F"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
        </member>
        <member name="M:Altseed2.Vector2F.Equals(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つの<see cref="T:Altseed2.Vector2F"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Equals(Altseed2.Vector2F)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector2F"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性をが認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2F.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Equality(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector2F"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Inequality(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector2F"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Deconstruct(System.Single@,System.Single@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector2F.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector2F.Y"/></param>
        </member>
        <member name="M:Altseed2.Vector2F.Normalize">
            <summary>
            単位ベクトル化します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector2F.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector2F.To2I">
            <summary>
            <see cref="T:Altseed2.Vector2I"/>に型変換します。
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector2I"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Cross(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルの外積を求めます。
            </summary>
            <param name="left">使用するベクトル1</param>
            <param name="right">使用するベクトル2</param>
            <returns><paramref name="left"/>と<paramref name="right"/>の外積</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Distance(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトル間の距離を求めます。
            </summary>
            <param name="v1">距離を求めるベクトル1</param>
            <param name="v2">距離を求めるベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の間の距離</returns>
        </member>
        <member name="M:Altseed2.Vector2F.Dot(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルの内積を求めます。
            </summary>
            <param name="v1">使用するベクトル1</param>
            <param name="v2">使用するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の内積</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Addition(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_UnaryNegation(Altseed2.Vector2F)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_UnaryPlus(Altseed2.Vector2F)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Subtraction(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Multiply(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y)</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Multiply(Altseed2.Vector2F,System.Single)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Multiply(System.Single,Altseed2.Vector2F)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Division(Altseed2.Vector2F,Altseed2.Vector2F)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y)</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Division(Altseed2.Vector2F,System.Single)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar)</returns>
        </member>
        <member name="M:Altseed2.Vector2F.op_Explicit(Altseed2.Vector2F)~Altseed2.Vector2I">
            <summary>
            <see cref="T:Altseed2.Vector2F"/>から<see cref="T:Altseed2.Vector2I"/>に型変換します。
            </summary>
            <param name="f">変換する<see cref="T:Altseed2.Vector2F"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Vector2F.op_Implicit(Altseed2.Vector2I)~Altseed2.Vector2F">
            <summary>
            <see cref="T:Altseed2.Vector2I"/>から<see cref="T:Altseed2.Vector2F"/>に型変換します。
            </summary>
            <param name="i">変換する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.Vector2I">
            <summary>
            <see cref="T:System.Int32"/>型の二次元ベクトルを表す構造体
            </summary>
        </member>
        <member name="F:Altseed2.Vector2I.X">
            <summary>
            X座標
            </summary>
        </member>
        <member name="F:Altseed2.Vector2I.Y">
            <summary>
            Y座標
            </summary>
        </member>
        <member name="M:Altseed2.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:Altseed2.Vector2I"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
        </member>
        <member name="M:Altseed2.Vector2I.Equals(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つの<see cref="T:Altseed2.Vector2I"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Equals(Altseed2.Vector2I)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector2I"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2I.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Equality(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector2I"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Inequality(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector2I"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector2I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Deconstruct(System.Int32@,System.Int32@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector2I.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector2I.Y"/></param>
        </member>
        <member name="M:Altseed2.Vector2I.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector2I.To2F">
            <summary>
            <see cref="T:Altseed2.Vector2F"/>に型変換します。
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector2F"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Cross(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルの外積を求めます。
            </summary>
            <param name="left">使用するベクトル1</param>
            <param name="right">使用するベクトル2</param>
            <returns><paramref name="left"/>と<paramref name="right"/>の外積</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Distance(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2点間の距離取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="M:Altseed2.Vector2I.Dot(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルの内積を求めます。
            </summary>
            <param name="v1">使用するベクトル1</param>
            <param name="v2">使用するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の内積</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Addition(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_UnaryPlus(Altseed2.Vector2I)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_UnaryNegation(Altseed2.Vector2I)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Subtraction(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Multiply(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y)</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Multiply(Altseed2.Vector2I,System.Int32)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Multiply(System.Int32,Altseed2.Vector2I)">
            <summary>
            ベクトルと値を積算する
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Division(Altseed2.Vector2I,Altseed2.Vector2I)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y)</returns>
        </member>
        <member name="M:Altseed2.Vector2I.op_Division(Altseed2.Vector2I,System.Int32)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar)</returns>
        </member>
        <member name="T:Altseed2.Vector3F">
            <summary>
            3次元ベクトル
            </summary>
        </member>
        <member name="F:Altseed2.Vector3F.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector3F.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector3F.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="P:Altseed2.Vector3F.Length">
            <summary>
            ベクトルの長さを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector3F.Normal">
            <summary>
            このベクトルの単位ベクトルを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector3F.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector3F.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:Altseed2.Vector3F"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X成分</param>
            <param name="y">Y成分</param>
            <param name="z">Z成分</param>
        </member>
        <member name="M:Altseed2.Vector3F.Equals(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2つの<see cref="T:Altseed2.Vector3F"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3F.Equals(Altseed2.Vector3F)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector3F"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性をが認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3F.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3F.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Equality(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector3F"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Inequality(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector3F"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3F.Deconstruct(System.Single@,System.Single@,System.Single@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector3F.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector3F.Y"/></param>
            <param name="z"><see cref="F:Altseed2.Vector3F.Z"/></param>
        </member>
        <member name="M:Altseed2.Vector3F.Normalize">
            <summary>
            このベクトルを単位ベクトル化します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector3F.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector3F.To3I">
            <summary>
            <see cref="T:Altseed2.Vector3I"/>に型変換します。
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector3I"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector3F.Cross(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            外積を取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
            <remarks>
            右手の親指がv1、人差し指がv2としたとき、中指の方向を返します。。
            </remarks>
        </member>
        <member name="M:Altseed2.Vector3F.Dot(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            内積を取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>内積v1・v2</returns>
        </member>
        <member name="M:Altseed2.Vector3F.Distance(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2点間の距離を取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Addition(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_UnaryPlus(Altseed2.Vector3F)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_UnaryNegation(Altseed2.Vector3F)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Subtraction(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Multiply(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z)</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Multiply(Altseed2.Vector3F,System.Single)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Multiply(System.Single,Altseed2.Vector3F)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Division(Altseed2.Vector3F,Altseed2.Vector3F)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y, left.Z / right.Z)</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Division(Altseed2.Vector3F,System.Single)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar, vector.Z / scalar)</returns>
        </member>
        <member name="M:Altseed2.Vector3F.op_Implicit(Altseed2.Vector3I)~Altseed2.Vector3F">
            <summary>
            <see cref="T:Altseed2.Vector3I"/>から<see cref="T:Altseed2.Vector3F"/>に型変換します。
            </summary>
            <param name="v">変換する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Vector3F.op_Explicit(Altseed2.Vector3F)~Altseed2.Vector3I">
            <summary>
            <see cref="T:Altseed2.Vector3F"/>から<see cref="T:Altseed2.Vector3I"/>に型変換します。
            </summary>
            <param name="v">変換する<see cref="T:Altseed2.Vector3F"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.Vector3I">
            <summary>
            3次元ベクトル
            </summary>
        </member>
        <member name="F:Altseed2.Vector3I.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector3I.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector3I.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="M:Altseed2.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Altseed2.Vector3I"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X成分</param>
            <param name="y">Y成分</param>
            <param name="z">Z成分</param>
        </member>
        <member name="M:Altseed2.Vector3I.Equals(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2つの<see cref="T:Altseed2.Vector3I"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3I.Equals(Altseed2.Vector3I)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector3I"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性をが認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3I.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3I.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Equality(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector3I"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Inequality(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector3I"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector3I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector3I.Deconstruct(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector3I.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector3I.Y"/></param>
            <param name="z"><see cref="F:Altseed2.Vector3I.Z"/></param>
        </member>
        <member name="M:Altseed2.Vector3I.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector3I.To3F">
            <summary>
            <see cref="T:Altseed2.Vector3F"/>に型変換します。
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector3F"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector3I.Cross(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            外積取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
            <remarks>
            右手の親指がv1、人差し指がv2としたとき、中指の方向を返します。。
            </remarks>
        </member>
        <member name="M:Altseed2.Vector3I.Distance(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2点間の距離取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="M:Altseed2.Vector3I.Dot(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            内積取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>内積v1・v2</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Addition(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_UnaryPlus(Altseed2.Vector3I)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_UnaryNegation(Altseed2.Vector3I)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Subtraction(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Multiply(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z)</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Multiply(Altseed2.Vector3I,System.Int32)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Multiply(System.Int32,Altseed2.Vector3I)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Division(Altseed2.Vector3I,Altseed2.Vector3I)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y, left.Z / right.Z)</returns>
        </member>
        <member name="M:Altseed2.Vector3I.op_Division(Altseed2.Vector3I,System.Int32)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar, vector.Z / scalar)</returns>
        </member>
        <member name="T:Altseed2.Vector4F">
            <summary>
            4次元ベクトル
            </summary>
        </member>
        <member name="F:Altseed2.Vector4F.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4F.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4F.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4F.W">
            <summary>
            W成分
            </summary>
        </member>
        <member name="P:Altseed2.Vector4F.Length">
            <summary>
            ベクトルの長さを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector4F.Normal">
            <summary>
            このベクトルの単位ベクトル取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Vector4F.SquaredLength">
            <summary>
            ベクトルの長さの二乗取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector4F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:Altseed2.Vector4F"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
            <param name="z">Z座標</param>
            <param name="w">W座標</param>
        </member>
        <member name="M:Altseed2.Vector4F.Equals(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2つの<see cref="T:Altseed2.Vector4F"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4F.Equals(Altseed2.Vector4F)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector4F"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性をが認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4F.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4F.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Equality(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector4F"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Inequality(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            二つの<see cref="T:Altseed2.Vector4F"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4F.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector4F.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector4F.Y"/></param>
            <param name="z"><see cref="F:Altseed2.Vector4F.Z"/></param>
            <param name="w"><see cref="F:Altseed2.Vector4F.W"/></param>
        </member>
        <member name="M:Altseed2.Vector4F.Normalize">
            <summary>
            このベクトルを単位ベクトル化します。
            </summary>
        </member>
        <member name="M:Altseed2.Vector4F.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector4F.To4I">
            <summary>
            <see cref="T:Altseed2.Vector4I"/>に型変換する
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector4I"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector4F.Distance(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2点間の距離取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="M:Altseed2.Vector4F.Dot(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            外積取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Addition(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_UnaryPlus(Altseed2.Vector4F)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_UnaryNegation(Altseed2.Vector4F)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Subtraction(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Multiply(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z, v1.W * v2.W)</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Multiply(Altseed2.Vector4F,System.Single)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Multiply(System.Single,Altseed2.Vector4F)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Division(Altseed2.Vector4F,Altseed2.Vector4F)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y, left.Z / right.Z, left.W / right.W)</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Division(Altseed2.Vector4F,System.Single)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar, vector.Z / scalar, vector.W / scalar)</returns>
        </member>
        <member name="M:Altseed2.Vector4F.op_Implicit(Altseed2.Vector4I)~Altseed2.Vector4F">
            <summary>
            <see cref="T:Altseed2.Vector4I"/>から<see cref="T:Altseed2.Vector4F"/>に型変換します。
            </summary>
            <param name="v">変換する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.Vector4F.op_Explicit(Altseed2.Vector4F)~Altseed2.Vector4I">
            <summary>
            <see cref="T:Altseed2.Vector4F"/>から<see cref="T:Altseed2.Vector4I"/>に型変換します。
            </summary>
            <param name="v">変換する<see cref="T:Altseed2.Vector4F"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.Vector4I">
            <summary>
            4次元ベクトル
            </summary>
        </member>
        <member name="F:Altseed2.Vector4I.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4I.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4I.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="F:Altseed2.Vector4I.W">
            <summary>
            W成分
            </summary>
        </member>
        <member name="M:Altseed2.Vector4I.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:Altseed2.Vector4I"/>の新しいインスタンスを生成します。
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
            <param name="z">Z座標</param>
            <param name="w">W座標</param>
        </member>
        <member name="M:Altseed2.Vector4I.Equals(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2つの<see cref="T:Altseed2.Vector4I"/>間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定するベクトル1</param>
            <param name="v2">等価性を判定するベクトル2</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4I.Equals(Altseed2.Vector4I)">
            <summary>
            もう1つの<see cref="T:Altseed2.Vector4I"/>との等価性を判定します。
            </summary>
            <param name="other">比較する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
            <returns><paramref name="other"/>等価性をが認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4I.Equals(System.Object)">
            <summary>
            指定したオブジェクトとの等価性を判定します。
            </summary>
            <param name="obj">等価性を判定するオブジェクト</param>
            <returns><paramref name="obj"/>との間に等価性が認められたらtrue、それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4I.GetHashCode">
            <summary>
            このオブジェクトのハッシュコードを返します。
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Equality(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector4I"/>の間の等価性を判定します。
            </summary>
            <param name="v1">等価性を判定する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
            <param name="v2">等価性を判定する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Inequality(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            二つの<see cref="T:Altseed2.Vector4I"/>の間の非等価性を判定します。
            </summary>
            <param name="v1">非等価性を判定する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
            <param name="v2">非等価性を判定する<see cref="T:Altseed2.Vector4I"/>のインスタンス</param>
            <returns><paramref name="v1"/> と <paramref name="v2"/> の間との非等価性が認められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.Vector4I.Deconstruct(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            このインスタンスから要素を取り出します。
            </summary>
            <param name="x"><see cref="F:Altseed2.Vector4I.X"/></param>
            <param name="y"><see cref="F:Altseed2.Vector4I.Y"/></param>
            <param name="z"><see cref="F:Altseed2.Vector4I.Z"/></param>
            <param name="w"><see cref="F:Altseed2.Vector4I.W"/></param>
        </member>
        <member name="M:Altseed2.Vector4I.ToString">
            <summary>
            このベクトルを表す文字列取得します。
            </summary>
            <returns>このベクトルを表す文字列取得します。</returns>
        </member>
        <member name="M:Altseed2.Vector4I.To4F">
            <summary>
            <see cref="T:Altseed2.Vector4F"/>に型変換する
            </summary>
            <returns>このインスタンスと等価な<see cref="T:Altseed2.Vector4F"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.Vector4I.Dot(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            外積取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
        </member>
        <member name="M:Altseed2.Vector4I.Distance(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2点間の距離取得します。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Addition(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2つのベクトルを加算します。
            </summary>
            <param name="v1">加算するベクトル1</param>
            <param name="v2">加算するベクトル2</param>
            <returns><paramref name="v1"/>と<paramref name="v2"/>の和</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_UnaryPlus(Altseed2.Vector4I)">
            <summary>
            与えられたベクトルを返します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/></returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_UnaryNegation(Altseed2.Vector4I)">
            <summary>
            ベクトルの符号を反転します。
            </summary>
            <param name="vector">符合を反転するベクトル</param>
            <returns><paramref name="vector"/>の逆符合版</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Subtraction(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2つのベクトルを減算します。
            </summary>
            <param name="left">減算されるベクトル</param>
            <param name="right">減算するベクトル</param>
            <returns>減算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Multiply(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2つのベクトルを積算します。
            </summary>
            <param name="v1">積算するベクトル1</param>
            <param name="v2">積算するベクトル2</param>
            <returns>積算結果(v1.X * v2.X, v1.Y * v2.Y, v1.Z * v2.Z, v1.W * v2.W)</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Multiply(Altseed2.Vector4I,System.Int32)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="vector">積算するベクトル</param>
            <param name="scalar">積算する値</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Multiply(System.Int32,Altseed2.Vector4I)">
            <summary>
            ベクトルと値を積算します。
            </summary>
            <param name="scalar">積算する値</param>
            <param name="vector">積算するベクトル</param>
            <returns>積算結果</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Division(Altseed2.Vector4I,Altseed2.Vector4I)">
            <summary>
            2つのベクトルを除算します。
            </summary>
            <param name="left">除算されるベクトル</param>
            <param name="right">除算するベクトル</param>
            <returns>除算結果(left.X / right.X, left.Y / right.Y, left.Z / right.Z, left.W / right.W)</returns>
        </member>
        <member name="M:Altseed2.Vector4I.op_Division(Altseed2.Vector4I,System.Int32)">
            <summary>
            ベクトルを値で除算します。
            </summary>
            <param name="vector">除算されるベクトル</param>
            <param name="scalar">除算する値</param>
            <returns>除算結果(vector.X / scalar, vector.Y / scalar, vector.Z / scalar, vector.W / scalar)</returns>
        </member>
        <member name="T:Altseed2.AnchorMode">
            <summary>
            アンカー機能の計算方法を指定します。
            </summary>
        </member>
        <member name="F:Altseed2.AnchorMode.Fill">
            <summary>
            Size いっぱいに描画されるよう拡大率を計算します。ContentSize の縦横比は保持されません。
            </summary>
        </member>
        <member name="F:Altseed2.AnchorMode.KeepAspect">
            <summary>
            ContentSize の縦横比は保持しつつ、Size に収まって描画されるよう拡大率を計算します。
            </summary>
        </member>
        <member name="F:Altseed2.AnchorMode.ContentSize">
            <summary>
            ContentSizeのまま表示します
            </summary>
        </member>
        <member name="T:Altseed2.HorizontalAlignment">
            <summary>
            水平方向の配置
            </summary>
        </member>
        <member name="F:Altseed2.HorizontalAlignment.Left">
            <summary>
            左揃え
            </summary>
        </member>
        <member name="F:Altseed2.HorizontalAlignment.Center">
            <summary>
            中央揃え
            </summary>
        </member>
        <member name="F:Altseed2.HorizontalAlignment.Right">
            <summary>
            右揃え
            </summary>
        </member>
        <member name="T:Altseed2.VerticalAlignment">
            <summary>
            垂直方向の配置
            </summary>
        </member>
        <member name="F:Altseed2.VerticalAlignment.Top">
            <summary>
            上揃え
            </summary>
        </member>
        <member name="F:Altseed2.VerticalAlignment.Center">
            <summary>
            中央揃え
            </summary>
        </member>
        <member name="F:Altseed2.VerticalAlignment.Bottom">
            <summary>
            下揃え
            </summary>
        </member>
        <member name="T:Altseed2.AnchorTransformerNode">
            <summary>
            アンカーによって変形するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Transform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.InheritedTransform">
            <summary>
            先祖の変形を加味した変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.AbsoluteTransform">
            <summary>
            先祖の変形および<see cref="P:Altseed2.AnchorTransformerNode.AnchorMode"/>を加味した最終的な変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Angle">
            <summary>
            角度(度数法)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Position">
            <summary>
            座標を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.CenterPosition">
            <summary>
            中心となる座標をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Pivot">
            <summary>
            中心となる座標を[0, 1]で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Size">
            <summary>
            描画サイズを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.LeftTop">
            <summary>
            <see cref="P:Altseed2.AnchorTransformerNode.Size" />の左上から親ノードの<see cref="P:Altseed2.AnchorTransformerNode.Size" />の左上までの距離
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.RightBottom">
            <summary>
            <see cref="P:Altseed2.AnchorTransformerNode.Size" />の右下から親ノードの<see cref="P:Altseed2.AnchorTransformerNode.Size" />の右下までの距離
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.AnchorMin">
            <summary>
            アンカー(左上)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.AnchorMax">
            <summary>
            アンカー(右下)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.Scale">
            <summary>
            拡大率を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.HorizontalFlip">
            <summary>
            左右を反転するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.VerticalFlip">
            <summary>
            上下を反転するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.AnchorMode">
            <summary>
            サイズとコンテンツの関係を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.HorizontalAlignment">
            <summary>
            水平方向の配置
            </summary>
        </member>
        <member name="P:Altseed2.AnchorTransformerNode.VerticalAlignment">
            <summary>
            垂直方向の配置
            </summary>
        </member>
        <member name="M:Altseed2.AnchorTransformerNode.ApplySizeChanged(Altseed2.Node)">
            <summary>
            <see cref="P:Altseed2.AnchorTransformerNode.Size"/>変更時に、直下の<see cref="T:Altseed2.AnchorTransformerNode"/>を持つ<see cref="T:Altseed2.TransformNode"/>に対して
            <see cref="P:Altseed2.AnchorTransformerNode.LeftTop"/>/<see cref="P:Altseed2.AnchorTransformerNode.RightBottom"/>/<see cref="P:Altseed2.AnchorTransformerNode.AnchorMax"/>/<see cref="P:Altseed2.AnchorTransformerNode.AnchorMin"/>を用いて
            <see cref="P:Altseed2.AnchorTransformerNode.Size"/>/<see cref="P:Altseed2.AnchorTransformerNode.Position"/>を更新します。
            </summary>
        </member>
        <member name="T:Altseed2.CameraNode">
            <summary>
            カメラとして機能するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.Group">
            <summary>
            描画対象のグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.ClearColor">
            <summary>
            何も描画されていない部分の色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.IsColorCleared">
            <summary>
            描画開始時に<see cref="P:Altseed2.CameraNode.ClearColor"/>で描画先を塗りつぶすかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.CameraNode.#ctor">
            <summary>
            <see cref="T:Altseed2.CameraNode"/>新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="P:Altseed2.CameraNode.Angle">
            <summary>
            描画領域の回転角（度数法）を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.Position">
            <summary>
            描画領域の座標を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.CenterPosition">
            <summary>
            描画領域の中心座標をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.Scale">
            <summary>
            描画領域の拡大率を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CameraNode.TargetTexture">
            <summary>
            描画先のテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="T:Altseed2.IDrawn">
            <summary>
            描画ノードインターフェース
            </summary>
        </member>
        <member name="P:Altseed2.IDrawn.CameraGroup">
            <summary>
            カメラグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.IDrawn.ZOrder">
            <summary>
            描画時の重ね順を取得または設定します。
            </summary>
        </member>
        <member name="T:Altseed2.ICullableDrawn">
            <summary>
            カリング対象ノードインターフェース
            </summary>
        </member>
        <member name="P:Altseed2.ICullableDrawn.IsDrawn">
            <summary>
            このノードを描画するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ICullableDrawn.IsDrawnActually">
            <summary>
            先祖の<see cref="P:Altseed2.ICullableDrawn.IsDrawn" />を考慮して、このノードを描画するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.ICullableDrawn.ContentSize">
            <summary>
            コンテンツのサイズを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.DrawnExtension.UpdateIsDrawnActuallyOfDescendants``1(``0)">
            <summary>
            自身と子孫ノードの IsDrawnActually プロパティを更新します。
            </summary>
        </member>
        <member name="T:Altseed2.Node">
            <summary>
            ゲームシーンを構成するノードを表します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.#ctor">
            <summary>
            <see cref="T:Altseed2.Node"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.Update">
            <summary>
            更新を行います。　
            </summary>
        </member>
        <member name="P:Altseed2.Node.Parent">
            <summary>
            親ノードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Node.Status">
            <summary>
            このノードの登録状況を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.Added(Altseed2.Node)">
            <summary>
            <paramref name="owner"/>に登録された際の処理を行います。
            </summary>
            <param name="owner">新たなオーナー</param>
        </member>
        <member name="M:Altseed2.Node.Removed">
            <summary>
            親要素から削除されたときの処理を行います。
            </summary>
        </member>
        <member name="M:Altseed2.Node.Registered">
            <summary>
            エンジンに登録され、ノードツリーを辿って<see cref="T:Altseed2.RootNode"/> にたどり着けるようになったとき実行します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.Unregistered">
            <summary>
            エンジンから削除され、ノードツリーを辿って<see cref="T:Altseed2.RootNode"/> にたどり着けなくなったとき実行します。
            </summary>
        </member>
        <member name="P:Altseed2.Node.Children">
            <summary>
            子要素のコレクションを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.AddChildNode(Altseed2.Node)">
            <summary>
            子要素を追加します。
            </summary>
            <param name="node">追加する要素</param>
        </member>
        <member name="M:Altseed2.Node.RemoveChildNode(Altseed2.Node)">
            <summary>
            子要素を削除します。
            </summary>
            <param name="node">削除する要素</param>
        </member>
        <member name="M:Altseed2.Node.FlushQueue">
            <summary>
            予約されている追加・削除を直ちに実行します。
            </summary>
            <remarks>この<see cref="T:Altseed2.Node"/>自身の更新中に実行することはできません。</remarks>
        </member>
        <member name="M:Altseed2.Node.OnAdded">
            <summary>
            エンジンに追加された時に実行します。
            </summary>
            <remarks>
            自身もしくは親ノードがEngineに登録されたあとのUpdateの際に実行されます。
            </remarks>
        </member>
        <member name="M:Altseed2.Node.OnRemoved">
            <summary>
            エンジンから削除された時に実行します。
            </summary>
            <remarks>
            自身もしくは親ノードがEngineにから削除されたあとのUpdateの際に実行されます。
            </remarks>
        </member>
        <member name="M:Altseed2.Node.OnUpdate">
            <summary>
            自身が更新された時に実行します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.OnSerializing(System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズ時に実行します。
            </summary>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Node.OnSerialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            シリアライズ終了時に実行します。
            </summary>
            <param name="context">送信先の情報</param>
        </member>
        <member name="M:Altseed2.Node.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
            <summary>
            デシリアライズ時に実行します。
            </summary>
            <param name="context">送信元の情報</param>
        </member>
        <member name="P:Altseed2.Node.IsRegistered">
            <summary>
            エンジンに登録され、ノードツリーを辿って<see cref="T:Altseed2.RootNode"/> にたどり着けるかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.Node.IsUpdated">
            <summary>
            この<see cref="T:Altseed2.Node"/>が更新されるかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.Node.IsUpdatedActually">
            <summary>
            先祖の<see cref="P:Altseed2.Node.IsUpdated" />を考慮して、このノードが更新されるかどうかを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.PropagateIsUpdatedActually(Altseed2.Node,System.Boolean)">
            <summary>
            子孫ノード<see cref="T:Altseed2.Node"/>に対して<see cref="P:Altseed2.Node.IsUpdatedActually"/>を伝播させます。
            </summary>
            <param name="node"><see cref="P:Altseed2.Node.IsUpdatedActually"/>を変更する対象のノード</param>
            <param name="isUpdatedActually">親ノードの<see cref="P:Altseed2.Node.IsUpdatedActually"/></param>
        </member>
        <member name="M:Altseed2.Node.EnumerateAncestors">
            <summary>
            先祖ノードを列挙します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.EnumerateDescendants">
            <summary>
            子孫ノードを列挙します。
            </summary>
        </member>
        <member name="M:Altseed2.Node.EnumerateDescendants``1(System.Func{``0,System.Boolean})">
            <summary>
            <typeparamref name="T"/>型の子孫ノードのうち <paramref name="condition"/> を満たすものを列挙します。
            </summary>
            <typeparam name="T">列挙されるノードの型</typeparam>
            <param name="condition">列挙するノードの条件</param>
        </member>
        <member name="T:Altseed2.CircleColliderNode">
            <summary>
            円形コライダを管理するノード
            </summary>
        </member>
        <member name="T:Altseed2.CircleColliderNode.ScaleCalcType">
            <summary>
            拡大率を適用する方法を表します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.X">
            <summary>
            Scale.Xで計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.Y">
            <summary>
            Scale.Yで計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.Length">
            <summary>
            Scale.Lengthで計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.Min">
            <summary>
            X，Yの最小値で計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.Max">
            <summary>
            X，Yの最大値で計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.AbsMin">
            <summary>
            X，Yの絶対値の最小値で計算します。
            </summary>
        </member>
        <member name="F:Altseed2.CircleColliderNode.ScaleCalcType.AbsMax">
            <summary>
            X，Yの絶対値の最大値で計算します。
            </summary>
        </member>
        <member name="P:Altseed2.CircleColliderNode.CircleCollider">
            <summary>
            使用するコライダを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.CircleColliderNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.CircleColliderNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.CircleColliderNode.Radius">
            <summary>
            衝突半径を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CircleColliderNode.ScaleType">
            <summary>
            拡大率の計算方法を取得または設定します。
            </summary>
            <remarks>既定値：<see cref="F:Altseed2.CircleColliderNode.ScaleCalcType.AbsMax"/></remarks>
        </member>
        <member name="M:Altseed2.CircleColliderNode.#ctor">
            <summary>
            既定の<see cref="T:Altseed2.CircleCollider"/>を使用して<see cref="T:Altseed2.CircleColliderNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.CircleColliderNode.#ctor(Altseed2.CircleCollider)">
            <summary>
            指定した<see cref="T:Altseed2.CircleCollider"/>を使用して<see cref="T:Altseed2.CircleColliderNode"/>の新しいインスタンスを生成します。
            </summary>
            <param name="collider">使用する<see cref="T:Altseed2.CircleCollider"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.ColliderNode">
            <summary>
            コライダを管理するノード
            </summary>
        </member>
        <member name="P:Altseed2.ColliderNode.Collider">
            <summary>
            コライダを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.ColliderNode.#ctor">
            <summary>
            <see cref="T:Altseed2.ColliderNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.ColliderVisualizeNodeFactory">
            <summary>
            <see cref="T:Altseed2.ColliderNode"/>の当たり判定範囲として描画されるノードを提供するクラス
            </summary>
        </member>
        <member name="M:Altseed2.ColliderVisualizeNodeFactory.Create(Altseed2.ColliderNode)">
            <summary>
            指定した<see cref="T:Altseed2.ColliderNode"/>の当たり判定領域を表示するノードを生成します。
            </summary>
            <param name="colliderNode">使用するコライダノード</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colliderNode"/>の型がサポートされていない型である
            (<see cref="T:Altseed2.CircleColliderNode"/>，<see cref="T:Altseed2.PolygonColliderNode"/>，<see cref="T:Altseed2.RectangleColliderNode"/>若しくはそれらから派生した型ではない)
            </exception>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="colliderNode"/>がnull</exception>
            <returns><paramref name="colliderNode"/>の当たり領域を表示するノード</returns>
        </member>
        <member name="T:Altseed2.PolygonColliderNode">
            <summary>
            ポリゴンコライダを管理するノード
            </summary>
        </member>
        <member name="P:Altseed2.PolygonColliderNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.PolygonColliderNode.PolygonCollider">
            <summary>
            使用するコライダを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonColliderNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.PolygonColliderNode.Vertexes">
            <summary>
            頂点情報の配列を取得または設定します。
            </summary>
            <exception cref="T:System.ArgumentNullException">設定しようとした値がnull</exception>
        </member>
        <member name="M:Altseed2.PolygonColliderNode.#ctor">
            <summary>
            既定の<see cref="T:Altseed2.PolygonCollider"/>を使用して<see cref="T:Altseed2.PolygonColliderNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.PolygonColliderNode.#ctor(Altseed2.PolygonCollider)">
            <summary>
            指定した<see cref="T:Altseed2.PolygonCollider"/>を使用して<see cref="T:Altseed2.PolygonColliderNode"/>の新しいインスタンスを生成します。
            </summary>
            <param name="collider">使用する<see cref="T:Altseed2.PolygonCollider"/>のインスタンス</param>
        </member>
        <member name="M:Altseed2.PolygonColliderNode.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F})">
            <summary>
            指定した座標に頂点を設定します。
            </summary>
            <param name="positions">設定する座標</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="positions"/>がnull</exception>
        </member>
        <member name="M:Altseed2.PolygonColliderNode.SetVertexes(System.Span{Altseed2.Vector2F})">
            <summary>
            指定した座標に頂点を設定する
            </summary>
            <param name="positions">設定する座標</param>
        </member>
        <member name="T:Altseed2.RectangleColliderNode">
            <summary>
            短形コライダを管理するノード
            </summary>
        </member>
        <member name="P:Altseed2.RectangleColliderNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.RectangleColliderNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.RectangleColliderNode.RectangleCollider">
            <summary>
            使用するコライダを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.RectangleColliderNode.RectangleSize">
            <summary>
            短形のサイズを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RectangleColliderNode.#ctor">
            <summary>
            既定の<see cref="T:Altseed2.RectangleCollider"/>を使用して<see cref="T:Altseed2.RectangleColliderNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.RectangleColliderNode.#ctor(Altseed2.RectangleCollider)">
            <summary>
            指定した<see cref="T:Altseed2.RectangleCollider"/>を使用して<see cref="T:Altseed2.RectangleColliderNode"/>の新しいインスタンスを生成します。
            </summary>
            <param name="collider">使用する<see cref="T:Altseed2.RectangleCollider"/>のインスタンス</param>
        </member>
        <member name="T:Altseed2.PolygonNode">
            <summary>
            図形を描画するノードを表します。
            </summary>
        </member>
        <member name="M:Altseed2.PolygonNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PolygonNode"/>の新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="P:Altseed2.PolygonNode.Altseed2#ICullableDrawn#CullingId">
            <summary>
            カリング用ID
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.CameraGroup">
            <summary>
            カメラグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.ZOrder">
            <summary>
            描画時の重ね順を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.IsDrawn">
            <summary>
            このノードを描画するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.IsDrawnActually">
            <summary>
            先祖の<see cref="P:Altseed2.PolygonNode.IsDrawn"/>を考慮して、このノードを描画するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.AlphaBlend">
            <summary>
            ブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.Src">
            <summary>
            <see cref="P:Altseed2.PolygonNode.Texture"/>を切り出す範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.Texture">
            <summary>
            描画するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.Material">
            <summary>
            描画に適用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.PolygonNode.Vertexes">
            <summary>
            頂点情報のコレクションを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.PolygonNode.Validate(Altseed2.VertexArray)">
            <summary>
            頂点情報が有効かどうかを判定します。
            </summary>
            <param name="vertexes">頂点情報</param>
        </member>
        <member name="M:Altseed2.PolygonNode.Validate(Altseed2.Vector2FArray)">
            <summary>
            頂点情報が有効かどうかを判定します。
            </summary>
            <param name="vertexes">頂点情報</param>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexes(System.ReadOnlySpan{Altseed2.Vertex},System.Boolean)">
            <summary>
            座標をもとに頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の座標を格納する<see cref="T:System.Span`1" /></param>
            <param name="resetIB"><see cref="P:Altseed2.PolygonNode.Buffers"/>を自動計算したものに設定するかどうか</param>
            <remarks>
            色は白(255, 255, 255)に設定されます。
            </remarks>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vertex},System.Boolean)">
            <summary>
            座標をもとに頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の座標を格納する<see cref="T:System.Collections.Generic.IEnumerable`1" /></param>
            <param name="resetIB"><see cref="P:Altseed2.PolygonNode.Buffers"/>を自動計算したものに設定するかどうか</param>
            <remarks>
            色は白(255, 255, 255)に設定されます。
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="vertexes"/>がnullです。</exception>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexes(System.ReadOnlySpan{Altseed2.Vector2F},Altseed2.Color,System.Boolean)">
            <summary>
            座標をもとに頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の座標を格納する<see cref="T:System.Span`1" /></param>
            <param name="color">各頂点に設定する色</param>
            <param name="resetIB"><see cref="P:Altseed2.PolygonNode.Buffers"/>を自動計算したものに設定するかどうか</param>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexes(System.Collections.Generic.IEnumerable{Altseed2.Vector2F},Altseed2.Color,System.Boolean)">
            <summary>
            座標をもとに頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の座標を格納する<see cref="T:System.Collections.Generic.IEnumerable`1" /></param>
            <param name="color">各頂点に設定する色</param>
            <param name="resetIB"><see cref="P:Altseed2.PolygonNode.Buffers"/>を自動計算したものに設定するかどうか</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="vertexes"/>がnullです。</exception>
        </member>
        <member name="M:Altseed2.PolygonNode.OverwriteVertexColor(Altseed2.Color)">
            <summary>
            各頂点に指定した色を設定します。
            </summary>
            <param name="color">設定する色</param>
        </member>
        <member name="P:Altseed2.PolygonNode.Buffers">
            <summary>
            インデックスバッファを取得または設定します。
            </summary>
            <exception cref="T:System.ArgumentNullException">設定しようとした値がnull</exception>
            <remarks>大きさは3の倍数である必要があります。余った要素は無視されます。</remarks>
        </member>
        <member name="M:Altseed2.PolygonNode.SetBuffers(System.ReadOnlySpan{System.Int32})">
            <summary>
            インデックスバッファーを設定します。
            </summary>
            <param name="buffers">設定するインデックスバッファー</param>
            <remarks>大きさは3の倍数である必要があります。余った要素は無視されます。</remarks>
        </member>
        <member name="M:Altseed2.PolygonNode.SetBuffers(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            インデックスバッファーを設定します。
            </summary>
            <param name="buffers">設定するインデックスバッファー</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="buffers"/>がnull</exception>
            <remarks>大きさは3の倍数である必要があります。余った要素は無視されます。</remarks>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexGroups(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{Altseed2.Vertex}})">
            <summary>
            設定した頂点のグループを設定し，そのグループごとに<see cref="T:Altseed2.PolygonNode"/>と同様の方式でインデックスバッファーを設定します。
            </summary>
            <param name="vertexes">設定する頂点のグループ</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="vertexes"/>または<paramref name="vertexes"/>内の要素がnull</exception>
        </member>
        <member name="M:Altseed2.PolygonNode.SetVertexGroupsFromPositions(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{Altseed2.Vector2F}},Altseed2.Color)">
            <summary>
            設定した座標をもとに頂点のグループを設定し，そのグループごとに<see cref="T:Altseed2.PolygonNode"/>と同様の方式でインデックスバッファーを設定します。
            </summary>
            <param name="vertexes">設定する頂点のグループ</param>
            <param name="color">設定する色</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="vertexes"/>または<paramref name="vertexes"/>内の要素がnull</exception>
        </member>
        <member name="M:Altseed2.PolygonNode.SetDefaultIndexBuffer">
            <summary>
            <see cref="T:Altseed2.PolygonNode"/>と同様の方法でインデックスバッファの設定を行います。
            </summary>
        </member>
        <member name="P:Altseed2.PolygonNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.PostEffectGaussianBlurNode">
            <summary>
            ガウスぼかしを適用するポストエフェクトのクラス
            </summary>
        </member>
        <member name="P:Altseed2.PostEffectGaussianBlurNode.Intensity">
            <summary>
            ぼけの強さを取得または設定します。
            </summary>
            <remarks>値が大きいほど画面がぼけます。</remarks>
        </member>
        <member name="M:Altseed2.PostEffectGaussianBlurNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PostEffectGaussianBlurNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectGaussianBlurNode.Draw(Altseed2.RenderTexture,Altseed2.Color)">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.PostEffectGrayScaleNode">
            <summary>
            ƒOƒŒ[ƒXƒP[ƒ‹‰»‚ð“K—p‚·‚éƒ|ƒXƒgƒGƒtƒFƒNƒg‚ÌƒNƒ‰ƒX
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectGrayScaleNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PostEffectGrayScaleNode"/>‚ÌV‚µ‚¢ƒCƒ“ƒXƒ^ƒ“ƒX‚ð¶¬‚µ‚Ü‚·B
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectGrayScaleNode.Draw(Altseed2.RenderTexture,Altseed2.Color)">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.PostEffectLightBloomNode">
            <summary>
            ライトブルームを適用するポストエフェクトのクラス
            </summary>
        </member>
        <member name="P:Altseed2.PostEffectLightBloomNode.Intensity">
            <summary>
            ぼけの強さを取得または設定します。
            </summary>
            <remarks>値が大きいほど光がぼけます。</remarks>
        </member>
        <member name="P:Altseed2.PostEffectLightBloomNode.Threshold">
            <summary>
            ぼかす画素の閾値を取得または設定します。
            </summary>
            <remarks>255を1.0とした数値を指定します。</remarks>
        </member>
        <member name="P:Altseed2.PostEffectLightBloomNode.Exposure">
            <summary>
            露光の強さを取得または設定します。
            </summary>
            <remarks>この値が大きいほど、ぼけた光が強くなります。</remarks>
        </member>
        <member name="P:Altseed2.PostEffectLightBloomNode.IsLuminanceMode">
            <summary>
            RGBではなく、輝度を参照してぼかす色を決定するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectLightBloomNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PostEffectLightBloomNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectLightBloomNode.Draw(Altseed2.RenderTexture,Altseed2.Color)">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.PostEffectNode">
            <summary>
            ポストエフェクトを扱うノードの基底クラス
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectNode.GetBuffer(System.Int32,Altseed2.Vector2I,Altseed2.TextureFormat)">
            <summary>
            指定したIDとサイズ，フォーマットを持つ<see cref="T:Altseed2.RenderTexture"/>のインスタンスをキャッシュから検索し，取得します。
            </summary>
            <param name="identifier">検索する<see cref="T:Altseed2.RenderTexture"/>のID</param>
            <param name="size">検索する<see cref="T:Altseed2.RenderTexture"/>の大きさ</param>
            <param name="format">検索する<see cref="T:Altseed2.RenderTexture"/>のフォーマット</param>
            <returns><paramref name="identifier"/>，<paramref name="size"/>，<paramref name="format"/>を持つ<see cref="T:Altseed2.RenderTexture"/>のインスタンス</returns>
        </member>
        <member name="P:Altseed2.PostEffectNode.CameraGroup">
            <summary>
            このノードを描画するカメラを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.PostEffectNode.ZOrder">
            <summary>
            PostEffectNodeが描画される順番。DrawnNodeを描画した後にまとめて描画されます。
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PostEffectNode"/>の新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="M:Altseed2.PostEffectNode.Draw(Altseed2.RenderTexture,Altseed2.Color)">
            <summary>
            描画を実行します。
            </summary>
            <param name="src">描画先の<see cref="T:Altseed2.RenderTexture"/>のインスタンス</param>
            <param name="clearColor">描画されないピクセルを埋めるときの色</param>
        </member>
        <member name="T:Altseed2.PostEffectSepiaNode">
            <summary>
            セピア調にするポストエフェクトのクラス
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectSepiaNode.#ctor">
            <summary>
            <see cref="T:Altseed2.PostEffectSepiaNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.PostEffectSepiaNode.Draw(Altseed2.RenderTexture,Altseed2.Color)">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.ArcNode">
            <summary>
            円弧を描画するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.ArcNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ArcNode.EndDegree">
            <summary>
            描画を終了する角度を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ArcNode.Radius">
            <summary>
            半径を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ArcNode.StartDegree">
            <summary>
            描画を開始する頂点を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ArcNode.VertNum">
            <summary>
            頂点の個数を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.ArcNode.#ctor">
            <summary>
            <see cref="T:Altseed2.ArcNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.CircleNode">
            <summary>
            円を描画するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.CircleNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CircleNode.Radius">
            <summary>
            半径を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.CircleNode.VertNum">
            <summary>
            頂点の個数を取得または設定します。
            </summary>
            <exception cref="T:System.ArgumentException">設定しようとした値が 3 未満</exception>
        </member>
        <member name="M:Altseed2.CircleNode.#ctor">
            <summary>
            <see cref="T:Altseed2.CircleNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.LineNode">
            <summary>
            直線を描画するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.LineNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.LineNode.Point1">
            <summary>
            描画の始点を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.LineNode.Point2">
            <summary>
            描画の終点を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.LineNode.Thickness">
            <summary>
            直線の太さを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.LineNode.#ctor">
            <summary>
            <see cref="T:Altseed2.LineNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.RectangleNode">
            <summary>
            短形を描画するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.RectangleNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RectangleNode.RectangleSize">
            <summary>
            短形のサイズを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RectangleNode.#ctor">
            <summary>
            <see cref="T:Altseed2.RectangleNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.ShapeNode">
            <summary>
            基本的な図形を描画するノードの基底クラスを表します。
            </summary>
        </member>
        <member name="M:Altseed2.ShapeNode.#ctor">
            <summary>
            <see cref="T:Altseed2.ShapeNode"/>の新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="P:Altseed2.ShapeNode.Altseed2#ICullableDrawn#CullingId">
            <summary>
            カリング用ID
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.CameraGroup">
            <summary>
            カメラグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.ZOrder">
            <summary>
            描画時の重ね順を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.IsDrawn">
            <summary>
            このノードを描画するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.IsDrawnActually">
            <summary>
            先祖の<see cref="P:Altseed2.ShapeNode.IsDrawn" />を考慮して、このノードを描画するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.AlphaBlend">
            <summary>
            ブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.Src">
            <summary>
            <see cref="P:Altseed2.ShapeNode.Texture"/>を切り出す範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.Texture">
            <summary>
            描画するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.Material">
            <summary>
            描画に適用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.ShapeNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="M:Altseed2.ShapeNode.OverwriteVertexColor(Altseed2.Color)">
            <summary>
            各頂点に指定した色を設定する
            </summary>
            <param name="color">設定する色</param>
        </member>
        <member name="M:Altseed2.ShapeNode.SetVertexes(System.ReadOnlySpan{Altseed2.Vector2F},Altseed2.Color)">
            <summary>
            座標をもとに頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の座標を格納する<see cref="T:System.ReadOnlySpan`1"/></param>
            <param name="color">各頂点に設定する色</param>
        </member>
        <member name="M:Altseed2.ShapeNode.SetVertexes(System.ReadOnlySpan{Altseed2.Vertex})">
            <summary>
            頂点情報を設定します。
            </summary>
            <param name="vertexes">設定する各頂点の情報を格納する<see cref="T:System.ReadOnlySpan`1"/></param>
        </member>
        <member name="P:Altseed2.ShapeNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.TriangleNode">
            <summary>
            三角形を描画するノードのクラス
            </summary>
        </member>
        <member name="P:Altseed2.TriangleNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TriangleNode.Point1">
            <summary>
            頂点1を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TriangleNode.Point2">
            <summary>
            頂点2を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TriangleNode.Point3">
            <summary>
            頂点3を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.TriangleNode.#ctor">
            <summary>
            <see cref="T:Altseed2.TriangleNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.SpriteNode">
            <summary>
            テクスチャを描画するノードを表します。
            </summary>
        </member>
        <member name="M:Altseed2.SpriteNode.#ctor">
            <summary>
            <see cref="T:Altseed2.SpriteNode"/>の新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="P:Altseed2.SpriteNode.Altseed2#ICullableDrawn#CullingId">
            <summary>
            カリング用ID
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.CameraGroup">
            <summary>
            カメラグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.ZOrder">
            <summary>
            描画時の重ね順を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.IsDrawn">
            <summary>
            このノードを描画するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.IsDrawnActually">
            <summary>
            先祖の<see cref="P:Altseed2.SpriteNode.IsDrawn"/>を考慮して、このノードを描画するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.AlphaBlend">
            <summary>
            ブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.Src">
            <summary>
            描画範囲を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.Texture">
            <summary>
            描画するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.Material">
            <summary>
            使用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.SpriteNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.SpriteNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.TextNode">
            <summary>
            テキストを描画するノードのクラス
            </summary>
        </member>
        <member name="M:Altseed2.TextNode.#ctor">
            <summary>
            新しいインスタンスを生成します。
            </summary>
            <exception cref="T:System.InvalidOperationException">Graphics機能が初期化されていない。</exception>
        </member>
        <member name="P:Altseed2.TextNode.Altseed2#ICullableDrawn#CullingId">
            <summary>
            カリング用ID
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.CameraGroup">
            <summary>
            カメラグループを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.ZOrder">
            <summary>
            描画時の重ね順を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.IsDrawn">
            <summary>
            このノードを描画するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.IsDrawnActually">
            <summary>
            先祖の<see cref="P:Altseed2.TextNode.IsDrawn"/>を考慮して、このノードを描画するかどうかを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.InheritedTransform">
            <inheritdoc/>
        </member>
        <member name="P:Altseed2.TextNode.Color">
            <summary>
            色を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.AlphaBlend">
            <summary>
            ブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.Text">
            <summary>
            描画する文字列を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.Font">
            <summary>
            文字列の描画に使用するフォントを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.MaterialGlyph">
            <summary>
            文字の描画に使用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.MaterialImage">
            <summary>
            文字テクスチャの描画に使用するマテリアルを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.Weight">
            <summary>
            文字の太さを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.CharacterSpace">
            <summary>
            字間をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.LineGap">
            <summary>
            行間をピクセル単位で取得または設定します。
            Nullを指定するとフォント標準の行間を使用します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.IsEnableKerning">
            <summary>
            カーニングの有無を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.WritingDirection">
            <summary>
            行の方向を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TextNode.ContentSize">
            <inheritdoc/>
        </member>
        <member name="T:Altseed2.TransformerNode">
            <summary>
            親ノードの座標変形を制御するノード
            </summary>
        </member>
        <member name="P:Altseed2.TransformerNode.Transform">
            <summary>
            親ノードにおける変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformerNode.InheritedTransform">
            <summary>
            親ノードにおける先祖の変形を加味した変形行列を設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformerNode.AbsoluteTransform">
            <summary>
            親ノードにおける先祖の変形および<see cref="T:Altseed2.Rendered"/>への変形を加味した最終的な変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformerNode.RequireCalcTransform">
            <summary>
            Transformを再度計算するか
            </summary>
        </member>
        <member name="T:Altseed2.TransformNode">
            <summary>
            変形行列を備えたノードのクラス
            </summary>
        </member>
        <member name="M:Altseed2.TransformNode.#ctor">
            <summary>
            <see cref="T:Altseed2.TransformNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.InheritedTransform">
            <summary>
            先祖の変形を加味した変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.AbsoluteTransform">
            <summary>
            先祖の変形および<see cref="P:Altseed2.TransformNode.CenterPosition"/>を加味した最終的な変形行列を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.Angle">
            <summary>
            角度(度数法)を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.Position">
            <summary>
            座標を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.CenterPosition">
            <summary>
            中心となる座標をピクセル単位で取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.Scale">
            <summary>
            拡大率を取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.ContentSize">
            <summary>
            コンテンツのサイズを取得します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.HorizontalFlip">
            <summary>
            左右を反転するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.TransformNode.VerticalFlip">
            <summary>
            上下を反転するかどうかを取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.TransformNode.UpdateTransform">
            <summary>
            <see cref="P:Altseed2.TransformNode.InheritedTransform"/>を再計算します。
            直近先祖の<see cref="P:Altseed2.TransformNode.InheritedTransform"/>も考慮した上で最終的な変形を計算し、
            既存の子孫ノードにも伝播します。
            </summary>
        </member>
        <member name="M:Altseed2.TransformNode.CalcTransform">
            <summary>
            <see cref="P:Altseed2.TransformNode.Transform"/> を再計算します。
            </summary>
        </member>
        <member name="M:Altseed2.TransformNode.PropagateTransform(Altseed2.Node,Altseed2.Matrix44F)">
            <summary>
            子孫ノードのうち<see cref="T:Altseed2.TransformNode"/>に対して変換行列を伝播させます。
            </summary>
        </member>
        <member name="F:Altseed2.TransformNodeInfo._SizeBoxLines">
            <summary>
            <see cref="!:TransformNode.Size"/>の領域を表示します。
            </summary>
        </member>
        <member name="F:Altseed2.TransformNodeInfo._PivotBox">
            <summary>
            <see cref="!:TransformNode.Pivot"/>の領域を表示します。
            </summary>
        </member>
        <member name="T:Altseed2.RuledTransitionState">
            <summary>
            <see cref="T:Altseed2.RuledTransitionNode"/>の制御に用いる設定のクラス
            </summary>
        </member>
        <member name="P:Altseed2.RuledTransitionState.TargetNode">
            <summary>
            この設定を適用するノードを取得または設定します。
            </summary>
        </member>
        <member name="P:Altseed2.RuledTransitionState.Duration">
            <summary>
            遷移に掛かる時間を取得または設定します。
            </summary>
        </member>
        <member name="M:Altseed2.RuledTransitionState.#ctor">
            <summary>
            <see cref="T:Altseed2.RuledTransitionState"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="T:Altseed2.RuledTransitionNode">
            <summary>
            パラメータ制御可能な<see cref="T:Altseed2.TransitionNode"/>のクラス
            </summary>
        </member>
        <member name="M:Altseed2.RuledTransitionNode.#ctor(Altseed2.RuledTransitionState,Altseed2.RuledTransitionState,Altseed2.Texture2D)">
            <summary>
            <see cref="T:Altseed2.RuledTransitionNode"/>の新しいインスタンスを生成します。
            </summary>
            <param name="closingState">遷移元のノードにおける<see cref="T:Altseed2.RuledTransitionState"/>のインスタンス</param>
            <param name="openingState">遷移先のノードにおける<see cref="T:Altseed2.RuledTransitionState"/>のインスタンス</param>
            <param name="maskTexture">指定するマスクテクスチャ</param>
            
        </member>
        <member name="T:Altseed2.TransitionNode">
            <summary>
            画面遷移を行うノードのクラス
            </summary>
        </member>
        <member name="F:Altseed2.TransitionNode._OldNode">
            <summary>
            トランジションによって取り除かれるノード
            </summary>
        </member>
        <member name="F:Altseed2.TransitionNode._NewNode">
            <summary>
            トランジションによって追加されるノード
            </summary>
        </member>
        <member name="F:Altseed2.TransitionNode._Coroutine">
            <summary>
            トランジションを行うコルーチン
            </summary>
        </member>
        <member name="M:Altseed2.TransitionNode.#ctor(Altseed2.Node,Altseed2.Node,System.Single,System.Single)">
            <summary>
            <see cref="T:Altseed2.TransitionNode"/>の新しいインスタンスを作成します。
            </summary>
            <param name="oldNode">トランジションによって取り除かれるノード</param>
            <param name="newNode">トランジションによって追加されるノード</param>
            <param name="closingDuration">トランジションが始まってからノードが入れ替わるまでの期間</param>
            <param name="openingDuration">ノードが入れ替わってからトランジションが終わるまでの期間</param>
        </member>
        <member name="M:Altseed2.TransitionNode.OnClosing(System.Single)">
            <summary>
            ノードが入れ替わる前の処理を記述します。
            </summary>
            <param name="progress">0.0f ~ 1.0fの範囲で、ノードが入れ替わるまでの進行度を受け取ります。</param>
        </member>
        <member name="M:Altseed2.TransitionNode.OnOpening(System.Single)">
            <summary>
            ノードが入れ替わった後の処理を記述します。
            </summary>
            <param name="progress">0.0f ~ 1.0fの範囲で、ノードが入れ替わった後の進行度を受け取ります。</param>
        </member>
        <member name="M:Altseed2.TransitionNode.OnNodeSwapping">
            <summary>
            ノードが入れ替わる直前の処理を記述します。
            </summary>
        </member>
        <member name="M:Altseed2.TransitionNode.OnNodeSwapped">
            <summary>
            ノードが入れ替わった直後の処理を記述します。
            </summary>
        </member>
        <member name="M:Altseed2.TransitionNode.OnTransitionBegin">
            <summary>
            トランジションが開始する瞬間の処理を記述します。
            </summary>
        </member>
        <member name="M:Altseed2.TransitionNode.OnTransitionEnd">
            <summary>
            トランジションが終了する直前の処理を記述します。
            </summary>
        </member>
        <member name="M:Altseed2.TransitionNode.GetCoroutine(System.Single,System.Single)">
            <summary>
            トランジションを行うコルーチン
            </summary>
        </member>
        <member name="T:Altseed2.CollisionCollection">
            <summary>
            コライダを格納するコレクション
            </summary>
        </member>
        <member name="P:Altseed2.CollisionCollection.Count">
            <summary>
            格納されている<see cref="T:Altseed2.ColliderNode"/>の個数を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionCollection.Add(Altseed2.ColliderNode)">
            <summary>
            指定したコライダを追加します。
            </summary>
            <param name="node">追加するコライダのノード</param>
            <exception cref="T:System.ArgumentException"><paramref name="node"/>が親に存在しない</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/>がnull</exception>
            <returns><paramref name="node"/>を追加出来たらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.CollisionCollection.Clear">
            <summary>
            全ての要素を削除します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionCollection.Contains(Altseed2.ColliderNode)">
            <summary>
            指定した<see cref="T:Altseed2.ColliderNode"/>が格納されているかどうかを返します。
            </summary>
            <param name="node">検索する<see cref="T:Altseed2.ColliderNode"/></param>
            <returns><paramref name="node"/>が格納されていたらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.CollisionCollection.GetEnumerator">
            <summary>
            列挙をサポートする構造体を返します。
            </summary>
            <returns><see cref="T:Altseed2.CollisionCollection.Enumerator"/>の新しいインスタンス</returns>
        </member>
        <member name="M:Altseed2.CollisionCollection.Remove(Altseed2.ColliderNode)">
            <summary>
            指定したコライダを削除します。
            </summary>
            <param name="node">削除するコライダのノード</param>
            <exception cref="T:System.ArgumentException"><paramref name="node"/>が親に存在しない</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="node"/>がnull</exception>
            <returns><paramref name="node"/>を削除出来たらtrue，それ以外でfalse</returns>
        </member>
        <member name="M:Altseed2.CollisionCollection.Update">
            <summary>
            衝突判定を実施します。
            </summary>
        </member>
        <member name="T:Altseed2.CollisionCollection.Enumerator">
            <summary>
            列挙をサポートする構造体
            </summary>
        </member>
        <member name="P:Altseed2.CollisionCollection.Enumerator.Current">
            <summary>
            現在列挙されている要素を取得します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionCollection.Enumerator.#ctor(Altseed2.CollisionCollection)">
            <summary>
            <see cref="T:Altseed2.CollisionCollection.Enumerator"/>の新しいインスタンスを生成します。
            </summary>
            <param name="collection">使用する<see cref="T:Altseed2.CollisionCollection"/>のインスタンス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="collection"/>がnull</exception>
        </member>
        <member name="M:Altseed2.CollisionCollection.Enumerator.Dispose">
            <summary>
            このインスタンスを破棄します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionCollection.Enumerator.MoveNext">
            <summary>
            列挙を次に進めます。
            </summary>
            <exception cref="T:System.InvalidOperationException">列挙中にコレクションが変更された</exception>
            <returns>列挙を次に進められたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.CollisionInfo">
            <summary>
            衝突判定に関する情報を格納したクラス
            </summary>
        </member>
        <member name="P:Altseed2.CollisionInfo.CollisionType">
            <summary>
            衝突の種類を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.CollisionInfo.SelfCollider">
            <summary>
            自身の<see cref="T:Altseed2.ColliderNode"/>を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.CollisionInfo.TheirsCollider">
            <summary>
            衝突相手の<see cref="T:Altseed2.ColliderNode"/>を取得します。
            </summary>
        </member>
        <member name="T:Altseed2.CollisionManagerNode">
            <summary>
            衝突判定を制御するノード
            </summary>
        </member>
        <member name="P:Altseed2.CollisionManagerNode.ColliderCount">
            <summary>
            格納されているコライダの個数を取得します。
            </summary>
        </member>
        <member name="P:Altseed2.CollisionManagerNode.Colliders">
            <summary>
            登録されているコライダを取得します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionManagerNode.#ctor">
            <summary>
            <see cref="T:Altseed2.CollisionManagerNode"/>の新しいインスタンスを生成します。
            </summary>
        </member>
        <member name="M:Altseed2.CollisionManagerNode.ContainsCollider(Altseed2.ColliderNode)">
            <summary>
            指定した<see cref="T:Altseed2.ColliderNode"/>が格納されているかどうかを返します。
            </summary>
            <param name="node">検索する<see cref="T:Altseed2.ColliderNode"/></param>
            <returns><paramref name="node"/>が格納されていたらtrue，それ以外でfalse</returns>
        </member>
        <member name="T:Altseed2.CollisionType">
            <summary>
            衝突のタイプ
            </summary>
        </member>
        <member name="F:Altseed2.CollisionType.Enter">
            <summary>
            前フレームでは衝突しておらず，このフレームで衝突している
            </summary>
        </member>
        <member name="F:Altseed2.CollisionType.Stay">
            <summary>
            前フレームでは衝突しており，このフレームでも衝突している
            </summary>
        </member>
        <member name="F:Altseed2.CollisionType.Exit">
            <summary>
            前フレームでは衝突しており，このフレームで衝突していない
            </summary>
        </member>
        <member name="T:Altseed2.ICollisionEventReceiver">
            <summary>
            衝突判定を感知するイベントを提供するインターフェイス
            </summary>
        </member>
        <member name="M:Altseed2.ICollisionEventReceiver.OnCollisionEnter(Altseed2.CollisionInfo)">
            <summary>
            衝突を開始した時に呼び出されます。
            </summary>
            <param name="info">衝突に関する情報</param>
        </member>
        <member name="M:Altseed2.ICollisionEventReceiver.OnCollisionExit(Altseed2.CollisionInfo)">
            <summary>
            衝突を終了した時に呼び出されます。
            </summary>
            <param name="info">衝突に関する情報</param>
        </member>
        <member name="M:Altseed2.ICollisionEventReceiver.OnCollisionStay(Altseed2.CollisionInfo)">
            <summary>
            衝突が継続している時に呼び出されます。
            </summary>
            <param name="info">衝突に関する情報</param>
        </member>
    </members>
</doc>
